var tipuesearch = {"pages": [
     {"title": "asn1util", "text": " By this unit you can parse ASN.1 BER encoded data to elements or build back any elements to ASN.1 BER encoded buffer. You can dump ASN.1 BER encoded data to human readable form for easy debugging, too.  Supported element types are: ASN1_BOOL, ASN1_INT, ASN1_OCTSTR, ASN1_NULL, ASN1_OBJID, ASN1_ENUM, ASN1_SEQ, ASN1_SETOF, ASN1_IPADDR, ASN1_COUNTER, ASN1_GAUGE, ASN1_TIMETICKS, ASN1_OPAQUE  For sample of using, look to TSnmpSend or TLdapSendclass.   ", "tags": "", "url": "asn1util.html"},
     {"title": "asn1util.ASN1_BOOL", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_BOOL"},
     {"title": "asn1util.ASN1_INT", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_INT"},
     {"title": "asn1util.ASN1_OCTSTR", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_OCTSTR"},
     {"title": "asn1util.ASN1_NULL", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_NULL"},
     {"title": "asn1util.ASN1_OBJID", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_OBJID"},
     {"title": "asn1util.ASN1_ENUM", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_ENUM"},
     {"title": "asn1util.ASN1_SEQ", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_SEQ"},
     {"title": "asn1util.ASN1_SETOF", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_SETOF"},
     {"title": "asn1util.ASN1_IPADDR", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_IPADDR"},
     {"title": "asn1util.ASN1_COUNTER", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_COUNTER"},
     {"title": "asn1util.ASN1_GAUGE", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_GAUGE"},
     {"title": "asn1util.ASN1_TIMETICKS", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_TIMETICKS"},
     {"title": "asn1util.ASN1_OPAQUE", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_OPAQUE"},
     {"title": "asn1util.ASN1_COUNTER64", "text": "   ", "tags": "", "url": "asn1util.html#ASN1_COUNTER64"},
     {"title": "asn1util.ASNEncOIDItem", "text": "Encodes OID item to binary form.    ", "tags": "", "url": "asn1util.html#ASNEncOIDItem"},
     {"title": "asn1util.ASNDecOIDItem", "text": "Decodes an OID item of the next element in the &quot;Buffer&quot; from the &quot;Start&quot; position.    ", "tags": "", "url": "asn1util.html#ASNDecOIDItem"},
     {"title": "asn1util.ASNEncLen", "text": "Encodes the length of ASN.1 element to binary.    ", "tags": "", "url": "asn1util.html#ASNEncLen"},
     {"title": "asn1util.ASNDecLen", "text": "Decodes length of next element in &quot;Buffer&quot; from the &quot;Start&quot; position.    ", "tags": "", "url": "asn1util.html#ASNDecLen"},
     {"title": "asn1util.ASNEncInt", "text": "Encodes a signed integer to ASN.1 binary    ", "tags": "", "url": "asn1util.html#ASNEncInt"},
     {"title": "asn1util.ASNEncUInt", "text": "Encodes unsigned integer into ASN.1 binary    ", "tags": "", "url": "asn1util.html#ASNEncUInt"},
     {"title": "asn1util.ASNObject", "text": "Encodes ASN.1 object to binary form.    ", "tags": "", "url": "asn1util.html#ASNObject"},
     {"title": "asn1util.ASNItem", "text": "Beginning with the &quot;Start&quot; position, decode the ASN.1 item of the next element in &quot;Buffer&quot;. Type of item is stored in &quot;ValueType.&quot;    ", "tags": "", "url": "asn1util.html#ASNItem"},
     {"title": "asn1util.MibToId", "text": "Encodes an MIB OID string to binary form.    ", "tags": "", "url": "asn1util.html#MibToId"},
     {"title": "asn1util.IdToMib", "text": "Decodes MIB OID from binary form to string form.    ", "tags": "", "url": "asn1util.html#IdToMib"},
     {"title": "asn1util.IntMibToStr", "text": "Encodes an one number from MIB OID to binary form. (used internally from MibToId)    ", "tags": "", "url": "asn1util.html#IntMibToStr"},
     {"title": "asn1util.ASNdump", "text": "Convert ASN.1 BER encoded buffer to human readable form for debugging.    ", "tags": "", "url": "asn1util.html#ASNdump"},
     {"title": "blcksock", "text": "   ", "tags": "", "url": "blcksock.html"},
     {"title": "blcksock.ESynapseError", "text": " When you enable generating of exceptions, this exception is raised by Synapse's units.   ", "tags": "", "url": "blcksock.ESynapseError.html"},
     {"title": "blcksock.ESynapseError.ErrorCode", "text": "Code of error. Value depending on used operating system   ", "tags": "", "url": "blcksock.ESynapseError.html#ErrorCode"},
     {"title": "blcksock.ESynapseError.ErrorMessage", "text": "Human readable description of error.   ", "tags": "", "url": "blcksock.ESynapseError.html#ErrorMessage"},
     {"title": "blcksock.TSynaOption", "text": "   ", "tags": "", "url": "blcksock.TSynaOption.html"},
     {"title": "blcksock.TSynaOption.Option", "text": "   ", "tags": "", "url": "blcksock.TSynaOption.html#Option"},
     {"title": "blcksock.TSynaOption.Enabled", "text": "   ", "tags": "", "url": "blcksock.TSynaOption.html#Enabled"},
     {"title": "blcksock.TSynaOption.Value", "text": "   ", "tags": "", "url": "blcksock.TSynaOption.html#Value"},
     {"title": "blcksock.TBlockSocket", "text": " This is parent class for other class with protocol implementations. Do not use this class directly! Use TICMPBlockSocket, TRAWBlockSocket, TTCPBlockSocket or TUDPBlockSocket instead.   ", "tags": "", "url": "blcksock.TBlockSocket.html"},
     {"title": "blcksock.TBlockSocket.FSocket", "text": "   ", "tags": "", "url": "blcksock.TBlockSocket.html#FSocket"},
     {"title": "blcksock.TBlockSocket.FLastError", "text": "   ", "tags": "", "url": "blcksock.TBlockSocket.html#FLastError"},
     {"title": "blcksock.TBlockSocket.FLastErrorDesc", "text": "   ", "tags": "", "url": "blcksock.TBlockSocket.html#FLastErrorDesc"},
     {"title": "blcksock.TBlockSocket.FOwner", "text": "   ", "tags": "", "url": "blcksock.TBlockSocket.html#FOwner"},
     {"title": "blcksock.TBlockSocket.SetDelayedOption", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetDelayedOption"},
     {"title": "blcksock.TBlockSocket.DelayedOption", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#DelayedOption"},
     {"title": "blcksock.TBlockSocket.ProcessDelayedOptions", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#ProcessDelayedOptions"},
     {"title": "blcksock.TBlockSocket.InternalCreateSocket", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#InternalCreateSocket"},
     {"title": "blcksock.TBlockSocket.SetSin", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetSin"},
     {"title": "blcksock.TBlockSocket.GetSinIP", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSinIP"},
     {"title": "blcksock.TBlockSocket.GetSinPort", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSinPort"},
     {"title": "blcksock.TBlockSocket.DoStatus", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#DoStatus"},
     {"title": "blcksock.TBlockSocket.DoReadFilter", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#DoReadFilter"},
     {"title": "blcksock.TBlockSocket.DoMonitor", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#DoMonitor"},
     {"title": "blcksock.TBlockSocket.DoCreateSocket", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#DoCreateSocket"},
     {"title": "blcksock.TBlockSocket.DoHeartbeat", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#DoHeartbeat"},
     {"title": "blcksock.TBlockSocket.LimitBandwidth", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#LimitBandwidth"},
     {"title": "blcksock.TBlockSocket.SetBandwidth", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetBandwidth"},
     {"title": "blcksock.TBlockSocket.TestStopFlag", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#TestStopFlag"},
     {"title": "blcksock.TBlockSocket.InternalSendStream", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#InternalSendStream"},
     {"title": "blcksock.TBlockSocket.InternalCanRead", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#InternalCanRead"},
     {"title": "blcksock.TBlockSocket.InternalCanWrite", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#InternalCanWrite"},
     {"title": "blcksock.TBlockSocket.Create", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#Create"},
     {"title": "blcksock.TBlockSocket.CreateAlternate", "text": "Create object and load all necessary socket library. What library is loaded is described by STUB parameter. If STUB is empty string, then is loaded default libraries.    ", "tags": "", "url": "blcksock.TBlockSocket.html#CreateAlternate"},
     {"title": "blcksock.TBlockSocket.Destroy", "text": "    ", "tags": "", "url": "blcksock.TBlockSocket.html#Destroy"},
     {"title": "blcksock.TBlockSocket.CreateSocket", "text": "If family is not SF_Any, then create socket with type defined in Family property. If family is SF_Any, then do nothing! (socket is created automaticly when you know what type of socket you need to create. (i.e. inside Connect or Bind call.) When socket is created, then is aplyed all stored delayed socket options.    ", "tags": "", "url": "blcksock.TBlockSocket.html#CreateSocket"},
     {"title": "blcksock.TBlockSocket.CreateSocketByName", "text": "It create socket. Address resolving of Value tells what type of socket is created. If Value is resolved as IPv4 IP, then is created IPv4 socket. If value is resolved as IPv6 address, then is created IPv6 socket.    ", "tags": "", "url": "blcksock.TBlockSocket.html#CreateSocketByName"},
     {"title": "blcksock.TBlockSocket.CloseSocket", "text": "Destroy socket in use. This method is also automatically called from object destructor.    ", "tags": "", "url": "blcksock.TBlockSocket.html#CloseSocket"},
     {"title": "blcksock.TBlockSocket.AbortSocket", "text": "Abort any work on Socket and destroy them.    ", "tags": "", "url": "blcksock.TBlockSocket.html#AbortSocket"},
     {"title": "blcksock.TBlockSocket.Bind", "text": "Connects socket to local IP address and PORT. IP address may be numeric or symbolic ('192.168.74.50', 'cosi.nekde.cz', 'ff08::1'). The same for PORT      it may be number or mnemonic port ('23', 'telnet').    If port value is '0', system chooses itself and conects unused port in the range 1024 to 4096 (this depending by operating system!). Structure LocalSin is filled after calling this method.  Note: If you call this on non-created socket, then socket is created automaticly.  Warning: when you call : Bind('0.0.0.0','0'); then is nothing done! In this case is used implicit system bind instead.    ", "tags": "", "url": "blcksock.TBlockSocket.html#Bind"},
     {"title": "blcksock.TBlockSocket.Connect", "text": "Connects socket to remote IP address and PORT. The same rules as with BIND method are valid. The only exception is that PORT with 0 value will not be connected!  Structures LocalSin and RemoteSin will be filled with valid values.  When you call this on non-created socket, then socket is created automaticly. Type of created socket is by Family property. If is used SF_IP4, then is created socket for IPv4. If is used SF_IP6, then is created socket for IPv6. When you have family on SF_Any (default!), then type of created socket is determined by address resolving of destination address. (Not work properly on prilimitary winsock IPv6 support!)    ", "tags": "", "url": "blcksock.TBlockSocket.html#Connect"},
     {"title": "blcksock.TBlockSocket.Listen", "text": "Sets socket to receive mode for new incoming connections. It is necessary to use TBlockSocket.BIND function call before this method to select receiving port!    ", "tags": "", "url": "blcksock.TBlockSocket.html#Listen"},
     {"title": "blcksock.TBlockSocket.Accept", "text": "Waits until new incoming connection comes. After it comes a new socket is automatically created (socket handler is returned by this function as result).    ", "tags": "", "url": "blcksock.TBlockSocket.html#Accept"},
     {"title": "blcksock.TBlockSocket.SendBuffer", "text": "Sends data of LENGTH from BUFFER address via connected socket. System automatically splits data to packets.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendBuffer"},
     {"title": "blcksock.TBlockSocket.SendByte", "text": "One data BYTE is sent via connected socket.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendByte"},
     {"title": "blcksock.TBlockSocket.SendString", "text": "Send data string via connected socket. Any terminator is not added! If you need send true string with CR-LF termination, you must add CR-LF characters to sended string! Because any termination is not added automaticly, you can use this function for sending any binary data in binary string.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendString"},
     {"title": "blcksock.TBlockSocket.SendInteger", "text": "Send integer as four bytes to socket.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendInteger"},
     {"title": "blcksock.TBlockSocket.SendBlock", "text": "Send data as one block to socket. Each block begin with 4 bytes with length of data in block. This 4 bytes is added automaticly by this function.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendBlock"},
     {"title": "blcksock.TBlockSocket.SendStreamRaw", "text": "Send data from stream to socket.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendStreamRaw"},
     {"title": "blcksock.TBlockSocket.SendStream", "text": "Send content of stream to socket. It using SendBlock method    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendStream"},
     {"title": "blcksock.TBlockSocket.SendStreamIndy", "text": "Send content of stream to socket. It using SendBlock method and this is compatible with streams in Indy library.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendStreamIndy"},
     {"title": "blcksock.TBlockSocket.RecvBuffer", "text": "Note: This is low-level receive function. You must be sure if data is waiting for read before call this function for avoid deadlock!  Waits until allocated buffer is filled by received data. Returns number of data received, which equals to LENGTH value under normal operation. If it is not equal the communication channel is possibly broken.  On stream oriented sockets if is received 0 bytes, it mean 'socket is closed!&quot;  On datagram socket is readed first waiting datagram.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvBuffer"},
     {"title": "blcksock.TBlockSocket.RecvBufferEx", "text": "Note: This is high-level receive function. It using internal LineBuffer and you can combine this function freely with other high-level functions!  Method waits until data is received. If no data is received within TIMEOUT (in milliseconds) period, LastError is set to WSAETIMEDOUT. Methods serves for reading any size of data (i.e. one megabyte...). This method is preffered for reading from stream sockets (like TCP).    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvBufferEx"},
     {"title": "blcksock.TBlockSocket.RecvBufferStr", "text": "Similar to RecvBufferEx, but readed data is stored in binary string, not in memory buffer.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvBufferStr"},
     {"title": "blcksock.TBlockSocket.RecvByte", "text": "Note: This is high-level receive function. It using internal LineBuffer and you can combine this function freely with other high-level functions.  Waits until one data byte is received which is also returned as function result. If no data is received within TIMEOUT (in milliseconds)period, LastError is set to WSAETIMEDOUT and result have value 0.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvByte"},
     {"title": "blcksock.TBlockSocket.RecvInteger", "text": "Note: This is high-level receive function. It using internal LineBuffer and you can combine this function freely with other high-level functions.  Waits until one four bytes are received and return it as one Ineger Value. If no data is received within TIMEOUT (in milliseconds)period, LastError is set to WSAETIMEDOUT and result have value 0.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvInteger"},
     {"title": "blcksock.TBlockSocket.RecvString", "text": "Note: This is high-level receive function. It using internal LineBuffer and you can combine this function freely with other high-level functions.  Method waits until data string is received. This string is terminated by CR-LF characters. The resulting string is returned without this termination (CR-LF)! If ConvertLineEnd is used, then CR-LF sequence may not be exactly CR-LF. See ConvertLineEnd description. If no data is received within TIMEOUT (in milliseconds) period, LastError is set to WSAETIMEDOUT. You may also specify maximum length of reading data by MaxLineLength property.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvString"},
     {"title": "blcksock.TBlockSocket.RecvTerminated", "text": "Note: This is high-level receive function. It using internal LineBuffer and you can combine this function freely with other high-level functions.  Method waits until data string is received. This string is terminated by Terminator string. The resulting string is returned without this termination. If no data is received within TIMEOUT (in milliseconds) period, LastError is set to WSAETIMEDOUT. You may also specify maximum length of reading data by MaxLineLength property.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvTerminated"},
     {"title": "blcksock.TBlockSocket.RecvPacket", "text": "Note: This is high-level receive function. It using internal LineBuffer and you can combine this function freely with other high-level functions.  Method reads all data waiting for read. If no data is received within TIMEOUT (in milliseconds) period, LastError is set to WSAETIMEDOUT. Methods serves for reading unknown size of data. Because before call this function you don't know size of received data, returned data is stored in dynamic size binary string. This method is preffered for reading from stream sockets (like TCP). It is very goot for receiving datagrams too! (UDP protocol)    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvPacket"},
     {"title": "blcksock.TBlockSocket.RecvBlock", "text": "Read one block of data from socket. Each block begin with 4 bytes with length of data in block. This function read first 4 bytes for get lenght, then it wait for reported count of bytes.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvBlock"},
     {"title": "blcksock.TBlockSocket.RecvStreamRaw", "text": "Read all data from socket to stream until socket is closed (or any error occured.)    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvStreamRaw"},
     {"title": "blcksock.TBlockSocket.RecvStreamSize", "text": "Read requested count of bytes from socket to stream.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvStreamSize"},
     {"title": "blcksock.TBlockSocket.RecvStream", "text": "Receive data to stream. It using RecvBlock method.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvStream"},
     {"title": "blcksock.TBlockSocket.RecvStreamIndy", "text": "Receive data to stream. This function is compatible with similar function in Indy library. It using RecvBlock method.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvStreamIndy"},
     {"title": "blcksock.TBlockSocket.PeekBuffer", "text": "Same as RecvBuffer, but readed data stays in system input buffer. Warning: this function not respect data in LineBuffer! Is not recommended to use this function!    ", "tags": "", "url": "blcksock.TBlockSocket.html#PeekBuffer"},
     {"title": "blcksock.TBlockSocket.PeekByte", "text": "Same as RecvByte, but readed data stays in input system buffer. Warning: this function not respect data in LineBuffer! Is not recommended to use this function!    ", "tags": "", "url": "blcksock.TBlockSocket.html#PeekByte"},
     {"title": "blcksock.TBlockSocket.WaitingData", "text": "On stream sockets it returns number of received bytes waiting for picking. 0 is returned when there is no such data. On datagram socket it returns length of the first waiting datagram. Returns 0 if no datagram is waiting.    ", "tags": "", "url": "blcksock.TBlockSocket.html#WaitingData"},
     {"title": "blcksock.TBlockSocket.WaitingDataEx", "text": "Same as WaitingData, but if exists some of data in Linebuffer, return their length instead.    ", "tags": "", "url": "blcksock.TBlockSocket.html#WaitingDataEx"},
     {"title": "blcksock.TBlockSocket.Purge", "text": "Clear all waiting data for read from buffers.    ", "tags": "", "url": "blcksock.TBlockSocket.html#Purge"},
     {"title": "blcksock.TBlockSocket.SetLinger", "text": "Sets linger. Enabled linger means that the system waits another LINGER (in milliseconds) time for delivery of sent data. This function is only for stream type of socket! (TCP)    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetLinger"},
     {"title": "blcksock.TBlockSocket.GetSinLocal", "text": "Actualize values in LocalSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSinLocal"},
     {"title": "blcksock.TBlockSocket.GetSinRemote", "text": "Actualize values in RemoteSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSinRemote"},
     {"title": "blcksock.TBlockSocket.GetSins", "text": "Actualize values in LocalSin and RemoteSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSins"},
     {"title": "blcksock.TBlockSocket.ResetLastError", "text": "Reset LastError and LastErrorDesc to non-error state.    ", "tags": "", "url": "blcksock.TBlockSocket.html#ResetLastError"},
     {"title": "blcksock.TBlockSocket.SockCheck", "text": "If you &quot;manually&quot; call Socket API functions, forward their return code as parameter to this function, which evaluates it, eventually calls GetLastError and found error code returns and stores to LastError.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SockCheck"},
     {"title": "blcksock.TBlockSocket.ExceptCheck", "text": "If LastError contains some error code and RaiseExcept property is True, raise adequate exception.    ", "tags": "", "url": "blcksock.TBlockSocket.html#ExceptCheck"},
     {"title": "blcksock.TBlockSocket.LocalName", "text": "Returns local computer name as numerical or symbolic value. It try get fully qualified domain name. Name is returned in the format acceptable by functions demanding IP as input parameter.    ", "tags": "", "url": "blcksock.TBlockSocket.html#LocalName"},
     {"title": "blcksock.TBlockSocket.ResolveNameToIP", "text": "Try resolve name to all possible IP address. i.e. If you pass as name result of LocalName method, you get all IP addresses used by local system.    ", "tags": "", "url": "blcksock.TBlockSocket.html#ResolveNameToIP"},
     {"title": "blcksock.TBlockSocket.ResolveName", "text": "Try resolve name to primary IP address. i.e. If you pass as name result of LocalName method, you get primary IP addresses used by local system.    ", "tags": "", "url": "blcksock.TBlockSocket.html#ResolveName"},
     {"title": "blcksock.TBlockSocket.ResolveIPToName", "text": "Try resolve IP to their primary domain name. If IP not have domain name, then is returned original IP.    ", "tags": "", "url": "blcksock.TBlockSocket.html#ResolveIPToName"},
     {"title": "blcksock.TBlockSocket.ResolvePort", "text": "Try resolve symbolic port name to port number. (i.e. 'Echo' to 8)    ", "tags": "", "url": "blcksock.TBlockSocket.html#ResolvePort"},
     {"title": "blcksock.TBlockSocket.SetRemoteSin", "text": "Set information about remote side socket. It is good for seting remote side for sending UDP packet, etc.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetRemoteSin"},
     {"title": "blcksock.TBlockSocket.GetLocalSinIP", "text": "Picks IP socket address from LocalSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetLocalSinIP"},
     {"title": "blcksock.TBlockSocket.GetRemoteSinIP", "text": "Picks IP socket address from RemoteSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetRemoteSinIP"},
     {"title": "blcksock.TBlockSocket.GetLocalSinPort", "text": "Picks socket PORT number from LocalSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetLocalSinPort"},
     {"title": "blcksock.TBlockSocket.GetRemoteSinPort", "text": "Picks socket PORT number from RemoteSin.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetRemoteSinPort"},
     {"title": "blcksock.TBlockSocket.CanRead", "text": "Return True, if you can read any data from socket or is incoming connection on TCP based socket. Status is tested for time Timeout (in milliseconds). If value in Timeout is 0, status is only tested and continue. If value in Timeout is -1, run is breaked and waiting for read data maybe forever.  This function is need only on special cases, when you need use RecvBuffer function directly! read functioms what have timeout as calling parameter, calling this function internally.    ", "tags": "", "url": "blcksock.TBlockSocket.html#CanRead"},
     {"title": "blcksock.TBlockSocket.CanReadEx", "text": "Same as CanRead, but additionally return True if is some data in LineBuffer.    ", "tags": "", "url": "blcksock.TBlockSocket.html#CanReadEx"},
     {"title": "blcksock.TBlockSocket.CanWrite", "text": "Return True, if you can to socket write any data (not full sending buffer). Status is tested for time Timeout (in milliseconds). If value in Timeout is 0, status is only tested and continue. If value in Timeout is -1, run is breaked and waiting for write data maybe forever.  This function is need only on special cases!    ", "tags": "", "url": "blcksock.TBlockSocket.html#CanWrite"},
     {"title": "blcksock.TBlockSocket.SendBufferTo", "text": "Same as SendBuffer, but send datagram to address from RemoteSin. Usefull for sending reply to datagram received by function RecvBufferFrom.    ", "tags": "", "url": "blcksock.TBlockSocket.html#SendBufferTo"},
     {"title": "blcksock.TBlockSocket.RecvBufferFrom", "text": "Note: This is low-lever receive function. You must be sure if data is waiting for read before call this function for avoid deadlock!  Receives first waiting datagram to allocated buffer. If there is no waiting one, then waits until one comes. Returns length of datagram stored in BUFFER. If length exceeds buffer datagram is truncated. After this RemoteSin structure contains information about sender of UDP packet.    ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvBufferFrom"},
     {"title": "blcksock.TBlockSocket.GroupCanRead", "text": "This function is for check for incoming data on set of sockets. Whitch sockets is checked is decribed by SocketList Tlist with TBlockSocket objects. TList may have maximal number of objects defined by FD_SETSIZE constant. Return True, if you can from some socket read any data or is incoming connection on TCP based socket. Status is tested for time Timeout (in milliseconds). If value in Timeout is 0, status is only tested and continue. If value in Timeout is -1, run is breaked and waiting for read data maybe forever. If is returned True, CanReadList TList is filled by all TBlockSocket objects what waiting for read.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GroupCanRead"},
     {"title": "blcksock.TBlockSocket.EnableReuse", "text": "By this method you may turn address reuse mode for local bind. It is good specially for UDP protocol. Using this with TCP protocol is hazardous!    ", "tags": "", "url": "blcksock.TBlockSocket.html#EnableReuse"},
     {"title": "blcksock.TBlockSocket.SetTimeout", "text": "Try set timeout for all sending and receiving operations, if socket provider can do it. (It not supported by all socket providers!)    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetTimeout"},
     {"title": "blcksock.TBlockSocket.SetSendTimeout", "text": "Try set timeout for all sending operations, if socket provider can do it. (It not supported by all socket providers!)    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetSendTimeout"},
     {"title": "blcksock.TBlockSocket.SetRecvTimeout", "text": "Try set timeout for all receiving operations, if socket provider can do it. (It not supported by all socket providers!)    ", "tags": "", "url": "blcksock.TBlockSocket.html#SetRecvTimeout"},
     {"title": "blcksock.TBlockSocket.GetSocketType", "text": "Return value of socket type.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TBlockSocket.GetErrorDesc", "text": "Return descriptive string for given error code. This is class function. You may call it without created object!    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetErrorDesc"},
     {"title": "blcksock.TBlockSocket.GetErrorDescEx", "text": "Return descriptive string for LastError.    ", "tags": "", "url": "blcksock.TBlockSocket.html#GetErrorDescEx"},
     {"title": "blcksock.TBlockSocket.WSAData", "text": "WSA structure with information about socket provider. On non-windows platforms this structure is simulated!   ", "tags": "", "url": "blcksock.TBlockSocket.html#WSAData"},
     {"title": "blcksock.TBlockSocket.FDset", "text": "FDset structure prepared for usage with this socket.   ", "tags": "", "url": "blcksock.TBlockSocket.html#FDset"},
     {"title": "blcksock.TBlockSocket.LocalSin", "text": "Structure describing local socket side.   ", "tags": "", "url": "blcksock.TBlockSocket.html#LocalSin"},
     {"title": "blcksock.TBlockSocket.RemoteSin", "text": "Structure describing remote socket side.   ", "tags": "", "url": "blcksock.TBlockSocket.html#RemoteSin"},
     {"title": "blcksock.TBlockSocket.Socket", "text": "Socket handler. Suitable for &quot;manual&quot; calls to socket API or manual connection of socket to a previously created socket (i.e by Accept method on TCP socket)   ", "tags": "", "url": "blcksock.TBlockSocket.html#Socket"},
     {"title": "blcksock.TBlockSocket.LastError", "text": "Last socket operation error code. Error codes are described in socket documentation. Human readable error description is stored in LastErrorDesc property.   ", "tags": "", "url": "blcksock.TBlockSocket.html#LastError"},
     {"title": "blcksock.TBlockSocket.LastErrorDesc", "text": "Human readable error description of LastError code.   ", "tags": "", "url": "blcksock.TBlockSocket.html#LastErrorDesc"},
     {"title": "blcksock.TBlockSocket.LineBuffer", "text": "Buffer used by all high-level receiving functions. This buffer is used for optimized reading of data from socket. In normal cases you not need access to this buffer directly!   ", "tags": "", "url": "blcksock.TBlockSocket.html#LineBuffer"},
     {"title": "blcksock.TBlockSocket.SizeRecvBuffer", "text": "Size of Winsock receive buffer. If it is not supported by socket provider, it return as size one kilobyte.   ", "tags": "", "url": "blcksock.TBlockSocket.html#SizeRecvBuffer"},
     {"title": "blcksock.TBlockSocket.SizeSendBuffer", "text": "Size of Winsock send buffer. If it is not supported by socket provider, it return as size one kilobyte.   ", "tags": "", "url": "blcksock.TBlockSocket.html#SizeSendBuffer"},
     {"title": "blcksock.TBlockSocket.NonBlockMode", "text": "If True, turn class to non-blocking mode. Not all functions are working properly in this mode, you must know exactly what you are doing! However when you have big experience with non-blocking programming, then you can optimise your program by non-block mode!   ", "tags": "", "url": "blcksock.TBlockSocket.html#NonBlockMode"},
     {"title": "blcksock.TBlockSocket.TTL", "text": "Set Time-to-live value. (if system supporting it!)   ", "tags": "", "url": "blcksock.TBlockSocket.html#TTL"},
     {"title": "blcksock.TBlockSocket.IP6used", "text": "If is True, then class in in IPv6 mode.   ", "tags": "", "url": "blcksock.TBlockSocket.html#IP6used"},
     {"title": "blcksock.TBlockSocket.RecvCounter", "text": "Return count of received bytes on this socket from begin of current connection.   ", "tags": "", "url": "blcksock.TBlockSocket.html#RecvCounter"},
     {"title": "blcksock.TBlockSocket.SendCounter", "text": "Return count of sended bytes on this socket from begin of current connection.   ", "tags": "", "url": "blcksock.TBlockSocket.html#SendCounter"},
     {"title": "blcksock.TBlockSocket.Tag", "text": "this value is for free use.   ", "tags": "", "url": "blcksock.TBlockSocket.html#Tag"},
     {"title": "blcksock.TBlockSocket.RaiseExcept", "text": "If True, winsock errors raises exception. Otherwise is setted LastError value only and you must check it from your program! Default value is False.   ", "tags": "", "url": "blcksock.TBlockSocket.html#RaiseExcept"},
     {"title": "blcksock.TBlockSocket.MaxLineLength", "text": "Define maximum length in bytes of LineBuffer for high-level receiving functions. If this functions try to read more data then this limit, error is returned! If value is 0 (default), no limitation is used. This is very good protection for stupid attacks to your server by sending lot of data without proper terminator... until all your memory is allocated by LineBuffer!  Note: This maximum length is checked only in functions, what read unknown number of bytes! (like RecvString or RecvTerminated)   ", "tags": "", "url": "blcksock.TBlockSocket.html#MaxLineLength"},
     {"title": "blcksock.TBlockSocket.MaxSendBandwidth", "text": "Define maximal bandwidth for all sending operations in bytes per second. If value is 0 (default), bandwidth limitation is not used.   ", "tags": "", "url": "blcksock.TBlockSocket.html#MaxSendBandwidth"},
     {"title": "blcksock.TBlockSocket.MaxRecvBandwidth", "text": "Define maximal bandwidth for all receiving operations in bytes per second. If value is 0 (default), bandwidth limitation is not used.   ", "tags": "", "url": "blcksock.TBlockSocket.html#MaxRecvBandwidth"},
     {"title": "blcksock.TBlockSocket.MaxBandwidth", "text": "Define maximal bandwidth for all sending and receiving operations in bytes per second. If value is 0 (default), bandwidth limitation is not used.   ", "tags": "", "url": "blcksock.TBlockSocket.html#MaxBandwidth"},
     {"title": "blcksock.TBlockSocket.ConvertLineEnd", "text": "Do a conversion of non-standard line terminators to CRLF. (Off by default) If True, then terminators like sigle CR, single LF or LFCR are converted to CRLF internally. This have effect only in RecvString method!   ", "tags": "", "url": "blcksock.TBlockSocket.html#ConvertLineEnd"},
     {"title": "blcksock.TBlockSocket.Family", "text": "Specified Family of this socket. When you are using Windows preliminary support for IPv6, then I recommend to set this property!   ", "tags": "", "url": "blcksock.TBlockSocket.html#Family"},
     {"title": "blcksock.TBlockSocket.PreferIP4", "text": "When resolving of domain name return both IPv4 and IPv6 addresses, then specify if is used IPv4 (dafault - True) or IPv6.   ", "tags": "", "url": "blcksock.TBlockSocket.html#PreferIP4"},
     {"title": "blcksock.TBlockSocket.InterPacketTimeout", "text": "By default (True) is all timeouts used as timeout between two packets in reading operations. If you set this to False, then Timeouts is for overall reading operation!   ", "tags": "", "url": "blcksock.TBlockSocket.html#InterPacketTimeout"},
     {"title": "blcksock.TBlockSocket.SendMaxChunk", "text": "All sended datas was splitted by this value.   ", "tags": "", "url": "blcksock.TBlockSocket.html#SendMaxChunk"},
     {"title": "blcksock.TBlockSocket.StopFlag", "text": "By setting this property to True you can stop any communication. You can use this property for soft abort of communication.   ", "tags": "", "url": "blcksock.TBlockSocket.html#StopFlag"},
     {"title": "blcksock.TBlockSocket.NonblockSendTimeout", "text": "Timeout for data sending by non-blocking socket mode.   ", "tags": "", "url": "blcksock.TBlockSocket.html#NonblockSendTimeout"},
     {"title": "blcksock.TBlockSocket.ConnectionTimeout", "text": "Timeout for Connect call. Default value 0 means default system timeout. Non-zero value means timeout in millisecond.   ", "tags": "", "url": "blcksock.TBlockSocket.html#ConnectionTimeout"},
     {"title": "blcksock.TBlockSocket.OnStatus", "text": "This event is called by various reasons. It is good for monitoring socket, create gauges for data transfers, etc.   ", "tags": "", "url": "blcksock.TBlockSocket.html#OnStatus"},
     {"title": "blcksock.TBlockSocket.OnReadFilter", "text": "this event is good for some internal thinks about filtering readed datas. It is used by telnet client by example.   ", "tags": "", "url": "blcksock.TBlockSocket.html#OnReadFilter"},
     {"title": "blcksock.TBlockSocket.OnCreateSocket", "text": "This event is called after real socket creation for setting special socket options, because you not know when socket is created. (it is depended on Ipv4, IPv6 or automatic mode)   ", "tags": "", "url": "blcksock.TBlockSocket.html#OnCreateSocket"},
     {"title": "blcksock.TBlockSocket.OnMonitor", "text": "This event is good for monitoring content of readed or writed datas.   ", "tags": "", "url": "blcksock.TBlockSocket.html#OnMonitor"},
     {"title": "blcksock.TBlockSocket.OnHeartbeat", "text": "This event is good for calling your code during long socket operations. (Example, for refresing UI if class in not called within the thread.) Rate of heartbeats can be modified by HeartbeatRate property.   ", "tags": "", "url": "blcksock.TBlockSocket.html#OnHeartbeat"},
     {"title": "blcksock.TBlockSocket.HeartbeatRate", "text": "Specify typical rate of OnHeartbeat event and StopFlag testing. Default value 0 disabling heartbeats! Value is in milliseconds. Real rate can be higher or smaller then this value, because it depending on real socket operations too! Note: Each heartbeat slowing socket processing.   ", "tags": "", "url": "blcksock.TBlockSocket.html#HeartbeatRate"},
     {"title": "blcksock.TBlockSocket.Owner", "text": "What class own this socket? Used by protocol implementation classes.   ", "tags": "", "url": "blcksock.TBlockSocket.html#Owner"},
     {"title": "blcksock.TSocksBlockSocket", "text": " Layer with definition all necessary properties and functions for implementation SOCKS proxy client. Do not use this class directly.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html"},
     {"title": "blcksock.TSocksBlockSocket.FSocksIP", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksIP"},
     {"title": "blcksock.TSocksBlockSocket.FSocksPort", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksPort"},
     {"title": "blcksock.TSocksBlockSocket.FSocksTimeout", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksTimeout"},
     {"title": "blcksock.TSocksBlockSocket.FSocksUsername", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksUsername"},
     {"title": "blcksock.TSocksBlockSocket.FSocksPassword", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksPassword"},
     {"title": "blcksock.TSocksBlockSocket.FUsingSocks", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FUsingSocks"},
     {"title": "blcksock.TSocksBlockSocket.FSocksResolver", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksResolver"},
     {"title": "blcksock.TSocksBlockSocket.FSocksLastError", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksLastError"},
     {"title": "blcksock.TSocksBlockSocket.FSocksResponseIP", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksResponseIP"},
     {"title": "blcksock.TSocksBlockSocket.FSocksResponsePort", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksResponsePort"},
     {"title": "blcksock.TSocksBlockSocket.FSocksLocalIP", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksLocalIP"},
     {"title": "blcksock.TSocksBlockSocket.FSocksLocalPort", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksLocalPort"},
     {"title": "blcksock.TSocksBlockSocket.FSocksRemoteIP", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksRemoteIP"},
     {"title": "blcksock.TSocksBlockSocket.FSocksRemotePort", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksRemotePort"},
     {"title": "blcksock.TSocksBlockSocket.FBypassFlag", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FBypassFlag"},
     {"title": "blcksock.TSocksBlockSocket.FSocksType", "text": "   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#FSocksType"},
     {"title": "blcksock.TSocksBlockSocket.SocksCode", "text": "    ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksCode"},
     {"title": "blcksock.TSocksBlockSocket.SocksDecode", "text": "    ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksDecode"},
     {"title": "blcksock.TSocksBlockSocket.Create", "text": "    ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#Create"},
     {"title": "blcksock.TSocksBlockSocket.SocksOpen", "text": "Open connection to SOCKS proxy and if SocksUsername is set, do authorisation to proxy. This is needed only in special cases! (it is called internally!)    ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksOpen"},
     {"title": "blcksock.TSocksBlockSocket.SocksRequest", "text": "Send specified request to SOCKS proxy. This is needed only in special cases! (it is called internally!)    ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksRequest"},
     {"title": "blcksock.TSocksBlockSocket.SocksResponse", "text": "Receive response to previosly sended request. This is needed only in special cases! (it is called internally!)    ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksResponse"},
     {"title": "blcksock.TSocksBlockSocket.UsingSocks", "text": "Is True when class is using SOCKS proxy.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#UsingSocks"},
     {"title": "blcksock.TSocksBlockSocket.SocksLastError", "text": "If SOCKS proxy failed, here is error code returned from SOCKS proxy.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksLastError"},
     {"title": "blcksock.TSocksBlockSocket.SocksIP", "text": "Address of SOCKS server. If value is empty string, SOCKS support is disabled. Assingning any value to this property enable SOCKS mode. Warning: You cannot combine this mode with HTTP-tunneling mode!   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksIP"},
     {"title": "blcksock.TSocksBlockSocket.SocksPort", "text": "Port of SOCKS server. Default value is '1080'.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksPort"},
     {"title": "blcksock.TSocksBlockSocket.SocksUsername", "text": "If you need authorisation on SOCKS server, set username here.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksUsername"},
     {"title": "blcksock.TSocksBlockSocket.SocksPassword", "text": "If you need authorisation on SOCKS server, set password here.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksPassword"},
     {"title": "blcksock.TSocksBlockSocket.SocksTimeout", "text": "Specify timeout for communicatin with SOCKS server. Default is one minute.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksTimeout"},
     {"title": "blcksock.TSocksBlockSocket.SocksResolver", "text": "If True, all symbolic names of target hosts is not translated to IP's locally, but resolving is by SOCKS proxy. Default is True.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksResolver"},
     {"title": "blcksock.TSocksBlockSocket.SocksType", "text": "Specify SOCKS type. By default is used SOCKS5, but you can use SOCKS4 too. When you select SOCKS4, then if SOCKSResolver is enabled, then is used SOCKS4a. Othervise is used pure SOCKS4.   ", "tags": "", "url": "blcksock.TSocksBlockSocket.html#SocksType"},
     {"title": "blcksock.TTCPBlockSocket", "text": " Supported features: IPv4, IPv6, SSL/TLS or SSH (depending on used plugin), SOCKS5 proxy (outgoing connections and limited incomming), SOCKS4/4a proxy (outgoing connections and limited incomming), TCP through HTTP proxy tunnel.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html"},
     {"title": "blcksock.TTCPBlockSocket.FOnAfterConnect", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FOnAfterConnect"},
     {"title": "blcksock.TTCPBlockSocket.FSSL", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FSSL"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelIP", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelIP"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelPort", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelPort"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnel", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnel"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelRemoteIP", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelRemoteIP"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelRemotePort", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelRemotePort"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelUser", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelUser"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelPass", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelPass"},
     {"title": "blcksock.TTCPBlockSocket.FHTTPTunnelTimeout", "text": "   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#FHTTPTunnelTimeout"},
     {"title": "blcksock.TTCPBlockSocket.SocksDoConnect", "text": "    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#SocksDoConnect"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnelDoConnect", "text": "    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnelDoConnect"},
     {"title": "blcksock.TTCPBlockSocket.DoAfterConnect", "text": "    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#DoAfterConnect"},
     {"title": "blcksock.TTCPBlockSocket.Create", "text": "Create TCP socket class with default plugin for SSL/TSL/SSH implementation (see SSLImplementation)    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#Create"},
     {"title": "blcksock.TTCPBlockSocket.CreateWithSSL", "text": "Create TCP socket class with desired plugin for SSL/TSL/SSH implementation    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#CreateWithSSL"},
     {"title": "blcksock.TTCPBlockSocket.Destroy", "text": "    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#Destroy"},
     {"title": "blcksock.TTCPBlockSocket.CloseSocket", "text": "See TBlockSocket.CloseSocket    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#CloseSocket"},
     {"title": "blcksock.TTCPBlockSocket.WaitingData", "text": "See TBlockSocket.WaitingData    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#WaitingData"},
     {"title": "blcksock.TTCPBlockSocket.Listen", "text": "Sets socket to receive mode for new incoming connections. It is necessary to use TBlockSocket.BIND function call before this method to select receiving port!  If you use SOCKS, activate incoming TCP connection by this proxy. (By BIND method of SOCKS.)    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#Listen"},
     {"title": "blcksock.TTCPBlockSocket.Accept", "text": "Waits until new incoming connection comes. After it comes a new socket is automatically created (socket handler is returned by this function as result).  If you use SOCKS, new socket is not created! In this case is used same socket as socket for listening! So, you can accept only one connection in SOCKS mode.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#Accept"},
     {"title": "blcksock.TTCPBlockSocket.Connect", "text": "Connects socket to remote IP address and PORT. The same rules as with TBlockSocket.BIND method are valid. The only exception is that PORT with 0 value will not be connected. After call to this method a communication channel between local and remote socket is created. Local socket is assigned automatically if not controlled by previous call to TBlockSocket.BIND method. Structures TBlockSocket.LocalSin and TBlockSocket.RemoteSin will be filled with valid values.  If you use SOCKS, activate outgoing TCP connection by SOCKS proxy specified in TSocksBlockSocket.SocksIP. (By CONNECT method of SOCKS.)  If you use HTTP-tunnel mode, activate outgoing TCP connection by HTTP tunnel specified in HTTPTunnelIP. (By CONNECT method of HTTP protocol.)  Note: If you call this on non-created socket, then socket is created automaticly.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#Connect"},
     {"title": "blcksock.TTCPBlockSocket.SSLDoConnect", "text": "If you need upgrade existing TCP connection to SSL/TLS (or SSH2, if plugin allows it) mode, then call this method. This method switch this class to SSL mode and do SSL/TSL handshake.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#SSLDoConnect"},
     {"title": "blcksock.TTCPBlockSocket.SSLDoShutdown", "text": "By this method you can downgrade existing SSL/TLS connection to normal TCP connection.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#SSLDoShutdown"},
     {"title": "blcksock.TTCPBlockSocket.SSLAcceptConnection", "text": "If you need use this component as SSL/TLS TCP server, then after accepting of inbound connection you need start SSL/TLS session by this method. Before call this function, you must have assigned all neeeded certificates and keys!    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#SSLAcceptConnection"},
     {"title": "blcksock.TTCPBlockSocket.GetLocalSinIP", "text": "See TBlockSocket.GetLocalSinIP    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetLocalSinIP"},
     {"title": "blcksock.TTCPBlockSocket.GetRemoteSinIP", "text": "See TBlockSocket.GetRemoteSinIP    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetRemoteSinIP"},
     {"title": "blcksock.TTCPBlockSocket.GetLocalSinPort", "text": "See TBlockSocket.GetLocalSinPort    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetLocalSinPort"},
     {"title": "blcksock.TTCPBlockSocket.GetRemoteSinPort", "text": "See TBlockSocket.GetRemoteSinPort    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetRemoteSinPort"},
     {"title": "blcksock.TTCPBlockSocket.SendBuffer", "text": "See TBlockSocket.SendBuffer    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#SendBuffer"},
     {"title": "blcksock.TTCPBlockSocket.RecvBuffer", "text": "See TBlockSocket.RecvBuffer    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#RecvBuffer"},
     {"title": "blcksock.TTCPBlockSocket.GetSocketType", "text": "Return value of socket type. For TCP return SOCK_STREAM.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TTCPBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation. For TCP return IPPROTO_TCP.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TTCPBlockSocket.GetErrorDescEx", "text": "Return descriptive string for LastError. On case of error in SSL/TLS subsystem, it returns right error description.    ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#GetErrorDescEx"},
     {"title": "blcksock.TTCPBlockSocket.SSL", "text": "Class implementing SSL/TLS support. It is allways some descendant of TCustomSSL class. When programmer not select some SSL plugin class, then is used TSSLNone   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#SSL"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnel", "text": "True if is used HTTP tunnel mode.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnel"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnelIP", "text": "Specify IP address of HTTP proxy. Assingning non-empty value to this property enable HTTP-tunnel mode. This mode is for tunnelling any outgoing TCP connection through HTTP proxy server. (If policy on HTTP proxy server allow this!) Warning: You cannot combine this mode with SOCK5 mode!   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnelIP"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnelPort", "text": "Specify port of HTTP proxy for HTTP-tunneling.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnelPort"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnelUser", "text": "Specify authorisation username for access to HTTP proxy in HTTP-tunnel mode. If you not need authorisation, then let this property empty.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnelUser"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnelPass", "text": "Specify authorisation password for access to HTTP proxy in HTTP-tunnel mode.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnelPass"},
     {"title": "blcksock.TTCPBlockSocket.HTTPTunnelTimeout", "text": "Specify timeout for communication with HTTP proxy in HTTPtunnel mode.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#HTTPTunnelTimeout"},
     {"title": "blcksock.TTCPBlockSocket.OnAfterConnect", "text": "This event is called after sucessful TCP socket connection.   ", "tags": "", "url": "blcksock.TTCPBlockSocket.html#OnAfterConnect"},
     {"title": "blcksock.TDgramBlockSocket", "text": " This class implementing datagram based communication instead default stream based communication style.   ", "tags": "", "url": "blcksock.TDgramBlockSocket.html"},
     {"title": "blcksock.TDgramBlockSocket.Connect", "text": "Fill TBlockSocket.RemoteSin structure. This address is used for sending data.    ", "tags": "", "url": "blcksock.TDgramBlockSocket.html#Connect"},
     {"title": "blcksock.TDgramBlockSocket.SendBuffer", "text": "Silently redirected to TBlockSocket.SendBufferTo.    ", "tags": "", "url": "blcksock.TDgramBlockSocket.html#SendBuffer"},
     {"title": "blcksock.TDgramBlockSocket.RecvBuffer", "text": "Silently redirected to TBlockSocket.RecvBufferFrom.    ", "tags": "", "url": "blcksock.TDgramBlockSocket.html#RecvBuffer"},
     {"title": "blcksock.TUDPBlockSocket", "text": " NOTE: in this class is all receiving redirected to RecvBufferFrom. You can use for reading any receive function. Preffered is RecvPacket! Similary all sending is redirected to SendbufferTo. You can use for sending UDP packet any sending function, like SendString.  Supported features: IPv4, IPv6, unicasts, broadcasts, multicasts, SOCKS5 proxy (only unicasts! Outgoing and incomming.)   ", "tags": "", "url": "blcksock.TUDPBlockSocket.html"},
     {"title": "blcksock.TUDPBlockSocket.FSocksControlSock", "text": "   ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#FSocksControlSock"},
     {"title": "blcksock.TUDPBlockSocket.UdpAssociation", "text": "    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#UdpAssociation"},
     {"title": "blcksock.TUDPBlockSocket.SetMulticastTTL", "text": "    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#SetMulticastTTL"},
     {"title": "blcksock.TUDPBlockSocket.GetMulticastTTL", "text": "    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#GetMulticastTTL"},
     {"title": "blcksock.TUDPBlockSocket.Destroy", "text": "    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#Destroy"},
     {"title": "blcksock.TUDPBlockSocket.EnableBroadcast", "text": "Enable or disable sending of broadcasts. If seting OK, result is True. This method is not supported in SOCKS5 mode! IPv6 does not support broadcasts! In this case you must use Multicasts instead.    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#EnableBroadcast"},
     {"title": "blcksock.TUDPBlockSocket.SendBufferTo", "text": "See TBlockSocket.SendBufferTo    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#SendBufferTo"},
     {"title": "blcksock.TUDPBlockSocket.RecvBufferFrom", "text": "See TBlockSocket.RecvBufferFrom    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#RecvBufferFrom"},
     {"title": "blcksock.TUDPBlockSocket.AddMulticast", "text": "Add this socket to given multicast group. You cannot use Multicasts in SOCKS mode!    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#AddMulticast"},
     {"title": "blcksock.TUDPBlockSocket.DropMulticast", "text": "Remove this socket from given multicast group.    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#DropMulticast"},
     {"title": "blcksock.TUDPBlockSocket.EnableMulticastLoop", "text": "All sended multicast datagrams is loopbacked to your interface too. (you can read your sended datas.) You can disable this feature by this function. This function not working on some Windows systems!    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#EnableMulticastLoop"},
     {"title": "blcksock.TUDPBlockSocket.GetSocketType", "text": "Return value of socket type. For UDP return SOCK_DGRAM.    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TUDPBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation. For UDP return IPPROTO_UDP.    ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TUDPBlockSocket.MulticastTTL", "text": "Set Time-to-live value for multicasts packets. It define number of routers for transfer of datas. If you set this to 1 (dafault system value), then multicasts packet goes only to you local network. If you need transport multicast packet to worldwide, then increase this value, but be carefull, lot of routers on internet does not transport multicasts packets!   ", "tags": "", "url": "blcksock.TUDPBlockSocket.html#MulticastTTL"},
     {"title": "blcksock.TICMPBlockSocket", "text": " For this object you must have rights for creating RAW sockets!   ", "tags": "", "url": "blcksock.TICMPBlockSocket.html"},
     {"title": "blcksock.TICMPBlockSocket.GetSocketType", "text": "Return value of socket type. For RAW and ICMP return SOCK_RAW.    ", "tags": "", "url": "blcksock.TICMPBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TICMPBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation. For ICMP returns IPPROTO_ICMP or IPPROTO_ICMPV6    ", "tags": "", "url": "blcksock.TICMPBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TRAWBlockSocket", "text": " For this object you must have rights for creating RAW sockets!   ", "tags": "", "url": "blcksock.TRAWBlockSocket.html"},
     {"title": "blcksock.TRAWBlockSocket.GetSocketType", "text": "Return value of socket type. For RAW and ICMP return SOCK_RAW.    ", "tags": "", "url": "blcksock.TRAWBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TRAWBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation. For RAW returns IPPROTO_RAW.    ", "tags": "", "url": "blcksock.TRAWBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TPGMMessageBlockSocket", "text": " Not all systems supports this protocol!   ", "tags": "", "url": "blcksock.TPGMMessageBlockSocket.html"},
     {"title": "blcksock.TPGMMessageBlockSocket.GetSocketType", "text": "Return value of socket type. For PGM-message return SOCK_RDM.    ", "tags": "", "url": "blcksock.TPGMMessageBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TPGMMessageBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation. For PGM-message returns IPPROTO_RM.    ", "tags": "", "url": "blcksock.TPGMMessageBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TPGMStreamBlockSocket", "text": " Not all systems supports this protocol!   ", "tags": "", "url": "blcksock.TPGMStreamBlockSocket.html"},
     {"title": "blcksock.TPGMStreamBlockSocket.GetSocketType", "text": "Return value of socket type. For PGM-stream return SOCK_STREAM.    ", "tags": "", "url": "blcksock.TPGMStreamBlockSocket.html#GetSocketType"},
     {"title": "blcksock.TPGMStreamBlockSocket.GetSocketProtocol", "text": "Return value of protocol type for socket creation. For PGM-stream returns IPPROTO_RM.    ", "tags": "", "url": "blcksock.TPGMStreamBlockSocket.html#GetSocketProtocol"},
     {"title": "blcksock.TCustomSSL", "text": " This is abstract class defining interface for other SSL plugins.  Instance of this class will be created for each TTCPBlockSocket.  Warning: not all methods and propertis can work in all existing SSL plugins! Please, read documentation of used SSL plugin.   ", "tags": "", "url": "blcksock.TCustomSSL.html"},
     {"title": "blcksock.TCustomSSL.FOnVerifyCert", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FOnVerifyCert"},
     {"title": "blcksock.TCustomSSL.FSocket", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSocket"},
     {"title": "blcksock.TCustomSSL.FSSLEnabled", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSSLEnabled"},
     {"title": "blcksock.TCustomSSL.FLastError", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FLastError"},
     {"title": "blcksock.TCustomSSL.FLastErrorDesc", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FLastErrorDesc"},
     {"title": "blcksock.TCustomSSL.FSSLType", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSSLType"},
     {"title": "blcksock.TCustomSSL.FKeyPassword", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FKeyPassword"},
     {"title": "blcksock.TCustomSSL.FCiphers", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FCiphers"},
     {"title": "blcksock.TCustomSSL.FCertificateFile", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FCertificateFile"},
     {"title": "blcksock.TCustomSSL.FPrivateKeyFile", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FPrivateKeyFile"},
     {"title": "blcksock.TCustomSSL.FCertificate", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FCertificate"},
     {"title": "blcksock.TCustomSSL.FPrivateKey", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FPrivateKey"},
     {"title": "blcksock.TCustomSSL.FPFX", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FPFX"},
     {"title": "blcksock.TCustomSSL.FPFXfile", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FPFXfile"},
     {"title": "blcksock.TCustomSSL.FCertCA", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FCertCA"},
     {"title": "blcksock.TCustomSSL.FCertCAFile", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FCertCAFile"},
     {"title": "blcksock.TCustomSSL.FTrustCertificate", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FTrustCertificate"},
     {"title": "blcksock.TCustomSSL.FTrustCertificateFile", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FTrustCertificateFile"},
     {"title": "blcksock.TCustomSSL.FVerifyCert", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FVerifyCert"},
     {"title": "blcksock.TCustomSSL.FUsername", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FUsername"},
     {"title": "blcksock.TCustomSSL.FPassword", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FPassword"},
     {"title": "blcksock.TCustomSSL.FSSHChannelType", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSSHChannelType"},
     {"title": "blcksock.TCustomSSL.FSSHChannelArg1", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSSHChannelArg1"},
     {"title": "blcksock.TCustomSSL.FSSHChannelArg2", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSSHChannelArg2"},
     {"title": "blcksock.TCustomSSL.FCertComplianceLevel", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FCertComplianceLevel"},
     {"title": "blcksock.TCustomSSL.FSNIHost", "text": "   ", "tags": "", "url": "blcksock.TCustomSSL.html#FSNIHost"},
     {"title": "blcksock.TCustomSSL.ReturnError", "text": "    ", "tags": "", "url": "blcksock.TCustomSSL.html#ReturnError"},
     {"title": "blcksock.TCustomSSL.SetCertCAFile", "text": "    ", "tags": "", "url": "blcksock.TCustomSSL.html#SetCertCAFile"},
     {"title": "blcksock.TCustomSSL.DoVerifyCert", "text": "    ", "tags": "", "url": "blcksock.TCustomSSL.html#DoVerifyCert"},
     {"title": "blcksock.TCustomSSL.CreateSelfSignedCert", "text": "    ", "tags": "", "url": "blcksock.TCustomSSL.html#CreateSelfSignedCert"},
     {"title": "blcksock.TCustomSSL.Create", "text": "Create plugin class. it is called internally from TTCPBlockSocket    ", "tags": "", "url": "blcksock.TCustomSSL.html#Create"},
     {"title": "blcksock.TCustomSSL.Assign", "text": "Assign settings (certificates and configuration) from another SSL plugin class.    ", "tags": "", "url": "blcksock.TCustomSSL.html#Assign"},
     {"title": "blcksock.TCustomSSL.LibVersion", "text": "return description of used plugin. It usually return name and version of used SSL library.    ", "tags": "", "url": "blcksock.TCustomSSL.html#LibVersion"},
     {"title": "blcksock.TCustomSSL.LibName", "text": "return name of used plugin.    ", "tags": "", "url": "blcksock.TCustomSSL.html#LibName"},
     {"title": "blcksock.TCustomSSL.Connect", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for start SSL connection.    ", "tags": "", "url": "blcksock.TCustomSSL.html#Connect"},
     {"title": "blcksock.TCustomSSL.Accept", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for acept new SSL connection.    ", "tags": "", "url": "blcksock.TCustomSSL.html#Accept"},
     {"title": "blcksock.TCustomSSL.Shutdown", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for hard shutdown of SSL connection. (for example, before socket is closed)    ", "tags": "", "url": "blcksock.TCustomSSL.html#Shutdown"},
     {"title": "blcksock.TCustomSSL.BiShutdown", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for soft shutdown of SSL connection. (for example, when you need to continue with unprotected connection.)    ", "tags": "", "url": "blcksock.TCustomSSL.html#BiShutdown"},
     {"title": "blcksock.TCustomSSL.SendBuffer", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for sending some datas by SSL connection.    ", "tags": "", "url": "blcksock.TCustomSSL.html#SendBuffer"},
     {"title": "blcksock.TCustomSSL.RecvBuffer", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for receiving some datas by SSL connection.    ", "tags": "", "url": "blcksock.TCustomSSL.html#RecvBuffer"},
     {"title": "blcksock.TCustomSSL.WaitingData", "text": "Do not call this directly. It is used internally by TTCPBlockSocket!  Here is needed code for getting count of datas what waiting for read. If SSL plugin not allows this, then it should return 0.    ", "tags": "", "url": "blcksock.TCustomSSL.html#WaitingData"},
     {"title": "blcksock.TCustomSSL.GetSSLVersion", "text": "Return string with identificator of SSL/TLS version of existing connection.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetSSLVersion"},
     {"title": "blcksock.TCustomSSL.GetPeerSubject", "text": "Return subject of remote SSL peer.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetPeerSubject"},
     {"title": "blcksock.TCustomSSL.GetPeerSerialNo", "text": "Return Serial number if remote X509 certificate.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetPeerSerialNo"},
     {"title": "blcksock.TCustomSSL.GetPeerIssuer", "text": "Return issuer certificate of remote SSL peer.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetPeerIssuer"},
     {"title": "blcksock.TCustomSSL.GetPeerName", "text": "Return peer name from remote side certificate. This is good for verify, if certificate is generated for remote side IP name.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetPeerName"},
     {"title": "blcksock.TCustomSSL.GetPeerNameHash", "text": "Returns has of peer name from remote side certificate. This is good for fast remote side authentication.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetPeerNameHash"},
     {"title": "blcksock.TCustomSSL.GetPeerFingerprint", "text": "Return fingerprint of remote SSL peer. (As binary nonprintable string!)    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetPeerFingerprint"},
     {"title": "blcksock.TCustomSSL.GetCertInfo", "text": "Return all detailed information about certificate from remote side of SSL/TLS connection. Result string can be multilined! Each plugin can return this informations in different format!    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetCertInfo"},
     {"title": "blcksock.TCustomSSL.GetCipherName", "text": "Return currently used Cipher.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetCipherName"},
     {"title": "blcksock.TCustomSSL.GetCipherBits", "text": "Return currently used number of bits in current Cipher algorythm.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetCipherBits"},
     {"title": "blcksock.TCustomSSL.GetCipherAlgBits", "text": "Return number of bits in current Cipher algorythm.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetCipherAlgBits"},
     {"title": "blcksock.TCustomSSL.GetVerifyCert", "text": "Return result value of verify remote side certificate. Look to OpenSSL documentation for possible values. For example 0 is successfuly verified certificate, or 18 is self-signed certificate.    ", "tags": "", "url": "blcksock.TCustomSSL.html#GetVerifyCert"},
     {"title": "blcksock.TCustomSSL.SSLEnabled", "text": "Resurn True if SSL mode is enabled on existing cvonnection.   ", "tags": "", "url": "blcksock.TCustomSSL.html#SSLEnabled"},
     {"title": "blcksock.TCustomSSL.LastError", "text": "Return error code of last SSL operation. 0 is OK.   ", "tags": "", "url": "blcksock.TCustomSSL.html#LastError"},
     {"title": "blcksock.TCustomSSL.LastErrorDesc", "text": "Return error description of last SSL operation.   ", "tags": "", "url": "blcksock.TCustomSSL.html#LastErrorDesc"},
     {"title": "blcksock.TCustomSSL.SSLType", "text": "Here you can specify requested SSL/TLS mode. Default is autodetection, but on some servers autodetection not working properly. In this case you must specify requested SSL/TLS mode by your hand!   ", "tags": "", "url": "blcksock.TCustomSSL.html#SSLType"},
     {"title": "blcksock.TCustomSSL.KeyPassword", "text": "Password for decrypting of encoded certificate or key.   ", "tags": "", "url": "blcksock.TCustomSSL.html#KeyPassword"},
     {"title": "blcksock.TCustomSSL.Username", "text": "Username for possible credentials.   ", "tags": "", "url": "blcksock.TCustomSSL.html#Username"},
     {"title": "blcksock.TCustomSSL.Password", "text": "password for possible credentials.   ", "tags": "", "url": "blcksock.TCustomSSL.html#Password"},
     {"title": "blcksock.TCustomSSL.Ciphers", "text": "By this property you can modify default set of SSL/TLS ciphers.   ", "tags": "", "url": "blcksock.TCustomSSL.html#Ciphers"},
     {"title": "blcksock.TCustomSSL.CertificateFile", "text": "Used for loading certificate from disk file. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#CertificateFile"},
     {"title": "blcksock.TCustomSSL.PrivateKeyFile", "text": "Used for loading private key from disk file. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#PrivateKeyFile"},
     {"title": "blcksock.TCustomSSL.Certificate", "text": "Used for loading certificate from binary string. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#Certificate"},
     {"title": "blcksock.TCustomSSL.PrivateKey", "text": "Used for loading private key from binary string. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#PrivateKey"},
     {"title": "blcksock.TCustomSSL.PFX", "text": "Used for loading PFX from binary string. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#PFX"},
     {"title": "blcksock.TCustomSSL.PFXfile", "text": "Used for loading PFX from disk file. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#PFXfile"},
     {"title": "blcksock.TCustomSSL.TrustCertificateFile", "text": "Used for loading trusted certificates from disk file. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#TrustCertificateFile"},
     {"title": "blcksock.TCustomSSL.TrustCertificate", "text": "Used for loading trusted certificates from binary string. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#TrustCertificate"},
     {"title": "blcksock.TCustomSSL.CertCA", "text": "Used for loading CA certificates from binary string. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#CertCA"},
     {"title": "blcksock.TCustomSSL.CertCAFile", "text": "Used for loading CA certificates from disk file. See to plugin documentation if this method is supported and how!   ", "tags": "", "url": "blcksock.TCustomSSL.html#CertCAFile"},
     {"title": "blcksock.TCustomSSL.VerifyCert", "text": "If True, then is verified client certificate. (it is good for writing SSL/TLS servers.) When you are not server, but you are client, then if this property is True, verify servers certificate.   ", "tags": "", "url": "blcksock.TCustomSSL.html#VerifyCert"},
     {"title": "blcksock.TCustomSSL.SSHChannelType", "text": "channel type for possible SSH connections   ", "tags": "", "url": "blcksock.TCustomSSL.html#SSHChannelType"},
     {"title": "blcksock.TCustomSSL.SSHChannelArg1", "text": "First argument of channel type for possible SSH connections   ", "tags": "", "url": "blcksock.TCustomSSL.html#SSHChannelArg1"},
     {"title": "blcksock.TCustomSSL.SSHChannelArg2", "text": "Second argument of channel type for possible SSH connections   ", "tags": "", "url": "blcksock.TCustomSSL.html#SSHChannelArg2"},
     {"title": "blcksock.TCustomSSL.CertComplianceLevel", "text": "Level of standards compliance level (CryptLib: values in cryptlib.pas, -1: use default value )   ", "tags": "", "url": "blcksock.TCustomSSL.html#CertComplianceLevel"},
     {"title": "blcksock.TCustomSSL.OnVerifyCert", "text": "This event is called when verifying the server certificate immediatally after a successfull verification in the ssl library.   ", "tags": "", "url": "blcksock.TCustomSSL.html#OnVerifyCert"},
     {"title": "blcksock.TCustomSSL.SNIHost", "text": "Server Name Identification. Host name to send to server. If empty the host name found in URL will be used, which should be the normal use (http Header Host = SNI Host). The value is cleared after the connection is established. (SNI support requires OpenSSL 0.9.8k or later. Cryptlib not supported, yet )   ", "tags": "", "url": "blcksock.TCustomSSL.html#SNIHost"},
     {"title": "blcksock.TSSLNone", "text": " Dummy SSL plugin implementation for applications without SSL/TLS support.   ", "tags": "", "url": "blcksock.TSSLNone.html"},
     {"title": "blcksock.TSSLNone.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "blcksock.TSSLNone.html#LibVersion"},
     {"title": "blcksock.TSSLNone.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "blcksock.TSSLNone.html#LibName"},
     {"title": "blcksock.TIPHeader", "text": " For reading data from ICMP or RAW sockets.   ", "tags": "", "url": "blcksock.TIPHeader.html"},
     {"title": "blcksock.TIPHeader.VerLen", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#VerLen"},
     {"title": "blcksock.TIPHeader.TOS", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#TOS"},
     {"title": "blcksock.TIPHeader.TotalLen", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#TotalLen"},
     {"title": "blcksock.TIPHeader.Identifer", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#Identifer"},
     {"title": "blcksock.TIPHeader.FragOffsets", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#FragOffsets"},
     {"title": "blcksock.TIPHeader.TTL", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#TTL"},
     {"title": "blcksock.TIPHeader.Protocol", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#Protocol"},
     {"title": "blcksock.TIPHeader.CheckSum", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#CheckSum"},
     {"title": "blcksock.TIPHeader.SourceIp", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#SourceIp"},
     {"title": "blcksock.TIPHeader.DestIp", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#DestIp"},
     {"title": "blcksock.TIPHeader.Options", "text": "   ", "tags": "", "url": "blcksock.TIPHeader.html#Options"},
     {"title": "blcksock.TSynaClient", "text": " By this class is defined common properties.   ", "tags": "", "url": "blcksock.TSynaClient.html"},
     {"title": "blcksock.TSynaClient.FTargetHost", "text": "   ", "tags": "", "url": "blcksock.TSynaClient.html#FTargetHost"},
     {"title": "blcksock.TSynaClient.FTargetPort", "text": "   ", "tags": "", "url": "blcksock.TSynaClient.html#FTargetPort"},
     {"title": "blcksock.TSynaClient.FIPInterface", "text": "   ", "tags": "", "url": "blcksock.TSynaClient.html#FIPInterface"},
     {"title": "blcksock.TSynaClient.FTimeout", "text": "   ", "tags": "", "url": "blcksock.TSynaClient.html#FTimeout"},
     {"title": "blcksock.TSynaClient.FUserName", "text": "   ", "tags": "", "url": "blcksock.TSynaClient.html#FUserName"},
     {"title": "blcksock.TSynaClient.FPassword", "text": "   ", "tags": "", "url": "blcksock.TSynaClient.html#FPassword"},
     {"title": "blcksock.TSynaClient.Create", "text": "    ", "tags": "", "url": "blcksock.TSynaClient.html#Create"},
     {"title": "blcksock.TSynaClient.TargetHost", "text": "Specify terget server IP (or symbolic name). Default is 'localhost'.   ", "tags": "", "url": "blcksock.TSynaClient.html#TargetHost"},
     {"title": "blcksock.TSynaClient.TargetPort", "text": "Specify terget server port (or symbolic name).   ", "tags": "", "url": "blcksock.TSynaClient.html#TargetPort"},
     {"title": "blcksock.TSynaClient.IPInterface", "text": "Defined local socket address. (outgoing IP address). By default is used '0.0.0.0' as wildcard for default IP.   ", "tags": "", "url": "blcksock.TSynaClient.html#IPInterface"},
     {"title": "blcksock.TSynaClient.Timeout", "text": "Specify default timeout for socket operations.   ", "tags": "", "url": "blcksock.TSynaClient.html#Timeout"},
     {"title": "blcksock.TSynaClient.UserName", "text": "If protocol need user authorization, then fill here username.   ", "tags": "", "url": "blcksock.TSynaClient.html#UserName"},
     {"title": "blcksock.TSynaClient.Password", "text": "If protocol need user authorization, then fill here password.   ", "tags": "", "url": "blcksock.TSynaClient.html#Password"},
     {"title": "blcksock.SynapseRelease", "text": "   ", "tags": "", "url": "blcksock.html#SynapseRelease"},
     {"title": "blcksock.cLocalhost", "text": "   ", "tags": "", "url": "blcksock.html#cLocalhost"},
     {"title": "blcksock.cAnyHost", "text": "   ", "tags": "", "url": "blcksock.html#cAnyHost"},
     {"title": "blcksock.cBroadcast", "text": "   ", "tags": "", "url": "blcksock.html#cBroadcast"},
     {"title": "blcksock.c6Localhost", "text": "   ", "tags": "", "url": "blcksock.html#c6Localhost"},
     {"title": "blcksock.c6AnyHost", "text": "   ", "tags": "", "url": "blcksock.html#c6AnyHost"},
     {"title": "blcksock.c6Broadcast", "text": "   ", "tags": "", "url": "blcksock.html#c6Broadcast"},
     {"title": "blcksock.cAnyPort", "text": "   ", "tags": "", "url": "blcksock.html#cAnyPort"},
     {"title": "blcksock.CR", "text": "   ", "tags": "", "url": "blcksock.html#CR"},
     {"title": "blcksock.LF", "text": "   ", "tags": "", "url": "blcksock.html#LF"},
     {"title": "blcksock.CRLF", "text": "   ", "tags": "", "url": "blcksock.html#CRLF"},
     {"title": "blcksock.c64k", "text": "   ", "tags": "", "url": "blcksock.html#c64k"},
     {"title": "blcksock.THookSocketReason", "text": "Types of OnStatus events    HR_ResolvingBegin  Resolving is begin. Resolved IP and port is in parameter in format like: 'localhost.somewhere.com:25'.  HR_ResolvingEnd  Resolving is done. Resolved IP and port is in parameter in format like: 'localhost.somewhere.com:25'. It is always same as in HR_ResolvingBegin!  HR_SocketCreate  Socket created by CreateSocket method. It reporting Family of created socket too!  HR_SocketClose  Socket closed by CloseSocket method.  HR_Bind  Socket binded to IP and Port. Binded IP and Port is in parameter in format like: 'localhost.somewhere.com:25'.  HR_Connect  Socket connected to IP and Port. Connected IP and Port is in parameter in format like: 'localhost.somewhere.com:25'.  HR_CanRead  Called when CanRead method is used with True result.  HR_CanWrite  Called when CanWrite method is used with True result.  HR_Listen  Socket is swithed to Listen mode. (TCP socket only)  HR_Accept  Socket Accepting client connection. (TCP socket only)  HR_ReadCount  report count of bytes readed from socket. Number is in parameter string. If you need is in integer, you must use StrToInt function!  HR_WriteCount  report count of bytes writed to socket. Number is in parameter string. If you need is in integer, you must use StrToInt function!  HR_Wait  If is limiting of bandwidth on, then this reason is called when sending or receiving is stopped for satisfy bandwidth limit. Parameter is count of waiting milliseconds.  HR_Error  report situation where communication error occured. When raiseexcept is True, then exception is called after this Hook reason. ", "tags": "", "url": "blcksock.html#THookSocketReason"},
     {"title": "blcksock.THookSocketStatus", "text": "Procedural type for OnStatus event. Sender is calling TBlockSocket object, Reason is one of set Status events and value is optional data.    ", "tags": "", "url": "blcksock.html#THookSocketStatus"},
     {"title": "blcksock.THookDataFilter", "text": "This procedural type is used for DataFilter hooks.    ", "tags": "", "url": "blcksock.html#THookDataFilter"},
     {"title": "blcksock.THookCreateSocket", "text": "This procedural type is used for hook OnCreateSocket. By this hook you can insert your code after initialisation of socket. (you can set special socket options, etc.)    ", "tags": "", "url": "blcksock.html#THookCreateSocket"},
     {"title": "blcksock.THookMonitor", "text": "This procedural type is used for monitoring of communication.    ", "tags": "", "url": "blcksock.html#THookMonitor"},
     {"title": "blcksock.THookAfterConnect", "text": "This procedural type is used for hook OnAfterConnect. By this hook you can insert your code after TCP socket has been sucessfully connected.    ", "tags": "", "url": "blcksock.html#THookAfterConnect"},
     {"title": "blcksock.THookVerifyCert", "text": "This procedural type is used for hook OnVerifyCert. By this hook you can insert your additional certificate verification code. Usefull to verify server CN against URL.    ", "tags": "", "url": "blcksock.html#THookVerifyCert"},
     {"title": "blcksock.THookHeartbeat", "text": "This procedural type is used for hook OnHeartbeat. By this hook you can call your code repeately during long socket operations. You must enable heartbeats by HeartbeatRate property!    ", "tags": "", "url": "blcksock.html#THookHeartbeat"},
     {"title": "blcksock.TSocketFamily", "text": "Specify family of socket.    SF_Any  Default mode. Socket family is defined by target address for connection. It allows instant access to IPv4 and IPv6 nodes. When you need IPv6 address as destination, then is used IPv6 mode. othervise is used IPv4 mode. However this mode not working properly with preliminary IPv6 supports!  SF_IP4  Turn this class to pure IPv4 mode. This mode is totally compatible with previous Synapse releases.  SF_IP6  Turn to only IPv6 mode. ", "tags": "", "url": "blcksock.html#TSocketFamily"},
     {"title": "blcksock.TSocksType", "text": "specify possible values of SOCKS modes.    ST_Socks5    ST_Socks4   ", "tags": "", "url": "blcksock.html#TSocksType"},
     {"title": "blcksock.TSSLType", "text": "Specify requested SSL/TLS version for secure connection.    LT_all    LT_SSLv2    LT_SSLv3    LT_TLSv1    LT_TLSv1_1    LT_TLSv1_2    LT_TLSv1_3    LT_SSHv2   ", "tags": "", "url": "blcksock.html#TSSLType"},
     {"title": "blcksock.TSynaOptionType", "text": "Specify type of socket delayed option.    SOT_Linger    SOT_RecvBuff    SOT_SendBuff    SOT_NonBlock    SOT_RecvTimeout    SOT_SendTimeout    SOT_Reuse    SOT_TTL    SOT_Broadcast    SOT_MulticastTTL    SOT_MulticastLoop   ", "tags": "", "url": "blcksock.html#TSynaOptionType"},
     {"title": "blcksock.TSSLClass", "text": "   ", "tags": "", "url": "blcksock.html#TSSLClass"},
     {"title": "blcksock.TOptionList", "text": "   ", "tags": "", "url": "blcksock.html#TOptionList"},
     {"title": "blcksock.TSocketList", "text": "   ", "tags": "", "url": "blcksock.html#TSocketList"},
     {"title": "blcksock.SSLImplementation", "text": "Selected SSL plugin. Default is TSSLNone.  Do not change this value directly!!!  Just add your plugin unit to your project uses instead. Each plugin unit have initialization code what modify this variable.   ", "tags": "", "url": "blcksock.html#SSLImplementation"},
     {"title": "clamsend", "text": "  This unit is capable to do antivirus scan of your data by TCP channel to ClamD daemon from ClamAV. See more about ClamAV on UNKNOWN   ", "tags": "", "url": "clamsend.html"},
     {"title": "clamsend.TClamSend", "text": " By this class you can scan any your data by ClamAV opensource antivirus.  This class can connect to ClamD by TCP channel, send your data to ClamD and read result.   ", "tags": "", "url": "clamsend.TClamSend.html"},
     {"title": "clamsend.TClamSend.Create", "text": "    ", "tags": "", "url": "clamsend.TClamSend.html#Create"},
     {"title": "clamsend.TClamSend.Destroy", "text": "    ", "tags": "", "url": "clamsend.TClamSend.html#Destroy"},
     {"title": "clamsend.TClamSend.DoCommand", "text": "Call any command to ClamD. Used internally by other methods.    ", "tags": "", "url": "clamsend.TClamSend.html#DoCommand"},
     {"title": "clamsend.TClamSend.GetVersion", "text": "Return ClamAV version and version of loaded databases.    ", "tags": "", "url": "clamsend.TClamSend.html#GetVersion"},
     {"title": "clamsend.TClamSend.ScanStrings", "text": "Scan content of TStrings.    ", "tags": "", "url": "clamsend.TClamSend.html#ScanStrings"},
     {"title": "clamsend.TClamSend.ScanStream", "text": "Scan content of TStream.    ", "tags": "", "url": "clamsend.TClamSend.html#ScanStream"},
     {"title": "clamsend.TClamSend.ScanStrings2", "text": "Scan content of TStrings by new 0.95 API.    ", "tags": "", "url": "clamsend.TClamSend.html#ScanStrings2"},
     {"title": "clamsend.TClamSend.ScanStream2", "text": "Scan content of TStream by new 0.95 API.    ", "tags": "", "url": "clamsend.TClamSend.html#ScanStream2"},
     {"title": "clamsend.TClamSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "clamsend.TClamSend.html#Sock"},
     {"title": "clamsend.TClamSend.DSock", "text": "Socket object used for TCP data transfer operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "clamsend.TClamSend.html#DSock"},
     {"title": "clamsend.TClamSend.Session", "text": "Can turn-on session mode of communication with ClamD. Default is False, because ClamAV developers design their TCP code very badly and session mode is broken now (CVS-20051031). Maybe ClamAV developers fix their bugs and this mode will be possible in future.   ", "tags": "", "url": "clamsend.TClamSend.html#Session"},
     {"title": "clamsend.cClamProtocol", "text": "   ", "tags": "", "url": "clamsend.html#cClamProtocol"},
     {"title": "create_tipuesearch", "text": "   ", "tags": "", "url": "create_tipuesearch.html"},
     {"title": "Crypt32", "text": "   ", "tags": "", "url": "Crypt32.html"},
     {"title": "Crypt32.CRYPT_DATA_BLOB", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_DATA_BLOB.html"},
     {"title": "Crypt32.CRYPT_DATA_BLOB.cbData", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_DATA_BLOB.html#cbData"},
     {"title": "Crypt32.CRYPT_DATA_BLOB.pbData", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_DATA_BLOB.html#pbData"},
     {"title": "Crypt32.CRYPT_ALGORITHM_IDENTIFIER", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ALGORITHM_IDENTIFIER.html"},
     {"title": "Crypt32.CRYPT_ALGORITHM_IDENTIFIER.pszObjId", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ALGORITHM_IDENTIFIER.html#pszObjId"},
     {"title": "Crypt32.CRYPT_ALGORITHM_IDENTIFIER.Parameters", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ALGORITHM_IDENTIFIER.html#Parameters"},
     {"title": "Crypt32.CERT_PUBLIC_KEY_INFO", "text": "   ", "tags": "", "url": "Crypt32.CERT_PUBLIC_KEY_INFO.html"},
     {"title": "Crypt32.CERT_PUBLIC_KEY_INFO.Algorithm", "text": "   ", "tags": "", "url": "Crypt32.CERT_PUBLIC_KEY_INFO.html#Algorithm"},
     {"title": "Crypt32.CERT_PUBLIC_KEY_INFO.PublicKey", "text": "   ", "tags": "", "url": "Crypt32.CERT_PUBLIC_KEY_INFO.html#PublicKey"},
     {"title": "Crypt32.CERT_EXTENSION", "text": "   ", "tags": "", "url": "Crypt32.CERT_EXTENSION.html"},
     {"title": "Crypt32.CERT_EXTENSION.pszObjId", "text": "   ", "tags": "", "url": "Crypt32.CERT_EXTENSION.html#pszObjId"},
     {"title": "Crypt32.CERT_EXTENSION.bCritical", "text": "   ", "tags": "", "url": "Crypt32.CERT_EXTENSION.html#bCritical"},
     {"title": "Crypt32.CERT_EXTENSION.Value", "text": "   ", "tags": "", "url": "Crypt32.CERT_EXTENSION.html#Value"},
     {"title": "Crypt32.CERT_INFO", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html"},
     {"title": "Crypt32.CERT_INFO.dwVersion", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#dwVersion"},
     {"title": "Crypt32.CERT_INFO.SerialNumber", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#SerialNumber"},
     {"title": "Crypt32.CERT_INFO.SignatureAlgorithm", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#SignatureAlgorithm"},
     {"title": "Crypt32.CERT_INFO.Issuer", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#Issuer"},
     {"title": "Crypt32.CERT_INFO.NotBefore", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#NotBefore"},
     {"title": "Crypt32.CERT_INFO.NotAfter", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#NotAfter"},
     {"title": "Crypt32.CERT_INFO.Subject", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#Subject"},
     {"title": "Crypt32.CERT_INFO.SubjectPublicKeyInfo", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#SubjectPublicKeyInfo"},
     {"title": "Crypt32.CERT_INFO.IssuerUniqueId", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#IssuerUniqueId"},
     {"title": "Crypt32.CERT_INFO.SubjectUniqueId", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#SubjectUniqueId"},
     {"title": "Crypt32.CERT_INFO.cExtension", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#cExtension"},
     {"title": "Crypt32.CERT_INFO.rgExtension", "text": "   ", "tags": "", "url": "Crypt32.CERT_INFO.html#rgExtension"},
     {"title": "Crypt32.CERT_CONTEXT", "text": "   ", "tags": "", "url": "Crypt32.CERT_CONTEXT.html"},
     {"title": "Crypt32.CERT_CONTEXT.dwCertEncodingType", "text": "   ", "tags": "", "url": "Crypt32.CERT_CONTEXT.html#dwCertEncodingType"},
     {"title": "Crypt32.CERT_CONTEXT.pbCertEncoded", "text": "   ", "tags": "", "url": "Crypt32.CERT_CONTEXT.html#pbCertEncoded"},
     {"title": "Crypt32.CERT_CONTEXT.cbCertEncoded", "text": "   ", "tags": "", "url": "Crypt32.CERT_CONTEXT.html#cbCertEncoded"},
     {"title": "Crypt32.CERT_CONTEXT.pCertInfo", "text": "   ", "tags": "", "url": "Crypt32.CERT_CONTEXT.html#pCertInfo"},
     {"title": "Crypt32.CERT_CONTEXT.hCertStore", "text": "   ", "tags": "", "url": "Crypt32.CERT_CONTEXT.html#hCertStore"},
     {"title": "Crypt32.CRYPT_KEY_PROV_PARAM", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_PARAM.html"},
     {"title": "Crypt32.CRYPT_KEY_PROV_PARAM.dwParam", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_PARAM.html#dwParam"},
     {"title": "Crypt32.CRYPT_KEY_PROV_PARAM.pbData", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_PARAM.html#pbData"},
     {"title": "Crypt32.CRYPT_KEY_PROV_PARAM.cbData", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_PARAM.html#cbData"},
     {"title": "Crypt32.CRYPT_KEY_PROV_PARAM.dwFlags", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_PARAM.html#dwFlags"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.pwszContainerName", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#pwszContainerName"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.pwszProvName", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#pwszProvName"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.dwProvType", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#dwProvType"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.dwFlags", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#dwFlags"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.cProvParam", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#cProvParam"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.rgProvParam", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#rgProvParam"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.dwKeySpec", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#dwKeySpec"},
     {"title": "Crypt32.CRYPT_KEY_PROV_INFO.__dummy", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_KEY_PROV_INFO.html#__dummy"},
     {"title": "Crypt32.CRYPT_HASH_BLOB", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_HASH_BLOB.html"},
     {"title": "Crypt32.CRYPT_HASH_BLOB.cbData", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_HASH_BLOB.html#cbData"},
     {"title": "Crypt32.CRYPT_HASH_BLOB.pbData", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_HASH_BLOB.html#pbData"},
     {"title": "Crypt32.CRL_ENTRY", "text": "   ", "tags": "", "url": "Crypt32.CRL_ENTRY.html"},
     {"title": "Crypt32.CRL_ENTRY.SerialNumber", "text": "   ", "tags": "", "url": "Crypt32.CRL_ENTRY.html#SerialNumber"},
     {"title": "Crypt32.CRL_ENTRY.RevocationDate", "text": "   ", "tags": "", "url": "Crypt32.CRL_ENTRY.html#RevocationDate"},
     {"title": "Crypt32.CRL_ENTRY.cExtension", "text": "   ", "tags": "", "url": "Crypt32.CRL_ENTRY.html#cExtension"},
     {"title": "Crypt32.CRL_ENTRY.rgExtension", "text": "   ", "tags": "", "url": "Crypt32.CRL_ENTRY.html#rgExtension"},
     {"title": "Crypt32.CRL_INFO", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html"},
     {"title": "Crypt32.CRL_INFO.dwVersion", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#dwVersion"},
     {"title": "Crypt32.CRL_INFO.SignatureAlgorithm", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#SignatureAlgorithm"},
     {"title": "Crypt32.CRL_INFO.Issuer", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#Issuer"},
     {"title": "Crypt32.CRL_INFO.ThisUpdate", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#ThisUpdate"},
     {"title": "Crypt32.CRL_INFO.NextUpdate", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#NextUpdate"},
     {"title": "Crypt32.CRL_INFO.cCRLEntry", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#cCRLEntry"},
     {"title": "Crypt32.CRL_INFO.rgCRLEntry", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#rgCRLEntry"},
     {"title": "Crypt32.CRL_INFO.cExtension", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#cExtension"},
     {"title": "Crypt32.CRL_INFO.rgExtension", "text": "   ", "tags": "", "url": "Crypt32.CRL_INFO.html#rgExtension"},
     {"title": "Crypt32.CRL_CONTEXT", "text": "   ", "tags": "", "url": "Crypt32.CRL_CONTEXT.html"},
     {"title": "Crypt32.CRL_CONTEXT.dwCertEncodingType", "text": "   ", "tags": "", "url": "Crypt32.CRL_CONTEXT.html#dwCertEncodingType"},
     {"title": "Crypt32.CRL_CONTEXT.pbCrlEncoded", "text": "   ", "tags": "", "url": "Crypt32.CRL_CONTEXT.html#pbCrlEncoded"},
     {"title": "Crypt32.CRL_CONTEXT.cbCrlEncoded", "text": "   ", "tags": "", "url": "Crypt32.CRL_CONTEXT.html#cbCrlEncoded"},
     {"title": "Crypt32.CRL_CONTEXT.pCrlInfo", "text": "   ", "tags": "", "url": "Crypt32.CRL_CONTEXT.html#pCrlInfo"},
     {"title": "Crypt32.CRL_CONTEXT.hCertStore", "text": "   ", "tags": "", "url": "Crypt32.CRL_CONTEXT.html#hCertStore"},
     {"title": "Crypt32.CRYPT_ATTRIBUTE", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ATTRIBUTE.html"},
     {"title": "Crypt32.CRYPT_ATTRIBUTE.pszObjId", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ATTRIBUTE.html#pszObjId"},
     {"title": "Crypt32.CRYPT_ATTRIBUTE.cValue", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ATTRIBUTE.html#cValue"},
     {"title": "Crypt32.CRYPT_ATTRIBUTE.rgValue", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_ATTRIBUTE.html#rgValue"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.cbSize", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#cbSize"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.dwMsgEncodingType", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#dwMsgEncodingType"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.pSigningCert", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#pSigningCert"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.HashAlgorithm", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#HashAlgorithm"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.pvHashAuxInfo", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#pvHashAuxInfo"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.cMsgCert", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#cMsgCert"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.rgpMsgCert", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#rgpMsgCert"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.cMsgCrl", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#cMsgCrl"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.rgpMsgCrl", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#rgpMsgCrl"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.cAuthAttr", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#cAuthAttr"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.rgAuthAttr", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#rgAuthAttr"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.cUnauthAttr", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#cUnauthAttr"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.rgUnauthAttr", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#rgUnauthAttr"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.dwFlags", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#dwFlags"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.dwInnerContentType", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#dwInnerContentType"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.HashEncryptionAlgorithm", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#HashEncryptionAlgorithm"},
     {"title": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.pvHashEncryptionAuxInfo", "text": "   ", "tags": "", "url": "Crypt32.CRYPT_SIGN_MESSAGE_PARA.html#pvHashEncryptionAuxInfo"},
     {"title": "Crypt32.AdvapiLib", "text": "   ", "tags": "", "url": "Crypt32.html#AdvapiLib"},
     {"title": "Crypt32.CryptoLib", "text": "   ", "tags": "", "url": "Crypt32.html#CryptoLib"},
     {"title": "Crypt32.CryptDlgLib", "text": "   ", "tags": "", "url": "Crypt32.html#CryptDlgLib"},
     {"title": "Crypt32.CRYPT_EXPORTABLE", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_EXPORTABLE"},
     {"title": "Crypt32.CRYPT_USER_PROTECTED", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_USER_PROTECTED"},
     {"title": "Crypt32.CRYPT_MACHINE_KEYSET", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_MACHINE_KEYSET"},
     {"title": "Crypt32.CRYPT_USER_KEYSET", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_USER_KEYSET"},
     {"title": "Crypt32.PKCS12_PREFER_CNG_KSP", "text": "   ", "tags": "", "url": "Crypt32.html#PKCS12_PREFER_CNG_KSP"},
     {"title": "Crypt32.PKCS12_ALWAYS_CNG_KSP", "text": "   ", "tags": "", "url": "Crypt32.html#PKCS12_ALWAYS_CNG_KSP"},
     {"title": "Crypt32.PKCS12_ALLOW_OVERWRITE_KEY", "text": "   ", "tags": "", "url": "Crypt32.html#PKCS12_ALLOW_OVERWRITE_KEY"},
     {"title": "Crypt32.PKCS12_NO_PERSIST_KEY", "text": "   ", "tags": "", "url": "Crypt32.html#PKCS12_NO_PERSIST_KEY"},
     {"title": "Crypt32.PKCS12_INCLUDE_EXTENDED_PROPERTIES", "text": "   ", "tags": "", "url": "Crypt32.html#PKCS12_INCLUDE_EXTENDED_PROPERTIES"},
     {"title": "Crypt32.CERT_STORE_PROV_MSG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_MSG"},
     {"title": "Crypt32.CERT_STORE_PROV_MEMORY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_MEMORY"},
     {"title": "Crypt32.CERT_STORE_PROV_FILE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_FILE"},
     {"title": "Crypt32.CERT_STORE_PROV_REG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_REG"},
     {"title": "Crypt32.CERT_STORE_PROV_PKCS7", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_PKCS7"},
     {"title": "Crypt32.CERT_STORE_PROV_SERIALIZED", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SERIALIZED"},
     {"title": "Crypt32.CERT_STORE_PROV_FILENAME_A", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_FILENAME_A"},
     {"title": "Crypt32.CERT_STORE_PROV_FILENAME_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_FILENAME_W"},
     {"title": "Crypt32.CERT_STORE_PROV_FILENAME", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_FILENAME"},
     {"title": "Crypt32.CERT_STORE_PROV_SYSTEM_A", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SYSTEM_A"},
     {"title": "Crypt32.CERT_STORE_PROV_SYSTEM_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SYSTEM_W"},
     {"title": "Crypt32.CERT_STORE_PROV_SYSTEM", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SYSTEM"},
     {"title": "Crypt32.CERT_STORE_PROV_COLLECTION", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_COLLECTION"},
     {"title": "Crypt32.CERT_STORE_PROV_SYSTEM_REGISTRY_A", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SYSTEM_REGISTRY_A"},
     {"title": "Crypt32.CERT_STORE_PROV_SYSTEM_REGISTRY_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SYSTEM_REGISTRY_W"},
     {"title": "Crypt32.CERT_STORE_PROV_SYSTEM_REGISTRY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SYSTEM_REGISTRY"},
     {"title": "Crypt32.CERT_STORE_PROV_PHYSICAL_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_PHYSICAL_W"},
     {"title": "Crypt32.CERT_STORE_PROV_PHYSICAL", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_PHYSICAL"},
     {"title": "Crypt32.CERT_STORE_PROV_SMART_CARD_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SMART_CARD_W"},
     {"title": "Crypt32.CERT_STORE_PROV_SMART_CARD", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_SMART_CARD"},
     {"title": "Crypt32.CERT_STORE_PROV_LDAP_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_LDAP_W"},
     {"title": "Crypt32.CERT_STORE_PROV_LDAP", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_PROV_LDAP"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_MEMORY", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_MEMORY"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_FILENAME_W", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_FILENAME_W"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_FILENAME", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_FILENAME"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SYSTEM_W", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SYSTEM_W"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SYSTEM", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SYSTEM"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_PKCS7", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_PKCS7"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SERIALIZED", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SERIALIZED"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_COLLECTION", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_COLLECTION"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SYSTEM_REGISTRY", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SYSTEM_REGISTRY"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_PHYSICAL_W", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_PHYSICAL_W"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_PHYSICAL", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_PHYSICAL"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SMART_CARD_W", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SMART_CARD_W"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_SMART_CARD", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_SMART_CARD"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_LDAP_W", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_LDAP_W"},
     {"title": "Crypt32.sz_CERT_STORE_PROV_LDAP", "text": "   ", "tags": "", "url": "Crypt32.html#sz_CERT_STORE_PROV_LDAP"},
     {"title": "Crypt32.X509_ASN_ENCODING", "text": "   ", "tags": "", "url": "Crypt32.html#X509_ASN_ENCODING"},
     {"title": "Crypt32.PKCS_7_ASN_ENCODING", "text": "   ", "tags": "", "url": "Crypt32.html#PKCS_7_ASN_ENCODING"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_UNPROTECTED_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_UNPROTECTED_FLAG"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCATION_MASK", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCATION_MASK"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCATION_SHIFT", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCATION_SHIFT"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_CURRENT_USER_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_CURRENT_USER_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCAL_MACHINE_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCAL_MACHINE_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_CURRENT_SERVICE_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_CURRENT_SERVICE_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_SERVICES_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_SERVICES_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_USERS_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_USERS_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_CURRENT_USER", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_CURRENT_USER"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCAL_MACHINE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCAL_MACHINE"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_CURRENT_SERVICE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_CURRENT_SERVICE"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_SERVICES", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_SERVICES"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_USERS", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_USERS"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY"},
     {"title": "Crypt32.CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE"},
     {"title": "Crypt32.CERT_STORE_READONLY_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_READONLY_FLAG"},
     {"title": "Crypt32.CERT_FIND_ANY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ANY"},
     {"title": "Crypt32.CERT_FIND_CERT_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_CERT_ID"},
     {"title": "Crypt32.CERT_FIND_CTL_USAGE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_CTL_USAGE"},
     {"title": "Crypt32.CERT_FIND_ENHKEY_USAGE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ENHKEY_USAGE"},
     {"title": "Crypt32.CERT_FIND_EXISTING", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_EXISTING"},
     {"title": "Crypt32.CERT_FIND_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_HASH"},
     {"title": "Crypt32.CERT_FIND_ISSUER_ATTR", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ISSUER_ATTR"},
     {"title": "Crypt32.CERT_FIND_ISSUER_NAME", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ISSUER_NAME"},
     {"title": "Crypt32.CERT_FIND_ISSUER_OF", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ISSUER_OF"},
     {"title": "Crypt32.CERT_FIND_KEY_IDENTIFIER", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_KEY_IDENTIFIER"},
     {"title": "Crypt32.CERT_FIND_KEY_SPEC", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_KEY_SPEC"},
     {"title": "Crypt32.CERT_FIND_MD5_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_MD5_HASH"},
     {"title": "Crypt32.CERT_FIND_PROPERTY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_PROPERTY"},
     {"title": "Crypt32.CERT_FIND_PUBLIC_KEY", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_PUBLIC_KEY"},
     {"title": "Crypt32.CERT_FIND_SHA1_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SHA1_HASH"},
     {"title": "Crypt32.CERT_FIND_SIGNATURE_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SIGNATURE_HASH"},
     {"title": "Crypt32.CERT_FIND_SUBJECT_ATTR", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SUBJECT_ATTR"},
     {"title": "Crypt32.CERT_FIND_SUBJECT_CERT", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SUBJECT_CERT"},
     {"title": "Crypt32.CERT_FIND_SUBJECT_NAME", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SUBJECT_NAME"},
     {"title": "Crypt32.CERT_FIND_SUBJECT_STR_A", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SUBJECT_STR_A"},
     {"title": "Crypt32.CERT_FIND_SUBJECT_STR_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_SUBJECT_STR_W"},
     {"title": "Crypt32.CERT_FIND_ISSUER_STR_A", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ISSUER_STR_A"},
     {"title": "Crypt32.CERT_FIND_ISSUER_STR_W", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_ISSUER_STR_W"},
     {"title": "Crypt32.CERT_FIND_OR_ENHKEY_USAGE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_OR_ENHKEY_USAGE_FLAG"},
     {"title": "Crypt32.CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG"},
     {"title": "Crypt32.CERT_FIND_NO_ENHKEY_USAGE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_NO_ENHKEY_USAGE_FLAG"},
     {"title": "Crypt32.CERT_FIND_VALID_ENHKEY_USAGE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_VALID_ENHKEY_USAGE_FLAG"},
     {"title": "Crypt32.CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG"},
     {"title": "Crypt32.CERT_NAME_EMAIL_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_EMAIL_TYPE"},
     {"title": "Crypt32.CERT_NAME_RDN_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_RDN_TYPE"},
     {"title": "Crypt32.CERT_NAME_ATTR_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_ATTR_TYPE"},
     {"title": "Crypt32.CERT_NAME_SIMPLE_DISPLAY_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_SIMPLE_DISPLAY_TYPE"},
     {"title": "Crypt32.CERT_NAME_FRIENDLY_DISPLAY_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_FRIENDLY_DISPLAY_TYPE"},
     {"title": "Crypt32.CERT_NAME_DNS_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_DNS_TYPE"},
     {"title": "Crypt32.CERT_NAME_URL_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_URL_TYPE"},
     {"title": "Crypt32.CERT_NAME_UPN_TYPE", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_UPN_TYPE"},
     {"title": "Crypt32.CERT_NAME_ISSUER_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NAME_ISSUER_FLAG"},
     {"title": "Crypt32.CERT_KEY_PROV_HANDLE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_KEY_PROV_HANDLE_PROP_ID"},
     {"title": "Crypt32.CERT_KEY_PROV_INFO_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_KEY_PROV_INFO_PROP_ID"},
     {"title": "Crypt32.CERT_SHA1_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SHA1_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_MD5_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_MD5_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_KEY_CONTEXT_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_KEY_CONTEXT_PROP_ID"},
     {"title": "Crypt32.CERT_KEY_SPEC_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_KEY_SPEC_PROP_ID"},
     {"title": "Crypt32.CERT_IE30_RESERVED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_IE30_RESERVED_PROP_ID"},
     {"title": "Crypt32.CERT_PUBKEY_HASH_RESERVED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_PUBKEY_HASH_RESERVED_PROP_ID"},
     {"title": "Crypt32.CERT_ENHKEY_USAGE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ENHKEY_USAGE_PROP_ID"},
     {"title": "Crypt32.CERT_CTL_USAGE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_CTL_USAGE_PROP_ID"},
     {"title": "Crypt32.CERT_NEXT_UPDATE_LOCATION_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NEXT_UPDATE_LOCATION_PROP_ID"},
     {"title": "Crypt32.CERT_FRIENDLY_NAME_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FRIENDLY_NAME_PROP_ID"},
     {"title": "Crypt32.CERT_PVK_FILE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_PVK_FILE_PROP_ID"},
     {"title": "Crypt32.CERT_DESCRIPTION_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_DESCRIPTION_PROP_ID"},
     {"title": "Crypt32.CERT_ACCESS_STATE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ACCESS_STATE_PROP_ID"},
     {"title": "Crypt32.CERT_SIGNATURE_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SIGNATURE_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_SMART_CARD_DATA_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SMART_CARD_DATA_PROP_ID"},
     {"title": "Crypt32.CERT_EFS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_EFS_PROP_ID"},
     {"title": "Crypt32.CERT_FORTEZZA_DATA_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FORTEZZA_DATA_PROP_ID"},
     {"title": "Crypt32.CERT_ARCHIVED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ARCHIVED_PROP_ID"},
     {"title": "Crypt32.CERT_KEY_IDENTIFIER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_KEY_IDENTIFIER_PROP_ID"},
     {"title": "Crypt32.CERT_AUTO_ENROLL_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_AUTO_ENROLL_PROP_ID"},
     {"title": "Crypt32.CERT_PUBKEY_ALG_PARA_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_PUBKEY_ALG_PARA_PROP_ID"},
     {"title": "Crypt32.CERT_CROSS_CERT_DIST_POINTS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_CROSS_CERT_DIST_POINTS_PROP_ID"},
     {"title": "Crypt32.CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_ENROLLMENT_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ENROLLMENT_PROP_ID"},
     {"title": "Crypt32.CERT_DATE_STAMP_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_DATE_STAMP_PROP_ID"},
     {"title": "Crypt32.CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_SUBJECT_NAME_MD5_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SUBJECT_NAME_MD5_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_EXTENDED_ERROR_INFO_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_EXTENDED_ERROR_INFO_PROP_ID"},
     {"title": "Crypt32.CERT_RENEWAL_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_RENEWAL_PROP_ID"},
     {"title": "Crypt32.CERT_ARCHIVED_KEY_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ARCHIVED_KEY_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_AUTO_ENROLL_RETRY_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_AUTO_ENROLL_RETRY_PROP_ID"},
     {"title": "Crypt32.CERT_AIA_URL_RETRIEVED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_AIA_URL_RETRIEVED_PROP_ID"},
     {"title": "Crypt32.CERT_AUTHORITY_INFO_ACCESS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_AUTHORITY_INFO_ACCESS_PROP_ID"},
     {"title": "Crypt32.CERT_BACKED_UP_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_BACKED_UP_PROP_ID"},
     {"title": "Crypt32.CERT_OCSP_RESPONSE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_OCSP_RESPONSE_PROP_ID"},
     {"title": "Crypt32.CERT_REQUEST_ORIGINATOR_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_REQUEST_ORIGINATOR_PROP_ID"},
     {"title": "Crypt32.CERT_SOURCE_LOCATION_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SOURCE_LOCATION_PROP_ID"},
     {"title": "Crypt32.CERT_SOURCE_URL_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SOURCE_URL_PROP_ID"},
     {"title": "Crypt32.CERT_NEW_KEY_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NEW_KEY_PROP_ID"},
     {"title": "Crypt32.CERT_OCSP_CACHE_PREFIX_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_OCSP_CACHE_PREFIX_PROP_ID"},
     {"title": "Crypt32.CERT_SMART_CARD_ROOT_INFO_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SMART_CARD_ROOT_INFO_PROP_ID"},
     {"title": "Crypt32.CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID"},
     {"title": "Crypt32.CERT_NCRYPT_KEY_HANDLE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NCRYPT_KEY_HANDLE_PROP_ID"},
     {"title": "Crypt32.CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID"},
     {"title": "Crypt32.CERT_SUBJECT_INFO_ACCESS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SUBJECT_INFO_ACCESS_PROP_ID"},
     {"title": "Crypt32.CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID"},
     {"title": "Crypt32.CERT_CA_DISABLE_CRL_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_CA_DISABLE_CRL_PROP_ID"},
     {"title": "Crypt32.CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID"},
     {"title": "Crypt32.CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID"},
     {"title": "Crypt32.CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID"},
     {"title": "Crypt32.CERT_SUBJECT_DISABLE_CRL_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SUBJECT_DISABLE_CRL_PROP_ID"},
     {"title": "Crypt32.CERT_CEP_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_CEP_PROP_ID"},
     {"title": "Crypt32.CERT_SIGN_HASH_CNG_ALG_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SIGN_HASH_CNG_ALG_PROP_ID"},
     {"title": "Crypt32.CERT_SCARD_PIN_ID_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SCARD_PIN_ID_PROP_ID"},
     {"title": "Crypt32.CERT_SCARD_PIN_INFO_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SCARD_PIN_INFO_PROP_ID"},
     {"title": "Crypt32.CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID"},
     {"title": "Crypt32.CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID"},
     {"title": "Crypt32.CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID"},
     {"title": "Crypt32.CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID"},
     {"title": "Crypt32.CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID"},
     {"title": "Crypt32.CERT_NO_EXPIRE_NOTIFICATION_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NO_EXPIRE_NOTIFICATION_PROP_ID"},
     {"title": "Crypt32.CERT_AUTH_ROOT_SHA256_HASH_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_AUTH_ROOT_SHA256_HASH_PROP_ID"},
     {"title": "Crypt32.CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID"},
     {"title": "Crypt32.CERT_HCRYPTPROV_TRANSFER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_HCRYPTPROV_TRANSFER_PROP_ID"},
     {"title": "Crypt32.CERT_SMART_CARD_READER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SMART_CARD_READER_PROP_ID"},
     {"title": "Crypt32.CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID"},
     {"title": "Crypt32.CERT_KEY_REPAIR_ATTEMPTED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_KEY_REPAIR_ATTEMPTED_PROP_ID"},
     {"title": "Crypt32.CERT_DISALLOWED_FILETIME_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_DISALLOWED_FILETIME_PROP_ID"},
     {"title": "Crypt32.CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID"},
     {"title": "Crypt32.CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID"},
     {"title": "Crypt32.CERT_FIRST_RESERVED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIRST_RESERVED_PROP_ID"},
     {"title": "Crypt32.CERT_LAST_RESERVED_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_LAST_RESERVED_PROP_ID"},
     {"title": "Crypt32.CERT_FIRST_USER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_FIRST_USER_PROP_ID"},
     {"title": "Crypt32.CERT_LAST_USER_PROP_ID", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_LAST_USER_PROP_ID"},
     {"title": "Crypt32.CRYPT_DELETEKEYSET", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_DELETEKEYSET"},
     {"title": "Crypt32.CRYPT_E_NOT_FOUND", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_E_NOT_FOUND"},
     {"title": "Crypt32.CRYPT_ACQUIRE_CACHE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_CACHE_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_USE_PROV_INFO_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_USE_PROV_INFO_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_COMPARE_KEY_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_COMPARE_KEY_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_NO_HEALING", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_NO_HEALING"},
     {"title": "Crypt32.CRYPT_ACQUIRE_SILENT_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_SILENT_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK"},
     {"title": "Crypt32.CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG"},
     {"title": "Crypt32.CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG", "text": "   ", "tags": "", "url": "Crypt32.html#CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG"},
     {"title": "Crypt32.szOID_RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA"},
     {"title": "Crypt32.szOID_PKCS", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS"},
     {"title": "Crypt32.szOID_RSA_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_HASH"},
     {"title": "Crypt32.szOID_RSA_ENCRYPT", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_ENCRYPT"},
     {"title": "Crypt32.szOID_PKCS_1", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_1"},
     {"title": "Crypt32.szOID_PKCS_2", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_2"},
     {"title": "Crypt32.szOID_PKCS_3", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_3"},
     {"title": "Crypt32.szOID_PKCS_4", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_4"},
     {"title": "Crypt32.szOID_PKCS_5", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_5"},
     {"title": "Crypt32.szOID_PKCS_6", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_6"},
     {"title": "Crypt32.szOID_PKCS_7", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_7"},
     {"title": "Crypt32.szOID_PKCS_8", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_8"},
     {"title": "Crypt32.szOID_PKCS_9", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_9"},
     {"title": "Crypt32.szOID_PKCS_10", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_10"},
     {"title": "Crypt32.szOID_PKCS_12", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_PKCS_12"},
     {"title": "Crypt32.szOID_RSA_RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_RSA"},
     {"title": "Crypt32.szOID_RSA_MD2RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MD2RSA"},
     {"title": "Crypt32.szOID_RSA_MD4RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MD4RSA"},
     {"title": "Crypt32.szOID_RSA_MD5RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MD5RSA"},
     {"title": "Crypt32.szOID_RSA_SHA1RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SHA1RSA"},
     {"title": "Crypt32.szOID_RSA_SETOAEP_RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SETOAEP_RSA"},
     {"title": "Crypt32.szOID_RSAES_OAEP", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSAES_OAEP"},
     {"title": "Crypt32.szOID_RSA_MGF1", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MGF1"},
     {"title": "Crypt32.szOID_RSA_PSPECIFIED", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_PSPECIFIED"},
     {"title": "Crypt32.szOID_RSA_SSA_PSS", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SSA_PSS"},
     {"title": "Crypt32.szOID_RSA_SHA256RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SHA256RSA"},
     {"title": "Crypt32.szOID_RSA_SHA384RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SHA384RSA"},
     {"title": "Crypt32.szOID_RSA_SHA512RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SHA512RSA"},
     {"title": "Crypt32.szOID_RSA_DH", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_DH"},
     {"title": "Crypt32.szOID_RSA_data", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_data"},
     {"title": "Crypt32.szOID_RSA_signedData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_signedData"},
     {"title": "Crypt32.szOID_RSA_envelopedData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_envelopedData"},
     {"title": "Crypt32.szOID_RSA_signEnvData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_signEnvData"},
     {"title": "Crypt32.szOID_RSA_digestedData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_digestedData"},
     {"title": "Crypt32.szOID_RSA_hashedData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_hashedData"},
     {"title": "Crypt32.szOID_RSA_encryptedData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_encryptedData"},
     {"title": "Crypt32.szOID_RSA_emailAddr", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_emailAddr"},
     {"title": "Crypt32.szOID_RSA_unstructName", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_unstructName"},
     {"title": "Crypt32.szOID_RSA_contentType", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_contentType"},
     {"title": "Crypt32.szOID_RSA_messageDigest", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_messageDigest"},
     {"title": "Crypt32.szOID_RSA_signingTime", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_signingTime"},
     {"title": "Crypt32.szOID_RSA_counterSign", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_counterSign"},
     {"title": "Crypt32.szOID_RSA_challengePwd", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_challengePwd"},
     {"title": "Crypt32.szOID_RSA_unstructAddr", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_unstructAddr"},
     {"title": "Crypt32.szOID_RSA_extCertAttrs", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_extCertAttrs"},
     {"title": "Crypt32.szOID_RSA_certExtensions", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_certExtensions"},
     {"title": "Crypt32.szOID_RSA_SMIMECapabilities", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SMIMECapabilities"},
     {"title": "Crypt32.szOID_RSA_preferSignedData", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_preferSignedData"},
     {"title": "Crypt32.szOID_TIMESTAMP_TOKEN", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_TIMESTAMP_TOKEN"},
     {"title": "Crypt32.szOID_RFC3161_counterSign", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RFC3161_counterSign"},
     {"title": "Crypt32.szOID_RSA_SMIMEalg", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SMIMEalg"},
     {"title": "Crypt32.szOID_RSA_SMIMEalgESDH", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SMIMEalgESDH"},
     {"title": "Crypt32.szOID_RSA_SMIMEalgCMS3DESwrap", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SMIMEalgCMS3DESwrap"},
     {"title": "Crypt32.szOID_RSA_SMIMEalgCMSRC2wrap", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_SMIMEalgCMSRC2wrap"},
     {"title": "Crypt32.szOID_RSA_MD2", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MD2"},
     {"title": "Crypt32.szOID_RSA_MD4", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MD4"},
     {"title": "Crypt32.szOID_RSA_MD5", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_MD5"},
     {"title": "Crypt32.szOID_RSA_RC2CBC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_RC2CBC"},
     {"title": "Crypt32.szOID_RSA_RC4", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_RC4"},
     {"title": "Crypt32.szOID_RSA_DES_EDE3_CBC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_DES_EDE3_CBC"},
     {"title": "Crypt32.szOID_RSA_RC5_CBCPad", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_RSA_RC5_CBCPad"},
     {"title": "Crypt32.szOID_ANSI_X942", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ANSI_X942"},
     {"title": "Crypt32.szOID_ANSI_X942_DH", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ANSI_X942_DH"},
     {"title": "Crypt32.szOID_X957", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_X957"},
     {"title": "Crypt32.szOID_X957_DSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_X957_DSA"},
     {"title": "Crypt32.szOID_X957_SHA1DSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_X957_SHA1DSA"},
     {"title": "Crypt32.szOID_ECC_PUBLIC_KEY", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECC_PUBLIC_KEY"},
     {"title": "Crypt32.szOID_ECC_CURVE_P256", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECC_CURVE_P256"},
     {"title": "Crypt32.szOID_ECC_CURVE_P384", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECC_CURVE_P384"},
     {"title": "Crypt32.szOID_ECC_CURVE_P521", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECC_CURVE_P521"},
     {"title": "Crypt32.szOID_ECDSA_SHA1", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECDSA_SHA1"},
     {"title": "Crypt32.szOID_ECDSA_SPECIFIED", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECDSA_SPECIFIED"},
     {"title": "Crypt32.szOID_ECDSA_SHA256", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECDSA_SHA256"},
     {"title": "Crypt32.szOID_ECDSA_SHA384", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECDSA_SHA384"},
     {"title": "Crypt32.szOID_ECDSA_SHA512", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_ECDSA_SHA512"},
     {"title": "Crypt32.szOID_NIST_AES128_CBC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_AES128_CBC"},
     {"title": "Crypt32.szOID_NIST_AES192_CBC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_AES192_CBC"},
     {"title": "Crypt32.szOID_NIST_AES256_CBC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_AES256_CBC"},
     {"title": "Crypt32.szOID_NIST_AES128_WRAP", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_AES128_WRAP"},
     {"title": "Crypt32.szOID_NIST_AES192_WRAP", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_AES192_WRAP"},
     {"title": "Crypt32.szOID_NIST_AES256_WRAP", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_AES256_WRAP"},
     {"title": "Crypt32.szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF"},
     {"title": "Crypt32.szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF"},
     {"title": "Crypt32.szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF"},
     {"title": "Crypt32.szOID_DS", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DS"},
     {"title": "Crypt32.szOID_DSALG", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DSALG"},
     {"title": "Crypt32.szOID_DSALG_CRPT", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DSALG_CRPT"},
     {"title": "Crypt32.szOID_DSALG_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DSALG_HASH"},
     {"title": "Crypt32.szOID_DSALG_SIGN", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DSALG_SIGN"},
     {"title": "Crypt32.szOID_DSALG_RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_DSALG_RSA"},
     {"title": "Crypt32.szOID_OIW", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIW"},
     {"title": "Crypt32.szOID_OIWSEC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC"},
     {"title": "Crypt32.szOID_OIWSEC_md4RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_md4RSA"},
     {"title": "Crypt32.szOID_OIWSEC_md5RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_md5RSA"},
     {"title": "Crypt32.szOID_OIWSEC_md4RSA2", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_md4RSA2"},
     {"title": "Crypt32.szOID_OIWSEC_desECB", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_desECB"},
     {"title": "Crypt32.szOID_OIWSEC_desCBC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_desCBC"},
     {"title": "Crypt32.szOID_OIWSEC_desOFB", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_desOFB"},
     {"title": "Crypt32.szOID_OIWSEC_desCFB", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_desCFB"},
     {"title": "Crypt32.szOID_OIWSEC_desMAC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_desMAC"},
     {"title": "Crypt32.szOID_OIWSEC_rsaSign", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_rsaSign"},
     {"title": "Crypt32.szOID_OIWSEC_dsa", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_dsa"},
     {"title": "Crypt32.szOID_OIWSEC_shaDSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_shaDSA"},
     {"title": "Crypt32.szOID_OIWSEC_mdc2RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_mdc2RSA"},
     {"title": "Crypt32.szOID_OIWSEC_shaRSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_shaRSA"},
     {"title": "Crypt32.szOID_OIWSEC_dhCommMod", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_dhCommMod"},
     {"title": "Crypt32.szOID_OIWSEC_desEDE", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_desEDE"},
     {"title": "Crypt32.szOID_OIWSEC_sha", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_sha"},
     {"title": "Crypt32.szOID_OIWSEC_mdc2", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_mdc2"},
     {"title": "Crypt32.szOID_OIWSEC_dsaComm", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_dsaComm"},
     {"title": "Crypt32.szOID_OIWSEC_dsaCommSHA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_dsaCommSHA"},
     {"title": "Crypt32.szOID_OIWSEC_rsaXchg", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_rsaXchg"},
     {"title": "Crypt32.szOID_OIWSEC_keyHashSeal", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_keyHashSeal"},
     {"title": "Crypt32.szOID_OIWSEC_md2RSASign", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_md2RSASign"},
     {"title": "Crypt32.szOID_OIWSEC_md5RSASign", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_md5RSASign"},
     {"title": "Crypt32.szOID_OIWSEC_sha1", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_sha1"},
     {"title": "Crypt32.szOID_OIWSEC_dsaSHA1", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_dsaSHA1"},
     {"title": "Crypt32.szOID_OIWSEC_dsaCommSHA1", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_dsaCommSHA1"},
     {"title": "Crypt32.szOID_OIWSEC_sha1RSASign", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWSEC_sha1RSASign"},
     {"title": "Crypt32.szOID_OIWDIR", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWDIR"},
     {"title": "Crypt32.szOID_OIWDIR_CRPT", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWDIR_CRPT"},
     {"title": "Crypt32.szOID_OIWDIR_HASH", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWDIR_HASH"},
     {"title": "Crypt32.szOID_OIWDIR_SIGN", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWDIR_SIGN"},
     {"title": "Crypt32.szOID_OIWDIR_md2", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWDIR_md2"},
     {"title": "Crypt32.szOID_OIWDIR_md2RSA", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_OIWDIR_md2RSA"},
     {"title": "Crypt32.szOID_INFOSEC", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC"},
     {"title": "Crypt32.szOID_INFOSEC_sdnsSignature", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_sdnsSignature"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicSignature", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicSignature"},
     {"title": "Crypt32.szOID_INFOSEC_sdnsConfidentiality", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_sdnsConfidentiality"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicConfidentiality", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicConfidentiality"},
     {"title": "Crypt32.szOID_INFOSEC_sdnsIntegrity", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_sdnsIntegrity"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicIntegrity", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicIntegrity"},
     {"title": "Crypt32.szOID_INFOSEC_sdnsTokenProtection", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_sdnsTokenProtection"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicTokenProtection", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicTokenProtection"},
     {"title": "Crypt32.szOID_INFOSEC_sdnsKeyManagement", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_sdnsKeyManagement"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicKeyManagement", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicKeyManagement"},
     {"title": "Crypt32.szOID_INFOSEC_sdnsKMandSig", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_sdnsKMandSig"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicKMandSig", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicKMandSig"},
     {"title": "Crypt32.szOID_INFOSEC_SuiteASignature", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_SuiteASignature"},
     {"title": "Crypt32.szOID_INFOSEC_SuiteAConfidentiality", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_SuiteAConfidentiality"},
     {"title": "Crypt32.szOID_INFOSEC_SuiteAIntegrity", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_SuiteAIntegrity"},
     {"title": "Crypt32.szOID_INFOSEC_SuiteATokenProtection", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_SuiteATokenProtection"},
     {"title": "Crypt32.szOID_INFOSEC_SuiteAKeyManagement", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_SuiteAKeyManagement"},
     {"title": "Crypt32.szOID_INFOSEC_SuiteAKMandSig", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_SuiteAKMandSig"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicUpdatedSig", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicUpdatedSig"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicKMandUpdSig", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicKMandUpdSig"},
     {"title": "Crypt32.szOID_INFOSEC_mosaicUpdatedInteg", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_INFOSEC_mosaicUpdatedInteg"},
     {"title": "Crypt32.szOID_NIST_sha256", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_sha256"},
     {"title": "Crypt32.szOID_NIST_sha384", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_sha384"},
     {"title": "Crypt32.szOID_NIST_sha512", "text": "   ", "tags": "", "url": "Crypt32.html#szOID_NIST_sha512"},
     {"title": "Crypt32.CERT_STORE_ADD_NEW", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_NEW"},
     {"title": "Crypt32.CERT_STORE_ADD_USE_EXISTING", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_USE_EXISTING"},
     {"title": "Crypt32.CERT_STORE_ADD_REPLACE_EXISTING", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_REPLACE_EXISTING"},
     {"title": "Crypt32.CERT_STORE_ADD_ALWAYS", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_ALWAYS"},
     {"title": "Crypt32.CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES"},
     {"title": "Crypt32.CERT_STORE_ADD_NEWER", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_NEWER"},
     {"title": "Crypt32.CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES", "text": "   ", "tags": "", "url": "Crypt32.html#CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES"},
     {"title": "Crypt32.PFXImportCertStore", "text": "    ", "tags": "", "url": "Crypt32.html#PFXImportCertStore"},
     {"title": "Crypt32.CertOpenSystemStore", "text": "    ", "tags": "", "url": "Crypt32.html#CertOpenSystemStore"},
     {"title": "Crypt32.CertOpenStore", "text": "    ", "tags": "", "url": "Crypt32.html#CertOpenStore"},
     {"title": "Crypt32.CertCloseStore", "text": "    ", "tags": "", "url": "Crypt32.html#CertCloseStore"},
     {"title": "Crypt32.CertEnumCertificatesInStore", "text": "    ", "tags": "", "url": "Crypt32.html#CertEnumCertificatesInStore"},
     {"title": "Crypt32.CertFindCertificateInStore", "text": "    ", "tags": "", "url": "Crypt32.html#CertFindCertificateInStore"},
     {"title": "Crypt32.CertFreeCertificateContext", "text": "    ", "tags": "", "url": "Crypt32.html#CertFreeCertificateContext"},
     {"title": "Crypt32.CertDuplicateCertificateContext", "text": "    ", "tags": "", "url": "Crypt32.html#CertDuplicateCertificateContext"},
     {"title": "Crypt32.CertGetNameStringA", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetNameStringA"},
     {"title": "Crypt32.CertGetNameStringW", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetNameStringW"},
     {"title": "Crypt32.CertGetNameString", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetNameString"},
     {"title": "Crypt32.GetFriendlyNameOfCert", "text": "    ", "tags": "", "url": "Crypt32.html#GetFriendlyNameOfCert"},
     {"title": "Crypt32.CertGetCertificateContextProperty", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetCertificateContextProperty"},
     {"title": "Crypt32.CryptAcquireContextA", "text": "    ", "tags": "", "url": "Crypt32.html#CryptAcquireContextA"},
     {"title": "Crypt32.CryptAcquireContextU", "text": "    ", "tags": "", "url": "Crypt32.html#CryptAcquireContextU"},
     {"title": "Crypt32.CryptAcquireContextW", "text": "    ", "tags": "", "url": "Crypt32.html#CryptAcquireContextW"},
     {"title": "Crypt32.CryptAcquireContext", "text": "    ", "tags": "", "url": "Crypt32.html#CryptAcquireContext"},
     {"title": "Crypt32.CryptAcquireCertificatePrivateKey", "text": "    ", "tags": "", "url": "Crypt32.html#CryptAcquireCertificatePrivateKey"},
     {"title": "Crypt32.CertAddCertificateContextToStore", "text": "    ", "tags": "", "url": "Crypt32.html#CertAddCertificateContextToStore"},
     {"title": "Crypt32.CryptSignMessage", "text": "    ", "tags": "", "url": "Crypt32.html#CryptSignMessage"},
     {"title": "Crypt32.CertGetNameStringPAS", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetNameStringPAS"},
     {"title": "Crypt32.CertGetNameStringPAS", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetNameStringPAS"},
     {"title": "Crypt32.CertGetCertificateContextPropertyPAS", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetCertificateContextPropertyPAS"},
     {"title": "Crypt32.CertGetCertificateContextPropertyPAS", "text": "    ", "tags": "", "url": "Crypt32.html#CertGetCertificateContextPropertyPAS"},
     {"title": "Crypt32.HCERTSTORE", "text": "   ", "tags": "", "url": "Crypt32.html#HCERTSTORE"},
     {"title": "Crypt32.HCRYPTPROV", "text": "   ", "tags": "", "url": "Crypt32.html#HCRYPTPROV"},
     {"title": "Crypt32.HCRYPTKEY", "text": "   ", "tags": "", "url": "Crypt32.html#HCRYPTKEY"},
     {"title": "Crypt32.PCRYPT_DATA_BLOB", "text": "   ", "tags": "", "url": "Crypt32.html#PCRYPT_DATA_BLOB"},
     {"title": "Crypt32.PCERT_EXTENSION", "text": "   ", "tags": "", "url": "Crypt32.html#PCERT_EXTENSION"},
     {"title": "Crypt32.PCERT_INFO", "text": "   ", "tags": "", "url": "Crypt32.html#PCERT_INFO"},
     {"title": "Crypt32.PPCCERT_CONTEXT", "text": "   ", "tags": "", "url": "Crypt32.html#PPCCERT_CONTEXT"},
     {"title": "Crypt32.PCCERT_CONTEXT", "text": "   ", "tags": "", "url": "Crypt32.html#PCCERT_CONTEXT"},
     {"title": "Crypt32.PCRYPT_KEY_PROV_PARAM", "text": "   ", "tags": "", "url": "Crypt32.html#PCRYPT_KEY_PROV_PARAM"},
     {"title": "Crypt32.PCRYPT_KEY_PROV_INFO", "text": "   ", "tags": "", "url": "Crypt32.html#PCRYPT_KEY_PROV_INFO"},
     {"title": "Crypt32.PCRYPT_HASH_BLOB", "text": "   ", "tags": "", "url": "Crypt32.html#PCRYPT_HASH_BLOB"},
     {"title": "Crypt32.PCRL_ENTRY", "text": "   ", "tags": "", "url": "Crypt32.html#PCRL_ENTRY"},
     {"title": "Crypt32.PCRL_INFO", "text": "   ", "tags": "", "url": "Crypt32.html#PCRL_INFO"},
     {"title": "Crypt32.PCCRL_CONTEXT", "text": "   ", "tags": "", "url": "Crypt32.html#PCCRL_CONTEXT"},
     {"title": "Crypt32.PCRYPT_ATTRIBUTE", "text": "   ", "tags": "", "url": "Crypt32.html#PCRYPT_ATTRIBUTE"},
     {"title": "Crypt32.PCRYPT_SIGN_MESSAGE_PARA", "text": "   ", "tags": "", "url": "Crypt32.html#PCRYPT_SIGN_MESSAGE_PARA"},
     {"title": "Crypt32.PPtrArray", "text": "   ", "tags": "", "url": "Crypt32.html#PPtrArray"},
     {"title": "Crypt32.TPtrArray", "text": "   ", "tags": "", "url": "Crypt32.html#TPtrArray"},
     {"title": "Crypt32.PDWORDArray", "text": "   ", "tags": "", "url": "Crypt32.html#PDWORDArray"},
     {"title": "Crypt32.TDWORDArray", "text": "   ", "tags": "", "url": "Crypt32.html#TDWORDArray"},
     {"title": "dnssend", "text": " Support for sending DNS queries by UDP or TCP protocol. It can retrieve zone transfers too!  Used RFC: RFC-1035, RFC-1183, RFC1706, RFC1712, RFC2163, RFC2230   ", "tags": "", "url": "dnssend.html"},
     {"title": "dnssend.TDNSSend", "text": "  Note: Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "dnssend.TDNSSend.html"},
     {"title": "dnssend.TDNSSend.Create", "text": "    ", "tags": "", "url": "dnssend.TDNSSend.html#Create"},
     {"title": "dnssend.TDNSSend.Destroy", "text": "    ", "tags": "", "url": "dnssend.TDNSSend.html#Destroy"},
     {"title": "dnssend.TDNSSend.DNSQuery", "text": "Query a DNSHost for QType resources correspond to a name. Supported QType values are: Qtype_A, Qtype_NS, Qtype_MD, Qtype_MF, Qtype_CNAME, Qtype_SOA, Qtype_MB, Qtype_MG, Qtype_MR, Qtype_NULL, Qtype_PTR, Qtype_HINFO, Qtype_MINFO, Qtype_MX, Qtype_TXT, Qtype_RP, Qtype_AFSDB, Qtype_X25, Qtype_ISDN, Qtype_RT, Qtype_NSAP, Qtype_NSAPPTR, Qtype_PX, Qtype_GPOS, Qtype_KX.  Type for zone transfers QTYPE_AXFR is supported too, but only in TCP mode!  &quot;Name&quot; is domain name or host name for queried resource. If &quot;name&quot; is IP address, automatically convert to reverse domain form (.in-addr.arpa).  If result is True, Reply contains resource records. One record on one line. If Resource record have multiple fields, they are stored on line divided by comma. (example: MX record contains value 'rs.cesnet.cz' with preference number 10, string in Reply is: '10,rs.cesnet.cz'). All numbers or IP address in resource are converted to string form.    ", "tags": "", "url": "dnssend.TDNSSend.html#DNSQuery"},
     {"title": "dnssend.TDNSSend.Sock", "text": "Socket object used for UDP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "dnssend.TDNSSend.html#Sock"},
     {"title": "dnssend.TDNSSend.TCPSock", "text": "Socket object used for TCP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "dnssend.TDNSSend.html#TCPSock"},
     {"title": "dnssend.TDNSSend.UseTCP", "text": "if True, then is used TCP protocol instead UDP. It is needed for zone transfers, etc.   ", "tags": "", "url": "dnssend.TDNSSend.html#UseTCP"},
     {"title": "dnssend.TDNSSend.RCode", "text": "After DNS operation contains ResultCode of DNS operation. Values are: 0-no error, 1-format error, 2-server failure, 3-name error, 4-not implemented, 5-refused.   ", "tags": "", "url": "dnssend.TDNSSend.html#RCode"},
     {"title": "dnssend.TDNSSend.Authoritative", "text": "True, if answer is authoritative.   ", "tags": "", "url": "dnssend.TDNSSend.html#Authoritative"},
     {"title": "dnssend.TDNSSend.Truncated", "text": "True, if answer is truncated to 512 bytes.   ", "tags": "", "url": "dnssend.TDNSSend.html#Truncated"},
     {"title": "dnssend.TDNSSend.AnswerInfo", "text": "Detailed informations from name server reply. One record per line. Record have comma delimited entries with type number, TTL and data filelds. This information contains detailed information about query reply.   ", "tags": "", "url": "dnssend.TDNSSend.html#AnswerInfo"},
     {"title": "dnssend.TDNSSend.NameserverInfo", "text": "Detailed informations from name server reply. One record per line. Record have comma delimited entries with type number, TTL and data filelds. This information contains detailed information about nameserver.   ", "tags": "", "url": "dnssend.TDNSSend.html#NameserverInfo"},
     {"title": "dnssend.TDNSSend.AdditionalInfo", "text": "Detailed informations from name server reply. One record per line. Record have comma delimited entries with type number, TTL and data filelds. This information contains detailed additional information.   ", "tags": "", "url": "dnssend.TDNSSend.html#AdditionalInfo"},
     {"title": "dnssend.cDnsProtocol", "text": "   ", "tags": "", "url": "dnssend.html#cDnsProtocol"},
     {"title": "dnssend.QTYPE_A", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_A"},
     {"title": "dnssend.QTYPE_NS", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_NS"},
     {"title": "dnssend.QTYPE_MD", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MD"},
     {"title": "dnssend.QTYPE_MF", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MF"},
     {"title": "dnssend.QTYPE_CNAME", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_CNAME"},
     {"title": "dnssend.QTYPE_SOA", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_SOA"},
     {"title": "dnssend.QTYPE_MB", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MB"},
     {"title": "dnssend.QTYPE_MG", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MG"},
     {"title": "dnssend.QTYPE_MR", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MR"},
     {"title": "dnssend.QTYPE_NULL", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_NULL"},
     {"title": "dnssend.QTYPE_WKS", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_WKS"},
     {"title": "dnssend.QTYPE_PTR", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_PTR"},
     {"title": "dnssend.QTYPE_HINFO", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_HINFO"},
     {"title": "dnssend.QTYPE_MINFO", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MINFO"},
     {"title": "dnssend.QTYPE_MX", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MX"},
     {"title": "dnssend.QTYPE_TXT", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_TXT"},
     {"title": "dnssend.QTYPE_RP", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_RP"},
     {"title": "dnssend.QTYPE_AFSDB", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_AFSDB"},
     {"title": "dnssend.QTYPE_X25", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_X25"},
     {"title": "dnssend.QTYPE_ISDN", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_ISDN"},
     {"title": "dnssend.QTYPE_RT", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_RT"},
     {"title": "dnssend.QTYPE_NSAP", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_NSAP"},
     {"title": "dnssend.QTYPE_NSAPPTR", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_NSAPPTR"},
     {"title": "dnssend.QTYPE_SIG", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_SIG"},
     {"title": "dnssend.QTYPE_KEY", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_KEY"},
     {"title": "dnssend.QTYPE_PX", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_PX"},
     {"title": "dnssend.QTYPE_GPOS", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_GPOS"},
     {"title": "dnssend.QTYPE_AAAA", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_AAAA"},
     {"title": "dnssend.QTYPE_LOC", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_LOC"},
     {"title": "dnssend.QTYPE_NXT", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_NXT"},
     {"title": "dnssend.QTYPE_SRV", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_SRV"},
     {"title": "dnssend.QTYPE_NAPTR", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_NAPTR"},
     {"title": "dnssend.QTYPE_KX", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_KX"},
     {"title": "dnssend.QTYPE_SPF", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_SPF"},
     {"title": "dnssend.QTYPE_AXFR", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_AXFR"},
     {"title": "dnssend.QTYPE_MAILB", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MAILB"},
     {"title": "dnssend.QTYPE_MAILA", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_MAILA"},
     {"title": "dnssend.QTYPE_ALL", "text": "   ", "tags": "", "url": "dnssend.html#QTYPE_ALL"},
     {"title": "dnssend.GetMailServers", "text": "A very useful function, and example of it's use is found in the TDNSSend object. This function is used to get mail servers for a domain and sort them by preference numbers. &quot;Servers&quot; contains only the domain names of the mail servers in the right order (without preference number!). The first domain name will always be the highest preferenced mail server. Returns boolean True if all went well.    ", "tags": "", "url": "dnssend.html#GetMailServers"},
     {"title": "ftpsend", "text": "   ", "tags": "", "url": "ftpsend.html"},
     {"title": "ftpsend.TFTPListRec", "text": " parsed from directory listing of FTP server.   ", "tags": "", "url": "ftpsend.TFTPListRec.html"},
     {"title": "ftpsend.TFTPListRec.Assign", "text": "You can assign another TFTPListRec to this object.    ", "tags": "", "url": "ftpsend.TFTPListRec.html#Assign"},
     {"title": "ftpsend.TFTPListRec.FileName", "text": "name of file   ", "tags": "", "url": "ftpsend.TFTPListRec.html#FileName"},
     {"title": "ftpsend.TFTPListRec.Directory", "text": "if name is subdirectory not file.   ", "tags": "", "url": "ftpsend.TFTPListRec.html#Directory"},
     {"title": "ftpsend.TFTPListRec.Readable", "text": "if you have rights to read   ", "tags": "", "url": "ftpsend.TFTPListRec.html#Readable"},
     {"title": "ftpsend.TFTPListRec.FileSize", "text": "size of file in bytes   ", "tags": "", "url": "ftpsend.TFTPListRec.html#FileSize"},
     {"title": "ftpsend.TFTPListRec.FileTime", "text": "date and time of file. Local server timezone is used. Any timezone conversions was not done!   ", "tags": "", "url": "ftpsend.TFTPListRec.html#FileTime"},
     {"title": "ftpsend.TFTPListRec.OriginalLine", "text": "original unparsed line   ", "tags": "", "url": "ftpsend.TFTPListRec.html#OriginalLine"},
     {"title": "ftpsend.TFTPListRec.Mask", "text": "mask what was used for parsing   ", "tags": "", "url": "ftpsend.TFTPListRec.html#Mask"},
     {"title": "ftpsend.TFTPListRec.Permission", "text": "permission string (depending on used mask!)   ", "tags": "", "url": "ftpsend.TFTPListRec.html#Permission"},
     {"title": "ftpsend.TFTPList", "text": " This object is used for holding lististing of all files information in listed directory on FTP server.   ", "tags": "", "url": "ftpsend.TFTPList.html"},
     {"title": "ftpsend.TFTPList.FList", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#FList"},
     {"title": "ftpsend.TFTPList.FLines", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#FLines"},
     {"title": "ftpsend.TFTPList.FMasks", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#FMasks"},
     {"title": "ftpsend.TFTPList.FUnparsedLines", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#FUnparsedLines"},
     {"title": "ftpsend.TFTPList.Monthnames", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Monthnames"},
     {"title": "ftpsend.TFTPList.BlockSize", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#BlockSize"},
     {"title": "ftpsend.TFTPList.DirFlagValue", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#DirFlagValue"},
     {"title": "ftpsend.TFTPList.FileName", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#FileName"},
     {"title": "ftpsend.TFTPList.VMSFileName", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#VMSFileName"},
     {"title": "ftpsend.TFTPList.Day", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Day"},
     {"title": "ftpsend.TFTPList.Month", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Month"},
     {"title": "ftpsend.TFTPList.ThreeMonth", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#ThreeMonth"},
     {"title": "ftpsend.TFTPList.YearTime", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#YearTime"},
     {"title": "ftpsend.TFTPList.Year", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Year"},
     {"title": "ftpsend.TFTPList.Hours", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Hours"},
     {"title": "ftpsend.TFTPList.HoursModif", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#HoursModif"},
     {"title": "ftpsend.TFTPList.Minutes", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Minutes"},
     {"title": "ftpsend.TFTPList.Seconds", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Seconds"},
     {"title": "ftpsend.TFTPList.Size", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Size"},
     {"title": "ftpsend.TFTPList.Permissions", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#Permissions"},
     {"title": "ftpsend.TFTPList.DirFlag", "text": "   ", "tags": "", "url": "ftpsend.TFTPList.html#DirFlag"},
     {"title": "ftpsend.TFTPList.GetListItem", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#GetListItem"},
     {"title": "ftpsend.TFTPList.ParseEPLF", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#ParseEPLF"},
     {"title": "ftpsend.TFTPList.ClearStore", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#ClearStore"},
     {"title": "ftpsend.TFTPList.ParseByMask", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#ParseByMask"},
     {"title": "ftpsend.TFTPList.CheckValues", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#CheckValues"},
     {"title": "ftpsend.TFTPList.FillRecord", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#FillRecord"},
     {"title": "ftpsend.TFTPList.Create", "text": "Constructor. You not need create this object, it is created by TFTPSend class as their property.    ", "tags": "", "url": "ftpsend.TFTPList.html#Create"},
     {"title": "ftpsend.TFTPList.Destroy", "text": "    ", "tags": "", "url": "ftpsend.TFTPList.html#Destroy"},
     {"title": "ftpsend.TFTPList.Clear", "text": "Clear list.    ", "tags": "", "url": "ftpsend.TFTPList.html#Clear"},
     {"title": "ftpsend.TFTPList.Count", "text": "count of holded TFTPListRec objects    ", "tags": "", "url": "ftpsend.TFTPList.html#Count"},
     {"title": "ftpsend.TFTPList.Assign", "text": "Assigns one list to another    ", "tags": "", "url": "ftpsend.TFTPList.html#Assign"},
     {"title": "ftpsend.TFTPList.ParseLines", "text": "try to parse raw directory listing in lines to list of TFTPListRec.    ", "tags": "", "url": "ftpsend.TFTPList.html#ParseLines"},
     {"title": "ftpsend.TFTPList.ParseMLSDLines", "text": "try to parse MLSD directory listing in lines to list of TFTPListRec.    ", "tags": "", "url": "ftpsend.TFTPList.html#ParseMLSDLines"},
     {"title": "ftpsend.TFTPList.List", "text": "By this property you have access to list of TFTPListRec. This is for compatibility only. Please, use Items instead.   ", "tags": "", "url": "ftpsend.TFTPList.html#List"},
     {"title": "ftpsend.TFTPList.Items", "text": "By this property you have access to list of TFTPListRec.   ", "tags": "", "url": "ftpsend.TFTPList.html#Items"},
     {"title": "ftpsend.TFTPList.Lines", "text": "Set of lines with RAW directory listing for parseLines   ", "tags": "", "url": "ftpsend.TFTPList.html#Lines"},
     {"title": "ftpsend.TFTPList.Masks", "text": "Set of masks for directory listing parser. It is predefined by default, however you can modify it as you need. (for example, you can add your own definition mask.) Mask is same as mask used in TotalCommander.   ", "tags": "", "url": "ftpsend.TFTPList.html#Masks"},
     {"title": "ftpsend.TFTPList.UnparsedLines", "text": "After ParseLines it holding lines what was not sucessfully parsed.   ", "tags": "", "url": "ftpsend.TFTPList.html#UnparsedLines"},
     {"title": "ftpsend.TFTPSend", "text": " Note: Are you missing properties for setting Username and Password? Look to parent TSynaClient object! (Username and Password have default values for &quot;anonymous&quot; FTP login)  Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "ftpsend.TFTPSend.html"},
     {"title": "ftpsend.TFTPSend.FOnStatus", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FOnStatus"},
     {"title": "ftpsend.TFTPSend.FSock", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FSock"},
     {"title": "ftpsend.TFTPSend.FDSock", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FDSock"},
     {"title": "ftpsend.TFTPSend.FResultCode", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FResultCode"},
     {"title": "ftpsend.TFTPSend.FResultString", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FResultString"},
     {"title": "ftpsend.TFTPSend.FFullResult", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFullResult"},
     {"title": "ftpsend.TFTPSend.FAccount", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FAccount"},
     {"title": "ftpsend.TFTPSend.FFWHost", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFWHost"},
     {"title": "ftpsend.TFTPSend.FFWPort", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFWPort"},
     {"title": "ftpsend.TFTPSend.FFWUsername", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFWUsername"},
     {"title": "ftpsend.TFTPSend.FFWPassword", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFWPassword"},
     {"title": "ftpsend.TFTPSend.FFWMode", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFWMode"},
     {"title": "ftpsend.TFTPSend.FDataStream", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FDataStream"},
     {"title": "ftpsend.TFTPSend.FDataIP", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FDataIP"},
     {"title": "ftpsend.TFTPSend.FDataPort", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FDataPort"},
     {"title": "ftpsend.TFTPSend.FDirectFile", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FDirectFile"},
     {"title": "ftpsend.TFTPSend.FDirectFileName", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FDirectFileName"},
     {"title": "ftpsend.TFTPSend.FCanResume", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FCanResume"},
     {"title": "ftpsend.TFTPSend.FPassiveMode", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FPassiveMode"},
     {"title": "ftpsend.TFTPSend.FForceDefaultPort", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FForceDefaultPort"},
     {"title": "ftpsend.TFTPSend.FForceOldPort", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FForceOldPort"},
     {"title": "ftpsend.TFTPSend.FFtpList", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFtpList"},
     {"title": "ftpsend.TFTPSend.FBinaryMode", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FBinaryMode"},
     {"title": "ftpsend.TFTPSend.FAutoTLS", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FAutoTLS"},
     {"title": "ftpsend.TFTPSend.FIsTLS", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FIsTLS"},
     {"title": "ftpsend.TFTPSend.FIsDataTLS", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FIsDataTLS"},
     {"title": "ftpsend.TFTPSend.FTLSonData", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FTLSonData"},
     {"title": "ftpsend.TFTPSend.FFullSSL", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FFullSSL"},
     {"title": "ftpsend.TFTPSend.FUseMLSDList", "text": "   ", "tags": "", "url": "ftpsend.TFTPSend.html#FUseMLSDList"},
     {"title": "ftpsend.TFTPSend.CustomLogon", "text": "Custom definition of login sequence. You can use this when you set FWMode to value -1.   ", "tags": "", "url": "ftpsend.TFTPSend.html#CustomLogon"},
     {"title": "ftpsend.TFTPSend.Auth", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#Auth"},
     {"title": "ftpsend.TFTPSend.Connect", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#Connect"},
     {"title": "ftpsend.TFTPSend.InternalStor", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#InternalStor"},
     {"title": "ftpsend.TFTPSend.DataSocket", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#DataSocket"},
     {"title": "ftpsend.TFTPSend.AcceptDataSocket", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#AcceptDataSocket"},
     {"title": "ftpsend.TFTPSend.DoStatus", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#DoStatus"},
     {"title": "ftpsend.TFTPSend.Create", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#Create"},
     {"title": "ftpsend.TFTPSend.Destroy", "text": "    ", "tags": "", "url": "ftpsend.TFTPSend.html#Destroy"},
     {"title": "ftpsend.TFTPSend.ReadResult", "text": "Waits and read FTP server response. You need this only in special cases!    ", "tags": "", "url": "ftpsend.TFTPSend.html#ReadResult"},
     {"title": "ftpsend.TFTPSend.ParseRemote", "text": "Parse remote side information of data channel from value string (returned by PASV command). This function you need only in special cases!    ", "tags": "", "url": "ftpsend.TFTPSend.html#ParseRemote"},
     {"title": "ftpsend.TFTPSend.ParseRemoteEPSV", "text": "Parse remote side information of data channel from value string (returned by EPSV command). This function you need only in special cases!    ", "tags": "", "url": "ftpsend.TFTPSend.html#ParseRemoteEPSV"},
     {"title": "ftpsend.TFTPSend.FTPCommand", "text": "Send Value as FTP command to FTP server. Returned result code is result of this function. This command is good for sending site specific command, or non-standard commands.    ", "tags": "", "url": "ftpsend.TFTPSend.html#FTPCommand"},
     {"title": "ftpsend.TFTPSend.Login", "text": "Connect and logon to FTP server. If you specify any FireWall, connect to firewall and throw them connect to FTP server. Login sequence depending on FWMode.    ", "tags": "", "url": "ftpsend.TFTPSend.html#Login"},
     {"title": "ftpsend.TFTPSend.Logout", "text": "Logoff and disconnect from FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#Logout"},
     {"title": "ftpsend.TFTPSend.Abort", "text": "Break current transmission of data. (You can call this method from Sock.OnStatus event, or from another thread.)    ", "tags": "", "url": "ftpsend.TFTPSend.html#Abort"},
     {"title": "ftpsend.TFTPSend.TelnetAbort", "text": "Break current transmission of data. It is same as Abort, but it send abort telnet commands prior ABOR FTP command. Some servers need it. (You can call this method from Sock.OnStatus event, or from another thread.)    ", "tags": "", "url": "ftpsend.TFTPSend.html#TelnetAbort"},
     {"title": "ftpsend.TFTPSend.List", "text": "Download directory listing of Directory on FTP server. If Directory is empty string, download listing of current working directory. If NameList is True, download only names of files in directory. (internally use NLST command instead LIST command) If NameList is False, returned list is also parsed to FTPList property.    ", "tags": "", "url": "ftpsend.TFTPSend.html#List"},
     {"title": "ftpsend.TFTPSend.RetrieveFile", "text": "Read data from FileName on FTP server. If Restore is True and server supports resume dowloads, download is resumed. (received is only rest of file)    ", "tags": "", "url": "ftpsend.TFTPSend.html#RetrieveFile"},
     {"title": "ftpsend.TFTPSend.StoreFile", "text": "Send data to FileName on FTP server. If Restore is True and server supports resume upload, upload is resumed. (send only rest of file) In this case if remote file is same length as local file, nothing will be done. If remote file is larger then local, resume is disabled and file is transfered from begin!    ", "tags": "", "url": "ftpsend.TFTPSend.html#StoreFile"},
     {"title": "ftpsend.TFTPSend.StoreUniqueFile", "text": "Send data to FTP server and assing unique name for this file.    ", "tags": "", "url": "ftpsend.TFTPSend.html#StoreUniqueFile"},
     {"title": "ftpsend.TFTPSend.AppendFile", "text": "Append data to FileName on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#AppendFile"},
     {"title": "ftpsend.TFTPSend.RenameFile", "text": "Rename on FTP server file with OldName to NewName.    ", "tags": "", "url": "ftpsend.TFTPSend.html#RenameFile"},
     {"title": "ftpsend.TFTPSend.DeleteFile", "text": "Delete file FileName on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#DeleteFile"},
     {"title": "ftpsend.TFTPSend.FileSize", "text": "Return size of Filename file on FTP server. If command failed (i.e. not implemented), return -1.    ", "tags": "", "url": "ftpsend.TFTPSend.html#FileSize"},
     {"title": "ftpsend.TFTPSend.NoOp", "text": "Send NOOP command to FTP server for preserve of disconnect by inactivity timeout.    ", "tags": "", "url": "ftpsend.TFTPSend.html#NoOp"},
     {"title": "ftpsend.TFTPSend.ChangeWorkingDir", "text": "Change currect working directory to Directory on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#ChangeWorkingDir"},
     {"title": "ftpsend.TFTPSend.ChangeToParentDir", "text": "walk to upper directory on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#ChangeToParentDir"},
     {"title": "ftpsend.TFTPSend.ChangeToRootDir", "text": "walk to root directory on FTP server. (May not work with all servers properly!)    ", "tags": "", "url": "ftpsend.TFTPSend.html#ChangeToRootDir"},
     {"title": "ftpsend.TFTPSend.DeleteDir", "text": "Delete Directory on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#DeleteDir"},
     {"title": "ftpsend.TFTPSend.CreateDir", "text": "Create Directory on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#CreateDir"},
     {"title": "ftpsend.TFTPSend.GetCurrentDir", "text": "Return current working directory on FTP server.    ", "tags": "", "url": "ftpsend.TFTPSend.html#GetCurrentDir"},
     {"title": "ftpsend.TFTPSend.DataRead", "text": "Establish data channel to FTP server and retrieve data. This function you need only in special cases, i.e. when you need to implement some special unsupported FTP command!    ", "tags": "", "url": "ftpsend.TFTPSend.html#DataRead"},
     {"title": "ftpsend.TFTPSend.DataWrite", "text": "Establish data channel to FTP server and send data. This function you need only in special cases, i.e. when you need to implement some special unsupported FTP command.    ", "tags": "", "url": "ftpsend.TFTPSend.html#DataWrite"},
     {"title": "ftpsend.TFTPSend.ResultCode", "text": "After FTP command contains result number of this operation.   ", "tags": "", "url": "ftpsend.TFTPSend.html#ResultCode"},
     {"title": "ftpsend.TFTPSend.ResultString", "text": "After FTP command contains main line of result.   ", "tags": "", "url": "ftpsend.TFTPSend.html#ResultString"},
     {"title": "ftpsend.TFTPSend.FullResult", "text": "After any FTP command it contains all lines of FTP server reply.   ", "tags": "", "url": "ftpsend.TFTPSend.html#FullResult"},
     {"title": "ftpsend.TFTPSend.Account", "text": "Account information used in some cases inside login sequence.   ", "tags": "", "url": "ftpsend.TFTPSend.html#Account"},
     {"title": "ftpsend.TFTPSend.FWHost", "text": "Address of firewall. If empty string (default), firewall not used.   ", "tags": "", "url": "ftpsend.TFTPSend.html#FWHost"},
     {"title": "ftpsend.TFTPSend.FWPort", "text": "port of firewall. standard value is same port as ftp server used. (21)   ", "tags": "", "url": "ftpsend.TFTPSend.html#FWPort"},
     {"title": "ftpsend.TFTPSend.FWUsername", "text": "Username for login to firewall. (if needed)   ", "tags": "", "url": "ftpsend.TFTPSend.html#FWUsername"},
     {"title": "ftpsend.TFTPSend.FWPassword", "text": "password for login to firewall. (if needed)   ", "tags": "", "url": "ftpsend.TFTPSend.html#FWPassword"},
     {"title": "ftpsend.TFTPSend.FWMode", "text": "Type of Firewall. Used only if you set some firewall address. Supported predefined firewall login sequences are described by comments in source file where you can see pseudocode decribing each sequence.   ", "tags": "", "url": "ftpsend.TFTPSend.html#FWMode"},
     {"title": "ftpsend.TFTPSend.Sock", "text": "Socket object used for TCP/IP operation on control channel. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "ftpsend.TFTPSend.html#Sock"},
     {"title": "ftpsend.TFTPSend.DSock", "text": "Socket object used for TCP/IP operation on data channel. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "ftpsend.TFTPSend.html#DSock"},
     {"title": "ftpsend.TFTPSend.DataStream", "text": "If you not use DirectFile mode, all data transfers is made to or from this stream.   ", "tags": "", "url": "ftpsend.TFTPSend.html#DataStream"},
     {"title": "ftpsend.TFTPSend.DataIP", "text": "After data connection is established, contains remote side IP of this connection.   ", "tags": "", "url": "ftpsend.TFTPSend.html#DataIP"},
     {"title": "ftpsend.TFTPSend.DataPort", "text": "After data connection is established, contains remote side port of this connection.   ", "tags": "", "url": "ftpsend.TFTPSend.html#DataPort"},
     {"title": "ftpsend.TFTPSend.DirectFile", "text": "Mode of data handling by data connection. If False, all data operations are made to or from DataStream TMemoryStream. If True, data operations is made directly to file in your disk. (filename is specified by DirectFileName property.) Dafault is False!   ", "tags": "", "url": "ftpsend.TFTPSend.html#DirectFile"},
     {"title": "ftpsend.TFTPSend.DirectFileName", "text": "Filename for direct disk data operations.   ", "tags": "", "url": "ftpsend.TFTPSend.html#DirectFileName"},
     {"title": "ftpsend.TFTPSend.CanResume", "text": "Indicate after Login if remote server support resume downloads and uploads.   ", "tags": "", "url": "ftpsend.TFTPSend.html#CanResume"},
     {"title": "ftpsend.TFTPSend.PassiveMode", "text": "If true (default value), all transfers is made by passive method. It is safer method for various firewalls.   ", "tags": "", "url": "ftpsend.TFTPSend.html#PassiveMode"},
     {"title": "ftpsend.TFTPSend.ForceDefaultPort", "text": "Force to listen for dataconnection on standard port (20). Default is False, dataconnections will be made to any non-standard port reported by PORT FTP command. This setting is not used, if you use passive mode.   ", "tags": "", "url": "ftpsend.TFTPSend.html#ForceDefaultPort"},
     {"title": "ftpsend.TFTPSend.ForceOldPort", "text": "When is True, then is disabled EPSV and EPRT support. However without this commands you cannot use IPv6! (Disabling of this commands is needed only when you are behind some crap firewall/NAT.   ", "tags": "", "url": "ftpsend.TFTPSend.html#ForceOldPort"},
     {"title": "ftpsend.TFTPSend.OnStatus", "text": "You may set this hook for monitoring FTP commands and replies.   ", "tags": "", "url": "ftpsend.TFTPSend.html#OnStatus"},
     {"title": "ftpsend.TFTPSend.FtpList", "text": "After LIST command is here parsed list of files in given directory.   ", "tags": "", "url": "ftpsend.TFTPSend.html#FtpList"},
     {"title": "ftpsend.TFTPSend.BinaryMode", "text": "if True (default), then data transfers is in binary mode. If this is set to False, then ASCII mode is used.   ", "tags": "", "url": "ftpsend.TFTPSend.html#BinaryMode"},
     {"title": "ftpsend.TFTPSend.AutoTLS", "text": "if is true, then if server support upgrade to SSL/TLS mode, then use them.   ", "tags": "", "url": "ftpsend.TFTPSend.html#AutoTLS"},
     {"title": "ftpsend.TFTPSend.FullSSL", "text": "if server listen on SSL/TLS port, then you set this to true.   ", "tags": "", "url": "ftpsend.TFTPSend.html#FullSSL"},
     {"title": "ftpsend.TFTPSend.IsTLS", "text": "Signalise, if control channel is in SSL/TLS mode.   ", "tags": "", "url": "ftpsend.TFTPSend.html#IsTLS"},
     {"title": "ftpsend.TFTPSend.IsDataTLS", "text": "Signalise, if data transfers is in SSL/TLS mode.   ", "tags": "", "url": "ftpsend.TFTPSend.html#IsDataTLS"},
     {"title": "ftpsend.TFTPSend.TLSonData", "text": "If True (default), then try to use SSL/TLS on data transfers too. If False, then SSL/TLS is used only for control connection.   ", "tags": "", "url": "ftpsend.TFTPSend.html#TLSonData"},
     {"title": "ftpsend.TFTPSend.UseMLSDList", "text": "Enable MLSD support for directory list.   ", "tags": "", "url": "ftpsend.TFTPSend.html#UseMLSDList"},
     {"title": "ftpsend.cFtpProtocol", "text": "   ", "tags": "", "url": "ftpsend.html#cFtpProtocol"},
     {"title": "ftpsend.cFtpDataProtocol", "text": "   ", "tags": "", "url": "ftpsend.html#cFtpDataProtocol"},
     {"title": "ftpsend.FTP_OK", "text": "Terminating value for TLogonActions   ", "tags": "", "url": "ftpsend.html#FTP_OK"},
     {"title": "ftpsend.FTP_ERR", "text": "Terminating value for TLogonActions   ", "tags": "", "url": "ftpsend.html#FTP_ERR"},
     {"title": "ftpsend.FtpGetFile", "text": "A very useful function, and example of use can be found in the TFtpSend object. Dowload specified file from FTP server to LocalFile.    ", "tags": "", "url": "ftpsend.html#FtpGetFile"},
     {"title": "ftpsend.FtpPutFile", "text": "A very useful function, and example of use can be found in the TFtpSend object. Upload specified LocalFile to FTP server.    ", "tags": "", "url": "ftpsend.html#FtpPutFile"},
     {"title": "ftpsend.FtpInterServerTransfer", "text": "A very useful function, and example of use can be found in the TFtpSend object. Initiate transfer of file between two FTP servers.    ", "tags": "", "url": "ftpsend.html#FtpInterServerTransfer"},
     {"title": "ftpsend.TLogonActions", "text": "Array for holding definition of logon sequence.   ", "tags": "", "url": "ftpsend.html#TLogonActions"},
     {"title": "ftpsend.TFTPStatus", "text": "Procedural type for OnStatus event. Sender is calling TFTPSend object. Value is FTP command or reply to this comand. (if it is reply, Response is True).    ", "tags": "", "url": "ftpsend.html#TFTPStatus"},
     {"title": "ftpsend.TFTPRecList", "text": "   ", "tags": "", "url": "ftpsend.html#TFTPRecList"},
     {"title": "ftptsend", "text": "  Used RFC: RFC-1350   ", "tags": "", "url": "ftptsend.html"},
     {"title": "ftptsend.TTFTPSend", "text": " Note: Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "ftptsend.TTFTPSend.html"},
     {"title": "ftptsend.TTFTPSend.Create", "text": "    ", "tags": "", "url": "ftptsend.TTFTPSend.html#Create"},
     {"title": "ftptsend.TTFTPSend.Destroy", "text": "    ", "tags": "", "url": "ftptsend.TTFTPSend.html#Destroy"},
     {"title": "ftptsend.TTFTPSend.SendFile", "text": "Upload data as file to TFTP server.    ", "tags": "", "url": "ftptsend.TTFTPSend.html#SendFile"},
     {"title": "ftptsend.TTFTPSend.RecvFile", "text": "Download file from TFTP server to data.    ", "tags": "", "url": "ftptsend.TTFTPSend.html#RecvFile"},
     {"title": "ftptsend.TTFTPSend.WaitForRequest", "text": "Acts as TFTP server and wait for client request. When some request incoming within Timeout, result is True and parametres is filled with information from request. You must handle this request, validate it, and call ReplyError, ReplyRecv or ReplySend for send reply to TFTP Client.    ", "tags": "", "url": "ftptsend.TTFTPSend.html#WaitForRequest"},
     {"title": "ftptsend.TTFTPSend.ReplyError", "text": "send error to TFTP client, when you acts as TFTP server.    ", "tags": "", "url": "ftptsend.TTFTPSend.html#ReplyError"},
     {"title": "ftptsend.TTFTPSend.ReplyRecv", "text": "Accept uploaded file from TFTP client to data, when you acts as TFTP server.    ", "tags": "", "url": "ftptsend.TTFTPSend.html#ReplyRecv"},
     {"title": "ftptsend.TTFTPSend.ReplySend", "text": "Accept download request file from TFTP client and send content of data, when you acts as TFTP server.    ", "tags": "", "url": "ftptsend.TTFTPSend.html#ReplySend"},
     {"title": "ftptsend.TTFTPSend.ErrorCode", "text": "Code of TFTP error.   ", "tags": "", "url": "ftptsend.TTFTPSend.html#ErrorCode"},
     {"title": "ftptsend.TTFTPSend.ErrorString", "text": "Human readable decription of TFTP error. (if is sended by remote side)   ", "tags": "", "url": "ftptsend.TTFTPSend.html#ErrorString"},
     {"title": "ftptsend.TTFTPSend.Data", "text": "MemoryStream with datas for sending or receiving   ", "tags": "", "url": "ftptsend.TTFTPSend.html#Data"},
     {"title": "ftptsend.TTFTPSend.RequestIP", "text": "Address of TFTP remote side.   ", "tags": "", "url": "ftptsend.TTFTPSend.html#RequestIP"},
     {"title": "ftptsend.TTFTPSend.RequestPort", "text": "Port of TFTP remote side.   ", "tags": "", "url": "ftptsend.TTFTPSend.html#RequestPort"},
     {"title": "ftptsend.cTFTPProtocol", "text": "   ", "tags": "", "url": "ftptsend.html#cTFTPProtocol"},
     {"title": "ftptsend.cTFTP_RRQ", "text": "   ", "tags": "", "url": "ftptsend.html#cTFTP_RRQ"},
     {"title": "ftptsend.cTFTP_WRQ", "text": "   ", "tags": "", "url": "ftptsend.html#cTFTP_WRQ"},
     {"title": "ftptsend.cTFTP_DTA", "text": "   ", "tags": "", "url": "ftptsend.html#cTFTP_DTA"},
     {"title": "ftptsend.cTFTP_ACK", "text": "   ", "tags": "", "url": "ftptsend.html#cTFTP_ACK"},
     {"title": "ftptsend.cTFTP_ERR", "text": "   ", "tags": "", "url": "ftptsend.html#cTFTP_ERR"},
     {"title": "httpsend", "text": "   ", "tags": "", "url": "httpsend.html"},
     {"title": "httpsend.THTTPSend", "text": "abstract(Implementation of HTTP protocol.)   ", "tags": "", "url": "httpsend.THTTPSend.html"},
     {"title": "httpsend.THTTPSend.FSock", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FSock"},
     {"title": "httpsend.THTTPSend.FTransferEncoding", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FTransferEncoding"},
     {"title": "httpsend.THTTPSend.FAliveHost", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FAliveHost"},
     {"title": "httpsend.THTTPSend.FAlivePort", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FAlivePort"},
     {"title": "httpsend.THTTPSend.FHeaders", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FHeaders"},
     {"title": "httpsend.THTTPSend.FDocument", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FDocument"},
     {"title": "httpsend.THTTPSend.FMimeType", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FMimeType"},
     {"title": "httpsend.THTTPSend.FProtocol", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FProtocol"},
     {"title": "httpsend.THTTPSend.FKeepAlive", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FKeepAlive"},
     {"title": "httpsend.THTTPSend.FKeepAliveTimeout", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FKeepAliveTimeout"},
     {"title": "httpsend.THTTPSend.FStatus100", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FStatus100"},
     {"title": "httpsend.THTTPSend.FProxyHost", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FProxyHost"},
     {"title": "httpsend.THTTPSend.FProxyPort", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FProxyPort"},
     {"title": "httpsend.THTTPSend.FProxyUser", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FProxyUser"},
     {"title": "httpsend.THTTPSend.FProxyPass", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FProxyPass"},
     {"title": "httpsend.THTTPSend.FResultCode", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FResultCode"},
     {"title": "httpsend.THTTPSend.FResultString", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FResultString"},
     {"title": "httpsend.THTTPSend.FUserAgent", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FUserAgent"},
     {"title": "httpsend.THTTPSend.FCookies", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FCookies"},
     {"title": "httpsend.THTTPSend.FDownloadSize", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FDownloadSize"},
     {"title": "httpsend.THTTPSend.FUploadSize", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FUploadSize"},
     {"title": "httpsend.THTTPSend.FRangeStart", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FRangeStart"},
     {"title": "httpsend.THTTPSend.FRangeEnd", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FRangeEnd"},
     {"title": "httpsend.THTTPSend.FAddPortNumberToHost", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FAddPortNumberToHost"},
     {"title": "httpsend.THTTPSend.FInputStream", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FInputStream"},
     {"title": "httpsend.THTTPSend.FOutputStream", "text": "   ", "tags": "", "url": "httpsend.THTTPSend.html#FOutputStream"},
     {"title": "httpsend.THTTPSend.ReadUnknown", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#ReadUnknown"},
     {"title": "httpsend.THTTPSend.ReadIdentity", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#ReadIdentity"},
     {"title": "httpsend.THTTPSend.ReadChunked", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#ReadChunked"},
     {"title": "httpsend.THTTPSend.ParseCookies", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#ParseCookies"},
     {"title": "httpsend.THTTPSend.PrepareHeaders", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#PrepareHeaders"},
     {"title": "httpsend.THTTPSend.InternalDoConnect", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#InternalDoConnect"},
     {"title": "httpsend.THTTPSend.InternalConnect", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#InternalConnect"},
     {"title": "httpsend.THTTPSend.InputDocument", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#InputDocument"},
     {"title": "httpsend.THTTPSend.OutputDocument", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#OutputDocument"},
     {"title": "httpsend.THTTPSend.Create", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#Create"},
     {"title": "httpsend.THTTPSend.Destroy", "text": "    ", "tags": "", "url": "httpsend.THTTPSend.html#Destroy"},
     {"title": "httpsend.THTTPSend.Clear", "text": "Reset headers, document and Mimetype.    ", "tags": "", "url": "httpsend.THTTPSend.html#Clear"},
     {"title": "httpsend.THTTPSend.DecodeStatus", "text": "Decode ResultCode and ResultString from Value.    ", "tags": "", "url": "httpsend.THTTPSend.html#DecodeStatus"},
     {"title": "httpsend.THTTPSend.HTTPMethod", "text": "Connects to host defined in URL and accesses resource defined in URL by method. If Document is not empty, send it to the server as part of the HTTP request. Server response is in Document and headers. Connection may be authorised by username and password in URL. If you define proxy properties, connection is made by this proxy. If all OK, result is True, else result is False.  If you use 'https:' instead of 'http:' in the URL, your request is made by SSL/TLS connection (if you do not specify port, then port 443 is used instead of standard port 80). If you use SSL/TLS request and you have defined HTTP proxy, then HTTP-tunnel mode is automatically used .    ", "tags": "", "url": "httpsend.THTTPSend.html#HTTPMethod"},
     {"title": "httpsend.THTTPSend.Abort", "text": "You can call this method from OnStatus event to break current data transfer. (or from another thread.)    ", "tags": "", "url": "httpsend.THTTPSend.html#Abort"},
     {"title": "httpsend.THTTPSend.Headers", "text": "Before HTTP operation you may define any non-standard headers for HTTP request, except: 'Expect: 100-continue', 'Content-Length', 'Content-Type', 'Connection', 'Authorization', 'Proxy-Authorization' and 'Host' headers. After HTTP operation, it contains full headers of the returned document.   ", "tags": "", "url": "httpsend.THTTPSend.html#Headers"},
     {"title": "httpsend.THTTPSend.Cookies", "text": "Stringlist with name-value stringlist pairs. Each pair is one cookie. After the HTTP request is returned, cookies are parsed to this stringlist. You can leave these cookies untouched for next HTTP requests. You can also save this stringlist for later use.   ", "tags": "", "url": "httpsend.THTTPSend.html#Cookies"},
     {"title": "httpsend.THTTPSend.Document", "text": "Stream with document to send (before request), or with document received from HTTP server (after request).   ", "tags": "", "url": "httpsend.THTTPSend.html#Document"},
     {"title": "httpsend.THTTPSend.RangeStart", "text": "If you need to download only part of a requested document, specify here the position of subpart begin. If 0, the full document is requested.   ", "tags": "", "url": "httpsend.THTTPSend.html#RangeStart"},
     {"title": "httpsend.THTTPSend.RangeEnd", "text": "If you need to download only part of a requested document, specify here the position of subpart end. If 0, the document from rangeStart to end of document is requested. (Useful for resuming broken downloads, for example.)   ", "tags": "", "url": "httpsend.THTTPSend.html#RangeEnd"},
     {"title": "httpsend.THTTPSend.MimeType", "text": "Mime type of sending data. Default is: 'text/html'.   ", "tags": "", "url": "httpsend.THTTPSend.html#MimeType"},
     {"title": "httpsend.THTTPSend.Protocol", "text": "Define protocol version. Possible values are: '1.1', '1.0' (default) and '0.9'.   ", "tags": "", "url": "httpsend.THTTPSend.html#Protocol"},
     {"title": "httpsend.THTTPSend.KeepAlive", "text": "If True (default value), keepalives in HTTP protocol 1.1 is enabled.   ", "tags": "", "url": "httpsend.THTTPSend.html#KeepAlive"},
     {"title": "httpsend.THTTPSend.KeepAliveTimeout", "text": "Define timeout for keepalives in seconds!   ", "tags": "", "url": "httpsend.THTTPSend.html#KeepAliveTimeout"},
     {"title": "httpsend.THTTPSend.Status100", "text": "if True, then the server is requested for 100status capability when uploading data. Default is False (off).   ", "tags": "", "url": "httpsend.THTTPSend.html#Status100"},
     {"title": "httpsend.THTTPSend.ProxyHost", "text": "Address of proxy server (IP address or domain name) where you want to connect in HTTPMethod method.   ", "tags": "", "url": "httpsend.THTTPSend.html#ProxyHost"},
     {"title": "httpsend.THTTPSend.ProxyPort", "text": "Port number for proxy connection. Default value is 8080.   ", "tags": "", "url": "httpsend.THTTPSend.html#ProxyPort"},
     {"title": "httpsend.THTTPSend.ProxyUser", "text": "Username for connection to proxy server used in HTTPMethod method.   ", "tags": "", "url": "httpsend.THTTPSend.html#ProxyUser"},
     {"title": "httpsend.THTTPSend.ProxyPass", "text": "Password for connection to proxy server used in HTTPMethod method.   ", "tags": "", "url": "httpsend.THTTPSend.html#ProxyPass"},
     {"title": "httpsend.THTTPSend.UserAgent", "text": "Here you can specify custom User-Agent identification. Default: 'Mozilla/4.0 (compatible; Synapse)'   ", "tags": "", "url": "httpsend.THTTPSend.html#UserAgent"},
     {"title": "httpsend.THTTPSend.ResultCode", "text": "Operation result code after successful HTTPMethod method.   ", "tags": "", "url": "httpsend.THTTPSend.html#ResultCode"},
     {"title": "httpsend.THTTPSend.ResultString", "text": "Operation result string after successful HTTPMethod method.   ", "tags": "", "url": "httpsend.THTTPSend.html#ResultString"},
     {"title": "httpsend.THTTPSend.DownloadSize", "text": "if this value is not 0, then data download is pending. In this case you have here the total size of downloaded data. Useful for drawing download progressbar from OnStatus event.   ", "tags": "", "url": "httpsend.THTTPSend.html#DownloadSize"},
     {"title": "httpsend.THTTPSend.UploadSize", "text": "if this value is not 0, then data upload is pending. In this case you have here the total size of uploaded data. Useful for drawing upload progressbar from OnStatus event.   ", "tags": "", "url": "httpsend.THTTPSend.html#UploadSize"},
     {"title": "httpsend.THTTPSend.Sock", "text": "Socket object used for TCP/IP operation. Good for setting OnStatus hook, etc.   ", "tags": "", "url": "httpsend.THTTPSend.html#Sock"},
     {"title": "httpsend.THTTPSend.AddPortNumberToHost", "text": "Allows to switch off port number in 'Host:' HTTP header. By default True. Some buggy servers do not like port informations in this header.   ", "tags": "", "url": "httpsend.THTTPSend.html#AddPortNumberToHost"},
     {"title": "httpsend.THTTPSend.InputStream", "text": "for direct sending from any TStream. Defalut nil = use Document property instead.   ", "tags": "", "url": "httpsend.THTTPSend.html#InputStream"},
     {"title": "httpsend.THTTPSend.OutputStream", "text": "for direct dovnloading into any TStream. Defalut nil = use Document property instead.   ", "tags": "", "url": "httpsend.THTTPSend.html#OutputStream"},
     {"title": "httpsend.cHttpProtocol", "text": "   ", "tags": "", "url": "httpsend.html#cHttpProtocol"},
     {"title": "httpsend.HttpGetText", "text": "A very useful function, and example of use can be found in the THTTPSend object. It implements the GET method of the HTTP protocol. This function sends the GET method for URL document to an HTTP server. Returned document is in the &quot;Response&quot; stringlist (without any headers). Returns boolean TRUE if all went well.    ", "tags": "", "url": "httpsend.html#HttpGetText"},
     {"title": "httpsend.HttpGetBinary", "text": "A very useful function, and example of use can be found in the THTTPSend object. It implements the GET method of the HTTP protocol. This function sends the GET method for URL document to an HTTP server. Returned document is in the &quot;Response&quot; stream. Returns boolean TRUE if all went well.    ", "tags": "", "url": "httpsend.html#HttpGetBinary"},
     {"title": "httpsend.HttpPostBinary", "text": "A very useful function, and example of use can be found in the THTTPSend object. It implements the POST method of the HTTP protocol. This function sends the SEND method for a URL document to an HTTP server. The document to be sent is located in the &quot;Data&quot; stream. The returned document is in the &quot;Data&quot; stream. Returns boolean TRUE if all went well.    ", "tags": "", "url": "httpsend.html#HttpPostBinary"},
     {"title": "httpsend.HttpPostURL", "text": "A very useful function, and example of use can be found in the THTTPSend object. It implements the POST method of the HTTP protocol. This function is good for POSTing form data. It sends the POST method for a URL document to an HTTP server. You must prepare the form data in the same manner as you would the URL data, and pass this prepared data to &quot;URLdata&quot;. The following is a sample of how the data would appear: 'name=Lukas&amp;field1=some%20data'. The information in the field must be encoded by the EncodeURLElement function. The returned document is in the &quot;Data&quot; stream. Returns boolean TRUE if all went well.    ", "tags": "", "url": "httpsend.html#HttpPostURL"},
     {"title": "httpsend.HttpPostFile", "text": "A very useful function, and example of use can be found in the THTTPSend object. It implements the POST method of the HTTP protocol. This function sends the POST method for a URL document to an HTTP server. This function simulates posting of file by HTML form using the 'multipart/form-data' method. The posted file is in the DATA stream. Its name is Filename string. Fieldname is for the name of the form field with the file. (simulates HTML INPUT FILE) The returned document is in the ResultData Stringlist. Returns boolean TRUE if all went well.    ", "tags": "", "url": "httpsend.html#HttpPostFile"},
     {"title": "httpsend.TTransferEncoding", "text": "These encoding types are used internally by the THTTPSend object to identify the transfer data types.    TE_UNKNOWN    TE_IDENTITY    TE_CHUNKED   ", "tags": "", "url": "httpsend.html#TTransferEncoding"},
     {"title": "imapsend", "text": "  Used RFC: RFC-2060, RFC-2595   ", "tags": "", "url": "imapsend.html"},
     {"title": "imapsend.TIMAPSend", "text": " Note: Are you missing properties for setting Username and Password? Look to parent TSynaClient object!  Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "imapsend.TIMAPSend.html"},
     {"title": "imapsend.TIMAPSend.FSock", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FSock"},
     {"title": "imapsend.TIMAPSend.FTagCommand", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FTagCommand"},
     {"title": "imapsend.TIMAPSend.FResultString", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FResultString"},
     {"title": "imapsend.TIMAPSend.FFullResult", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FFullResult"},
     {"title": "imapsend.TIMAPSend.FIMAPcap", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FIMAPcap"},
     {"title": "imapsend.TIMAPSend.FAuthDone", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FAuthDone"},
     {"title": "imapsend.TIMAPSend.FSelectedFolder", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FSelectedFolder"},
     {"title": "imapsend.TIMAPSend.FSelectedCount", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FSelectedCount"},
     {"title": "imapsend.TIMAPSend.FSelectedRecent", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FSelectedRecent"},
     {"title": "imapsend.TIMAPSend.FSelectedUIDvalidity", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FSelectedUIDvalidity"},
     {"title": "imapsend.TIMAPSend.FUID", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FUID"},
     {"title": "imapsend.TIMAPSend.FAutoTLS", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FAutoTLS"},
     {"title": "imapsend.TIMAPSend.FFullSSL", "text": "   ", "tags": "", "url": "imapsend.TIMAPSend.html#FFullSSL"},
     {"title": "imapsend.TIMAPSend.ReadResult", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#ReadResult"},
     {"title": "imapsend.TIMAPSend.AuthLogin", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#AuthLogin"},
     {"title": "imapsend.TIMAPSend.Connect", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#Connect"},
     {"title": "imapsend.TIMAPSend.ParseMess", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#ParseMess"},
     {"title": "imapsend.TIMAPSend.ParseFolderList", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#ParseFolderList"},
     {"title": "imapsend.TIMAPSend.ParseSelect", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#ParseSelect"},
     {"title": "imapsend.TIMAPSend.ParseSearch", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#ParseSearch"},
     {"title": "imapsend.TIMAPSend.ProcessLiterals", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#ProcessLiterals"},
     {"title": "imapsend.TIMAPSend.Create", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#Create"},
     {"title": "imapsend.TIMAPSend.Destroy", "text": "    ", "tags": "", "url": "imapsend.TIMAPSend.html#Destroy"},
     {"title": "imapsend.TIMAPSend.IMAPcommand", "text": "By this function you can call any IMAP command. Result of this command is in adequate properties.    ", "tags": "", "url": "imapsend.TIMAPSend.html#IMAPcommand"},
     {"title": "imapsend.TIMAPSend.IMAPuploadCommand", "text": "By this function you can call any IMAP command what need upload any data. Result of this command is in adequate properties.    ", "tags": "", "url": "imapsend.TIMAPSend.html#IMAPuploadCommand"},
     {"title": "imapsend.TIMAPSend.Capability", "text": "Call CAPABILITY command and fill IMAPcap property by new values.    ", "tags": "", "url": "imapsend.TIMAPSend.html#Capability"},
     {"title": "imapsend.TIMAPSend.Login", "text": "Connect to IMAP server and do login to this server. This command begin session.    ", "tags": "", "url": "imapsend.TIMAPSend.html#Login"},
     {"title": "imapsend.TIMAPSend.Logout", "text": "Disconnect from IMAP server and terminate session session. If exists some deleted and non-purged messages, these messages are not deleted!    ", "tags": "", "url": "imapsend.TIMAPSend.html#Logout"},
     {"title": "imapsend.TIMAPSend.NoOp", "text": "Do NOOP. It is for prevent disconnect by timeout.    ", "tags": "", "url": "imapsend.TIMAPSend.html#NoOp"},
     {"title": "imapsend.TIMAPSend.List", "text": "Lists folder names. You may specify level of listing. If you specify FromFolder as empty string, return is all folders in system.    ", "tags": "", "url": "imapsend.TIMAPSend.html#List"},
     {"title": "imapsend.TIMAPSend.ListSearch", "text": "Lists folder names what match search criteria. You may specify level of listing. If you specify FromFolder as empty string, return is all folders in system.    ", "tags": "", "url": "imapsend.TIMAPSend.html#ListSearch"},
     {"title": "imapsend.TIMAPSend.ListSubscribed", "text": "Lists subscribed folder names. You may specify level of listing. If you specify FromFolder as empty string, return is all subscribed folders in system.    ", "tags": "", "url": "imapsend.TIMAPSend.html#ListSubscribed"},
     {"title": "imapsend.TIMAPSend.ListSearchSubscribed", "text": "Lists subscribed folder names what matching search criteria. You may specify level of listing. If you specify FromFolder as empty string, return is all subscribed folders in system.    ", "tags": "", "url": "imapsend.TIMAPSend.html#ListSearchSubscribed"},
     {"title": "imapsend.TIMAPSend.CreateFolder", "text": "Create a new folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#CreateFolder"},
     {"title": "imapsend.TIMAPSend.DeleteFolder", "text": "Delete a folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#DeleteFolder"},
     {"title": "imapsend.TIMAPSend.RenameFolder", "text": "Rename folder names.    ", "tags": "", "url": "imapsend.TIMAPSend.html#RenameFolder"},
     {"title": "imapsend.TIMAPSend.SubscribeFolder", "text": "Subscribe folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#SubscribeFolder"},
     {"title": "imapsend.TIMAPSend.UnsubscribeFolder", "text": "Unsubscribe folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#UnsubscribeFolder"},
     {"title": "imapsend.TIMAPSend.SelectFolder", "text": "Select folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#SelectFolder"},
     {"title": "imapsend.TIMAPSend.SelectROFolder", "text": "Select folder, but only for reading. Any changes are not allowed!    ", "tags": "", "url": "imapsend.TIMAPSend.html#SelectROFolder"},
     {"title": "imapsend.TIMAPSend.CloseFolder", "text": "Close a folder. (end of Selected state)    ", "tags": "", "url": "imapsend.TIMAPSend.html#CloseFolder"},
     {"title": "imapsend.TIMAPSend.StatusFolder", "text": "Ask for given status of folder. I.e. if you specify as value 'UNSEEN', result is number of unseen messages in folder. For another status indentificator check IMAP documentation and documentation of your IMAP server (each IMAP server can have their own statuses.)    ", "tags": "", "url": "imapsend.TIMAPSend.html#StatusFolder"},
     {"title": "imapsend.TIMAPSend.ExpungeFolder", "text": "Hardly delete all messages marked as 'deleted' in current selected folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#ExpungeFolder"},
     {"title": "imapsend.TIMAPSend.CheckFolder", "text": "Touch to folder. (use as update status of folder, etc.)    ", "tags": "", "url": "imapsend.TIMAPSend.html#CheckFolder"},
     {"title": "imapsend.TIMAPSend.AppendMess", "text": "Append given message to specified folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#AppendMess"},
     {"title": "imapsend.TIMAPSend.DeleteMess", "text": "'Delete' message from current selected folder. It mark message as Deleted. Real deleting will be done after sucessfull CloseFolder or ExpungeFolder    ", "tags": "", "url": "imapsend.TIMAPSend.html#DeleteMess"},
     {"title": "imapsend.TIMAPSend.FetchMess", "text": "Get full message from specified message in selected folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#FetchMess"},
     {"title": "imapsend.TIMAPSend.FetchHeader", "text": "Get message headers only from specified message in selected folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#FetchHeader"},
     {"title": "imapsend.TIMAPSend.MessageSize", "text": "Return message size of specified message from current selected folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#MessageSize"},
     {"title": "imapsend.TIMAPSend.CopyMess", "text": "Copy message from current selected folder to another folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#CopyMess"},
     {"title": "imapsend.TIMAPSend.SearchMess", "text": "Return message numbers from currently selected folder as result of searching. Search criteria is very complex language (see to IMAP specification) similar to SQL (but not same syntax!).    ", "tags": "", "url": "imapsend.TIMAPSend.html#SearchMess"},
     {"title": "imapsend.TIMAPSend.SetFlagsMess", "text": "Sets flags of message from current selected folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#SetFlagsMess"},
     {"title": "imapsend.TIMAPSend.GetFlagsMess", "text": "Gets flags of message from current selected folder.    ", "tags": "", "url": "imapsend.TIMAPSend.html#GetFlagsMess"},
     {"title": "imapsend.TIMAPSend.AddFlagsMess", "text": "Add flags to message's flags.    ", "tags": "", "url": "imapsend.TIMAPSend.html#AddFlagsMess"},
     {"title": "imapsend.TIMAPSend.DelFlagsMess", "text": "Remove flags from message's flags.    ", "tags": "", "url": "imapsend.TIMAPSend.html#DelFlagsMess"},
     {"title": "imapsend.TIMAPSend.StartTLS", "text": "Call STARTTLS command for upgrade connection to SSL/TLS mode.    ", "tags": "", "url": "imapsend.TIMAPSend.html#StartTLS"},
     {"title": "imapsend.TIMAPSend.GetUID", "text": "return UID of requested message ID.    ", "tags": "", "url": "imapsend.TIMAPSend.html#GetUID"},
     {"title": "imapsend.TIMAPSend.FindCap", "text": "Try to find given capabily in capabilty string returned from IMAP server.    ", "tags": "", "url": "imapsend.TIMAPSend.html#FindCap"},
     {"title": "imapsend.TIMAPSend.ResultString", "text": "Status line with result of last operation.   ", "tags": "", "url": "imapsend.TIMAPSend.html#ResultString"},
     {"title": "imapsend.TIMAPSend.FullResult", "text": "Full result of last IMAP operation.   ", "tags": "", "url": "imapsend.TIMAPSend.html#FullResult"},
     {"title": "imapsend.TIMAPSend.IMAPcap", "text": "List of server capabilites.   ", "tags": "", "url": "imapsend.TIMAPSend.html#IMAPcap"},
     {"title": "imapsend.TIMAPSend.AuthDone", "text": "Authorization is successful done.   ", "tags": "", "url": "imapsend.TIMAPSend.html#AuthDone"},
     {"title": "imapsend.TIMAPSend.UID", "text": "Turn on or off usage of UID (unicate identificator) of messages instead only sequence numbers.   ", "tags": "", "url": "imapsend.TIMAPSend.html#UID"},
     {"title": "imapsend.TIMAPSend.SelectedFolder", "text": "Name of currently selected folder.   ", "tags": "", "url": "imapsend.TIMAPSend.html#SelectedFolder"},
     {"title": "imapsend.TIMAPSend.SelectedCount", "text": "Count of messages in currently selected folder.   ", "tags": "", "url": "imapsend.TIMAPSend.html#SelectedCount"},
     {"title": "imapsend.TIMAPSend.SelectedRecent", "text": "Count of not-visited messages in currently selected folder.   ", "tags": "", "url": "imapsend.TIMAPSend.html#SelectedRecent"},
     {"title": "imapsend.TIMAPSend.SelectedUIDvalidity", "text": "This number with name of folder is unique indentificator of folder. (If someone delete folder and next create new folder with exactly same name of folder, this number is must be different!)   ", "tags": "", "url": "imapsend.TIMAPSend.html#SelectedUIDvalidity"},
     {"title": "imapsend.TIMAPSend.AutoTLS", "text": "If is set to true, then upgrade to SSL/TLS mode if remote server support it.   ", "tags": "", "url": "imapsend.TIMAPSend.html#AutoTLS"},
     {"title": "imapsend.TIMAPSend.FullSSL", "text": "SSL/TLS mode is used from first contact to server. Servers with full SSL/TLS mode usualy using non-standard TCP port!   ", "tags": "", "url": "imapsend.TIMAPSend.html#FullSSL"},
     {"title": "imapsend.TIMAPSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "imapsend.TIMAPSend.html#Sock"},
     {"title": "imapsend.cIMAPProtocol", "text": "   ", "tags": "", "url": "imapsend.html#cIMAPProtocol"},
     {"title": "laz_synapse", "text": "   ", "tags": "", "url": "laz_synapse.html"},
     {"title": "ldapsend", "text": "  Used RFC: RFC-2251, RFC-2254, RFC-2696, RFC-2829, RFC-2830   ", "tags": "", "url": "ldapsend.html"},
     {"title": "ldapsend.TLDAPAttribute", "text": " This class holding name of LDAP attribute and list of their values. This is descendant of TStringList class enhanced by some new properties.   ", "tags": "", "url": "ldapsend.TLDAPAttribute.html"},
     {"title": "ldapsend.TLDAPAttribute.Get", "text": "    ", "tags": "", "url": "ldapsend.TLDAPAttribute.html#Get"},
     {"title": "ldapsend.TLDAPAttribute.Put", "text": "    ", "tags": "", "url": "ldapsend.TLDAPAttribute.html#Put"},
     {"title": "ldapsend.TLDAPAttribute.SetAttributeName", "text": "    ", "tags": "", "url": "ldapsend.TLDAPAttribute.html#SetAttributeName"},
     {"title": "ldapsend.TLDAPAttribute.Add", "text": "    ", "tags": "", "url": "ldapsend.TLDAPAttribute.html#Add"},
     {"title": "ldapsend.TLDAPAttribute.AttributeName", "text": "Name of LDAP attribute.   ", "tags": "", "url": "ldapsend.TLDAPAttribute.html#AttributeName"},
     {"title": "ldapsend.TLDAPAttribute.IsBinary", "text": "Return True when attribute contains binary data.   ", "tags": "", "url": "ldapsend.TLDAPAttribute.html#IsBinary"},
     {"title": "ldapsend.TLDAPAttributeList", "text": " This object can hold list of TLDAPAttribute objects.   ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html"},
     {"title": "ldapsend.TLDAPAttributeList.Create", "text": "    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Create"},
     {"title": "ldapsend.TLDAPAttributeList.Destroy", "text": "    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Destroy"},
     {"title": "ldapsend.TLDAPAttributeList.Clear", "text": "Clear list.    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Clear"},
     {"title": "ldapsend.TLDAPAttributeList.Count", "text": "Return count of TLDAPAttribute objects in list.    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Count"},
     {"title": "ldapsend.TLDAPAttributeList.Add", "text": "Add new TLDAPAttribute object to list.    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Add"},
     {"title": "ldapsend.TLDAPAttributeList.Del", "text": "Delete one TLDAPAttribute object from list.    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Del"},
     {"title": "ldapsend.TLDAPAttributeList.Find", "text": "Find and return attribute with requested name. Returns nil if not found.    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Find"},
     {"title": "ldapsend.TLDAPAttributeList.Get", "text": "Find and return attribute value with requested name. Returns empty string if not found.    ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Get"},
     {"title": "ldapsend.TLDAPAttributeList.Items", "text": "List of TLDAPAttribute objects.   ", "tags": "", "url": "ldapsend.TLDAPAttributeList.html#Items"},
     {"title": "ldapsend.TLDAPResult", "text": " This object can hold LDAP object. (their name and all their attributes with values)   ", "tags": "", "url": "ldapsend.TLDAPResult.html"},
     {"title": "ldapsend.TLDAPResult.Create", "text": "    ", "tags": "", "url": "ldapsend.TLDAPResult.html#Create"},
     {"title": "ldapsend.TLDAPResult.Destroy", "text": "    ", "tags": "", "url": "ldapsend.TLDAPResult.html#Destroy"},
     {"title": "ldapsend.TLDAPResult.ObjectName", "text": "Name of this LDAP object.   ", "tags": "", "url": "ldapsend.TLDAPResult.html#ObjectName"},
     {"title": "ldapsend.TLDAPResult.Attributes", "text": "Here is list of object attributes.   ", "tags": "", "url": "ldapsend.TLDAPResult.html#Attributes"},
     {"title": "ldapsend.TLDAPResultList", "text": " This object can hold list of LDAP objects. (for example result of LDAP SEARCH.)   ", "tags": "", "url": "ldapsend.TLDAPResultList.html"},
     {"title": "ldapsend.TLDAPResultList.Create", "text": "    ", "tags": "", "url": "ldapsend.TLDAPResultList.html#Create"},
     {"title": "ldapsend.TLDAPResultList.Destroy", "text": "    ", "tags": "", "url": "ldapsend.TLDAPResultList.html#Destroy"},
     {"title": "ldapsend.TLDAPResultList.Clear", "text": "Clear all TLDAPResult objects in list.    ", "tags": "", "url": "ldapsend.TLDAPResultList.html#Clear"},
     {"title": "ldapsend.TLDAPResultList.Count", "text": "Return count of TLDAPResult objects in list.    ", "tags": "", "url": "ldapsend.TLDAPResultList.html#Count"},
     {"title": "ldapsend.TLDAPResultList.Add", "text": "Create and add new TLDAPResult object to list.    ", "tags": "", "url": "ldapsend.TLDAPResultList.html#Add"},
     {"title": "ldapsend.TLDAPResultList.Items", "text": "List of TLDAPResult objects.   ", "tags": "", "url": "ldapsend.TLDAPResultList.html#Items"},
     {"title": "ldapsend.TLDAPSend", "text": " (version 2 and 3)  Note: Are you missing properties for setting Username and Password? Look to parent TSynaClient object!  Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "ldapsend.TLDAPSend.html"},
     {"title": "ldapsend.TLDAPSend.Create", "text": "    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Create"},
     {"title": "ldapsend.TLDAPSend.Destroy", "text": "    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Destroy"},
     {"title": "ldapsend.TLDAPSend.Login", "text": "Try to connect to LDAP server and start secure channel, when it is required.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Login"},
     {"title": "ldapsend.TLDAPSend.Bind", "text": "Try to bind to LDAP server with TSynaClient.Username and TSynaClient.Password. If this is empty strings, then it do annonymous Bind. When you not call Bind on LDAPv3, then is automaticly used anonymous mode.  This method using plaintext transport of password! It is not secure!    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Bind"},
     {"title": "ldapsend.TLDAPSend.BindSasl", "text": "Try to bind to LDAP server with TSynaClient.Username and TSynaClient.Password. If this is empty strings, then it do annonymous Bind. When you not call Bind on LDAPv3, then is automaticly used anonymous mode.  This method using SASL with DIGEST-MD5 method for secure transfer of your password.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#BindSasl"},
     {"title": "ldapsend.TLDAPSend.Logout", "text": "Close connection to LDAP server.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Logout"},
     {"title": "ldapsend.TLDAPSend.Modify", "text": "Modify content of LDAP attribute on this object.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Modify"},
     {"title": "ldapsend.TLDAPSend.Add", "text": "Add list of attributes to specified object.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Add"},
     {"title": "ldapsend.TLDAPSend.Delete", "text": "Delete this LDAP object from server.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Delete"},
     {"title": "ldapsend.TLDAPSend.ModifyDN", "text": "Modify object name of this LDAP object.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#ModifyDN"},
     {"title": "ldapsend.TLDAPSend.Compare", "text": "Try to compare Attribute value with this LDAP object.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Compare"},
     {"title": "ldapsend.TLDAPSend.Search", "text": "Search LDAP base for LDAP objects by Filter.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Search"},
     {"title": "ldapsend.TLDAPSend.Extended", "text": "Call any LDAPv3 extended command.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#Extended"},
     {"title": "ldapsend.TLDAPSend.StartTLS", "text": "Try to start SSL/TLS connection to LDAP server.    ", "tags": "", "url": "ldapsend.TLDAPSend.html#StartTLS"},
     {"title": "ldapsend.TLDAPSend.Version", "text": "Specify version of used LDAP protocol. Default value is 3.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#Version"},
     {"title": "ldapsend.TLDAPSend.ResultCode", "text": "Result code of last LDAP operation.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#ResultCode"},
     {"title": "ldapsend.TLDAPSend.ResultString", "text": "Human readable description of result code of last LDAP operation.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#ResultString"},
     {"title": "ldapsend.TLDAPSend.FullResult", "text": "Binary string with full last response of LDAP server. This string is encoded by ASN.1 BER encoding! You need this only for debugging.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#FullResult"},
     {"title": "ldapsend.TLDAPSend.AutoTLS", "text": "If True, then try to start TSL mode in Login procedure.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#AutoTLS"},
     {"title": "ldapsend.TLDAPSend.FullSSL", "text": "If True, then use connection to LDAP server through SSL/TLS tunnel.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#FullSSL"},
     {"title": "ldapsend.TLDAPSend.Seq", "text": "Sequence number of last LDAp command. It is incremented by any LDAP command.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#Seq"},
     {"title": "ldapsend.TLDAPSend.SearchScope", "text": "Specify what search scope is used in search command.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchScope"},
     {"title": "ldapsend.TLDAPSend.SearchAliases", "text": "Specify how to handle aliases in search command.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchAliases"},
     {"title": "ldapsend.TLDAPSend.SearchSizeLimit", "text": "Specify result size limit in search command. Value 0 means without limit.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchSizeLimit"},
     {"title": "ldapsend.TLDAPSend.SearchTimeLimit", "text": "Specify search time limit in search command (seconds). Value 0 means without limit.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchTimeLimit"},
     {"title": "ldapsend.TLDAPSend.SearchPageSize", "text": "Specify number of results to return per search request. Value 0 means no paging.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchPageSize"},
     {"title": "ldapsend.TLDAPSend.SearchCookie", "text": "Cookie returned by paged search results. Use an empty string for the first search request.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchCookie"},
     {"title": "ldapsend.TLDAPSend.SearchResult", "text": "Here is result of search command.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#SearchResult"},
     {"title": "ldapsend.TLDAPSend.Referals", "text": "On each LDAP operation can LDAP server return some referals URLs. Here is their list.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#Referals"},
     {"title": "ldapsend.TLDAPSend.ExtName", "text": "When you call Extended operation, then here is result Name returned by server.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#ExtName"},
     {"title": "ldapsend.TLDAPSend.ExtValue", "text": "When you call Extended operation, then here is result Value returned by server.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#ExtValue"},
     {"title": "ldapsend.TLDAPSend.Sock", "text": "TCP socket used by all LDAP operations.   ", "tags": "", "url": "ldapsend.TLDAPSend.html#Sock"},
     {"title": "ldapsend.cLDAPProtocol", "text": "   ", "tags": "", "url": "ldapsend.html#cLDAPProtocol"},
     {"title": "ldapsend.LDAP_ASN1_BIND_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_BIND_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_BIND_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_BIND_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_UNBIND_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_UNBIND_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_SEARCH_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_SEARCH_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_SEARCH_ENTRY", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_SEARCH_ENTRY"},
     {"title": "ldapsend.LDAP_ASN1_SEARCH_DONE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_SEARCH_DONE"},
     {"title": "ldapsend.LDAP_ASN1_SEARCH_REFERENCE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_SEARCH_REFERENCE"},
     {"title": "ldapsend.LDAP_ASN1_MODIFY_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_MODIFY_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_MODIFY_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_MODIFY_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_ADD_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_ADD_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_ADD_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_ADD_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_DEL_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_DEL_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_DEL_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_DEL_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_MODIFYDN_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_MODIFYDN_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_MODIFYDN_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_MODIFYDN_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_COMPARE_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_COMPARE_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_COMPARE_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_COMPARE_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_ABANDON_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_ABANDON_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_EXT_REQUEST", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_EXT_REQUEST"},
     {"title": "ldapsend.LDAP_ASN1_EXT_RESPONSE", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_EXT_RESPONSE"},
     {"title": "ldapsend.LDAP_ASN1_CONTROLS", "text": "   ", "tags": "", "url": "ldapsend.html#LDAP_ASN1_CONTROLS"},
     {"title": "ldapsend.LDAPResultDump", "text": "Dump result of LDAP SEARCH into human readable form. Good for debugging.    ", "tags": "", "url": "ldapsend.html#LDAPResultDump"},
     {"title": "ldapsend.TLDAPModifyOp", "text": "Define possible operations for LDAP MODIFY operations.    MO_Add    MO_Delete    MO_Replace   ", "tags": "", "url": "ldapsend.html#TLDAPModifyOp"},
     {"title": "ldapsend.TLDAPSearchScope", "text": "Specify possible values for search scope.    SS_BaseObject    SS_SingleLevel    SS_WholeSubtree   ", "tags": "", "url": "ldapsend.html#TLDAPSearchScope"},
     {"title": "ldapsend.TLDAPSearchAliases", "text": "Specify possible values about alias dereferencing.    SA_NeverDeref    SA_InSearching    SA_FindingBaseObj    SA_Always   ", "tags": "", "url": "ldapsend.html#TLDAPSearchAliases"},
     {"title": "mimeinln", "text": " Support for Inline MIME encoding and decoding.  Used RFC: RFC-2047, RFC-2231   ", "tags": "", "url": "mimeinln.html"},
     {"title": "mimeinln.InlineDecode", "text": "Decodes mime inline encoding (i.e. in headers) uses target characterset &quot;CP&quot;.    ", "tags": "", "url": "mimeinln.html#InlineDecode"},
     {"title": "mimeinln.InlineEncode", "text": "Encodes string to MIME inline encoding. The source characterset is &quot;CP&quot;, and the target charset is &quot;MimeP&quot;.    ", "tags": "", "url": "mimeinln.html#InlineEncode"},
     {"title": "mimeinln.NeedInline", "text": "Returns True, if &quot;Value&quot; contains characters needed for inline coding.    ", "tags": "", "url": "mimeinln.html#NeedInline"},
     {"title": "mimeinln.InlineCodeEx", "text": "Inline mime encoding similar to InlineEncode, but you can specify source charset, and the target characterset is automatically assigned.    ", "tags": "", "url": "mimeinln.html#InlineCodeEx"},
     {"title": "mimeinln.InlineCode", "text": "Inline MIME encoding similar to InlineEncode, but the source charset is automatically set to the system default charset, and the target charset is automatically assigned from set of allowed encoding for MIME.    ", "tags": "", "url": "mimeinln.html#InlineCode"},
     {"title": "mimeinln.InlineEmailEx", "text": "Converts e-mail address to canonical mime form. You can specify source charset.    ", "tags": "", "url": "mimeinln.html#InlineEmailEx"},
     {"title": "mimeinln.InlineEmail", "text": "Converts e-mail address to canonical mime form. Source charser it system default charset.    ", "tags": "", "url": "mimeinln.html#InlineEmail"},
     {"title": "mimemess", "text": " Classes for easy handling with e-mail message.   ", "tags": "", "url": "mimemess.html"},
     {"title": "mimemess.TMessHeader", "text": "   ", "tags": "", "url": "mimemess.TMessHeader.html"},
     {"title": "mimemess.TMessHeader.ParsePriority", "text": "    ", "tags": "", "url": "mimemess.TMessHeader.html#ParsePriority"},
     {"title": "mimemess.TMessHeader.DecodeHeader", "text": "    ", "tags": "", "url": "mimemess.TMessHeader.html#DecodeHeader"},
     {"title": "mimemess.TMessHeader.Create", "text": "    ", "tags": "", "url": "mimemess.TMessHeader.html#Create"},
     {"title": "mimemess.TMessHeader.Destroy", "text": "    ", "tags": "", "url": "mimemess.TMessHeader.html#Destroy"},
     {"title": "mimemess.TMessHeader.Clear", "text": "Clears all data fields.    ", "tags": "", "url": "mimemess.TMessHeader.html#Clear"},
     {"title": "mimemess.TMessHeader.EncodeHeaders", "text": "    ", "tags": "", "url": "mimemess.TMessHeader.html#EncodeHeaders"},
     {"title": "mimemess.TMessHeader.DecodeHeaders", "text": "Parse header from Value to this object.    ", "tags": "", "url": "mimemess.TMessHeader.html#DecodeHeaders"},
     {"title": "mimemess.TMessHeader.FindHeader", "text": "Try find specific header in CustomHeader. Search is case insensitive. This is good for reading any non-parsed header.    ", "tags": "", "url": "mimemess.TMessHeader.html#FindHeader"},
     {"title": "mimemess.TMessHeader.FindHeaderList", "text": "Try find specific headers in CustomHeader. This metod is for repeatly used headers like 'received' header, etc. Search is case insensitive. This is good for reading ano non-parsed header.    ", "tags": "", "url": "mimemess.TMessHeader.html#FindHeaderList"},
     {"title": "mimemess.TMessHeader.From", "text": "Sender of message.   ", "tags": "", "url": "mimemess.TMessHeader.html#From"},
     {"title": "mimemess.TMessHeader.ToList", "text": "Stringlist with receivers of message. (one per line)   ", "tags": "", "url": "mimemess.TMessHeader.html#ToList"},
     {"title": "mimemess.TMessHeader.CCList", "text": "Stringlist with Carbon Copy receivers of message. (one per line)   ", "tags": "", "url": "mimemess.TMessHeader.html#CCList"},
     {"title": "mimemess.TMessHeader.Subject", "text": "Subject of message.   ", "tags": "", "url": "mimemess.TMessHeader.html#Subject"},
     {"title": "mimemess.TMessHeader.Organization", "text": "Organization string.   ", "tags": "", "url": "mimemess.TMessHeader.html#Organization"},
     {"title": "mimemess.TMessHeader.CustomHeaders", "text": "After decoding contains all headers lines witch not have parsed to any other structures in this object. It mean: this conatins all other headers except:  X-MAILER, FROM, SUBJECT, ORGANIZATION, TO, CC, DATE, MIME-VERSION, CONTENT-TYPE, CONTENT-DESCRIPTION, CONTENT-DISPOSITION, CONTENT-ID, CONTENT-TRANSFER-ENCODING, REPLY-TO, MESSAGE-ID, X-MSMAIL-PRIORITY, X-PRIORITY, PRIORITY  When you encode headers, all this lines is added as headers. Be carefull for duplicites!   ", "tags": "", "url": "mimemess.TMessHeader.html#CustomHeaders"},
     {"title": "mimemess.TMessHeader.Date", "text": "Date and time of message.   ", "tags": "", "url": "mimemess.TMessHeader.html#Date"},
     {"title": "mimemess.TMessHeader.XMailer", "text": "Mailer identification.   ", "tags": "", "url": "mimemess.TMessHeader.html#XMailer"},
     {"title": "mimemess.TMessHeader.ReplyTo", "text": "Address for replies   ", "tags": "", "url": "mimemess.TMessHeader.html#ReplyTo"},
     {"title": "mimemess.TMessHeader.MessageID", "text": "message indetifier   ", "tags": "", "url": "mimemess.TMessHeader.html#MessageID"},
     {"title": "mimemess.TMessHeader.Priority", "text": "message priority   ", "tags": "", "url": "mimemess.TMessHeader.html#Priority"},
     {"title": "mimemess.TMessHeader.CharsetCode", "text": "Specify base charset. By default is used system charset.   ", "tags": "", "url": "mimemess.TMessHeader.html#CharsetCode"},
     {"title": "mimemess.TMimeMess", "text": "   ", "tags": "", "url": "mimemess.TMimeMess.html"},
     {"title": "mimemess.TMimeMess.Create", "text": "    ", "tags": "", "url": "mimemess.TMimeMess.html#Create"},
     {"title": "mimemess.TMimeMess.CreateAltHeaders", "text": "create this object and assign your own descendant of TMessHeader object to header property. So, you can create your own message headers parser and use it by this object.    ", "tags": "", "url": "mimemess.TMimeMess.html#CreateAltHeaders"},
     {"title": "mimemess.TMimeMess.Destroy", "text": "    ", "tags": "", "url": "mimemess.TMimeMess.html#Destroy"},
     {"title": "mimemess.TMimeMess.Clear", "text": "Reset component to default state.    ", "tags": "", "url": "mimemess.TMimeMess.html#Clear"},
     {"title": "mimemess.TMimeMess.AddPart", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then one subpart, you must have PartParent of multipart type!    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPart"},
     {"title": "mimemess.TMimeMess.AddPartMultipart", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  This part is marked as multipart with secondary MIME type specified by MultipartType parameter. (typical value is 'mixed')  This part can be used as PartParent for another parts (include next multipart). If you need only one part, then you not need Multipart part.    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartMultipart"},
     {"title": "mimemess.TMimeMess.AddPartText", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  After creation of part set type to text part and set all necessary properties. Content of part is readed from value stringlist.    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartText"},
     {"title": "mimemess.TMimeMess.AddPartTextEx", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  After creation of part set type to text part and set all necessary properties. Content of part is readed from value stringlist. You can select your charset and your encoding type. If Raw is True, then it not doing charset conversion!    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartTextEx"},
     {"title": "mimemess.TMimeMess.AddPartHTML", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  After creation of part set type to text part to HTML type and set all necessary properties. Content of HTML part is readed from Value stringlist.    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartHTML"},
     {"title": "mimemess.TMimeMess.AddPartTextFromFile", "text": "Same as AddPartText, but content is readed from file    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartTextFromFile"},
     {"title": "mimemess.TMimeMess.AddPartHTMLFromFile", "text": "Same as AddPartHTML, but content is readed from file    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartHTMLFromFile"},
     {"title": "mimemess.TMimeMess.AddPartBinary", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  After creation of part set type to binary and set all necessary properties. MIME primary and secondary types defined automaticly by filename extension. Content of binary part is readed from Stream. This binary part is encoded as file attachment.    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartBinary"},
     {"title": "mimemess.TMimeMess.AddPartBinaryFromFile", "text": "Same as AddPartBinary, but content is readed from file    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartBinaryFromFile"},
     {"title": "mimemess.TMimeMess.AddPartHTMLBinary", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  After creation of part set type to binary and set all necessary properties. MIME primary and secondary types defined automaticly by filename extension. Content of binary part is readed from Stream.  This binary part is encoded as inline data with given Conten ID (cid). Content ID can be used as reference ID in HTML source in HTML part.    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartHTMLBinary"},
     {"title": "mimemess.TMimeMess.AddPartHTMLBinaryFromFile", "text": "Same as AddPartHTMLBinary, but content is readed from file    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartHTMLBinaryFromFile"},
     {"title": "mimemess.TMimeMess.AddPartMess", "text": "Add MIME part as subpart of PartParent. If you need set root MIME part, then set as PartParent Nil value. If you need set more then 1 subpart, you must have PartParent of multipart type!  After creation of part set type to message and set all necessary properties. MIME primary and secondary types are setted to 'message/rfc822'. Content of raw RFC-822 message is readed from Stream.    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartMess"},
     {"title": "mimemess.TMimeMess.AddPartMessFromFile", "text": "Same as AddPartMess, but content is readed from file    ", "tags": "", "url": "mimemess.TMimeMess.html#AddPartMessFromFile"},
     {"title": "mimemess.TMimeMess.EncodeMessage", "text": "Compose message from MessagePart to Lines. Headers from Header object is added also.    ", "tags": "", "url": "mimemess.TMimeMess.html#EncodeMessage"},
     {"title": "mimemess.TMimeMess.DecodeMessage", "text": "Decode message from Lines to MessagePart. Massage headers are parsed into Header object.    ", "tags": "", "url": "mimemess.TMimeMess.html#DecodeMessage"},
     {"title": "mimemess.TMimeMess.DecodeMessageBinary", "text": "HTTP message is received by THTTPSend component in two parts: headers are stored in THTTPSend.Headers and a body in memory stream THTTPSend.Document.  On the top of it, HTTP connections are always 8-bit, hence data are transferred in native format i.e. no transfer encoding is applied.  This method operates the similiar way and produces the same result as DecodeMessage.    ", "tags": "", "url": "mimemess.TMimeMess.html#DecodeMessageBinary"},
     {"title": "mimemess.TMimeMess.MessagePart", "text": "TMimePart object with decoded MIME message. This object can handle any number of nested TMimePart objects itself. It is used for handle any tree of MIME subparts.   ", "tags": "", "url": "mimemess.TMimeMess.html#MessagePart"},
     {"title": "mimemess.TMimeMess.Lines", "text": "Raw MIME encoded message.   ", "tags": "", "url": "mimemess.TMimeMess.html#Lines"},
     {"title": "mimemess.TMimeMess.Header", "text": "Object for e-mail header fields. This object is created automaticly. Do not free this object!   ", "tags": "", "url": "mimemess.TMimeMess.html#Header"},
     {"title": "mimemess.TMessPriority", "text": "Possible values for message priority    MP_unknown    MP_low    MP_normal    MP_high   ", "tags": "", "url": "mimemess.html#TMessPriority"},
     {"title": "mimemess.TMessHeaderClass", "text": "   ", "tags": "", "url": "mimemess.html#TMessHeaderClass"},
     {"title": "mimepart", "text": " Handling with MIME parts.  Used RFC: RFC-2045   ", "tags": "", "url": "mimepart.html"},
     {"title": "mimepart.TMimePart", "text": " Each TMimePart object can handle any number of nested subparts as new TMimepart objects. It can handle any tree hierarchy structure of nested MIME subparts itself.  Basic tasks are:  Decoding of MIME message:      store message into Lines property   call DecomposeParts. Now you have decomposed MIME parts in all nested levels!   now you can explore all properties and subparts. (You can use WalkPart method)   if you need decode part, call DecodePart.    Encoding of MIME message:       if you need multipart message, you must create subpart by AddSubPart.   set all properties of all parts.   set content of part into DecodedLines stream   encode this stream by EncodePart.   compose full message by ComposeParts. (it build full MIME message from all subparts. Do not call this method for each subpart! It is needed on root part!)   encoded MIME message is stored in Lines property.      ", "tags": "", "url": "mimepart.TMimePart.html"},
     {"title": "mimepart.TMimePart.Create", "text": "    ", "tags": "", "url": "mimepart.TMimePart.html#Create"},
     {"title": "mimepart.TMimePart.Destroy", "text": "    ", "tags": "", "url": "mimepart.TMimePart.html#Destroy"},
     {"title": "mimepart.TMimePart.Assign", "text": "Assign content of another object to this object. (Only this part, not subparts!)    ", "tags": "", "url": "mimepart.TMimePart.html#Assign"},
     {"title": "mimepart.TMimePart.AssignSubParts", "text": "Assign content of another object to this object. (With all subparts!)    ", "tags": "", "url": "mimepart.TMimePart.html#AssignSubParts"},
     {"title": "mimepart.TMimePart.Clear", "text": "Clear all data values to default values. It also call ClearSubparts.    ", "tags": "", "url": "mimepart.TMimePart.html#Clear"},
     {"title": "mimepart.TMimePart.DecodePart", "text": "Decode Mime part from Lines to DecodedLines.    ", "tags": "", "url": "mimepart.TMimePart.html#DecodePart"},
     {"title": "mimepart.TMimePart.DecodePartHeader", "text": "Parse header lines from Headers property into another properties.    ", "tags": "", "url": "mimepart.TMimePart.html#DecodePartHeader"},
     {"title": "mimepart.TMimePart.EncodePart", "text": "Encode mime part from DecodedLines to Lines and build mime headers.    ", "tags": "", "url": "mimepart.TMimePart.html#EncodePart"},
     {"title": "mimepart.TMimePart.EncodePartHeader", "text": "Build header lines in Headers property from another properties.    ", "tags": "", "url": "mimepart.TMimePart.html#EncodePartHeader"},
     {"title": "mimepart.TMimePart.MimeTypeFromExt", "text": "generate primary and secondary mime type from filename extension in value. If type not recognised, it return 'Application/octet-string' type.    ", "tags": "", "url": "mimepart.TMimePart.html#MimeTypeFromExt"},
     {"title": "mimepart.TMimePart.GetSubPartCount", "text": "Return number of decomposed subparts. (On this level! Each of this subparts can hold any number of their own nested subparts!)    ", "tags": "", "url": "mimepart.TMimePart.html#GetSubPartCount"},
     {"title": "mimepart.TMimePart.GetSubPart", "text": "Get nested subpart object as new TMimePart. For getting maximum possible index you can use GetSubPartCount method.    ", "tags": "", "url": "mimepart.TMimePart.html#GetSubPart"},
     {"title": "mimepart.TMimePart.DeleteSubPart", "text": "delete subpart on given index.    ", "tags": "", "url": "mimepart.TMimePart.html#DeleteSubPart"},
     {"title": "mimepart.TMimePart.ClearSubParts", "text": "Clear and destroy all subpart TMimePart objects.    ", "tags": "", "url": "mimepart.TMimePart.html#ClearSubParts"},
     {"title": "mimepart.TMimePart.AddSubPart", "text": "Add and create new subpart.    ", "tags": "", "url": "mimepart.TMimePart.html#AddSubPart"},
     {"title": "mimepart.TMimePart.DecomposeParts", "text": "E-mail message in Lines property is parsed into this object. E-mail headers are stored in Headers property and is parsed into another properties automaticly. Not need call DecodePartHeader! Content of message (part) is stored into PartBody property. This part is in undecoded form! If you need decode it, then you must call DecodePart method by your hands. Lot of another properties is filled also.  Decoding of parts you must call separately due performance reasons. (Not needed to decode all parts in all reasons.)  For each MIME subpart is created new TMimepart object (accessible via method GetSubPart).    ", "tags": "", "url": "mimepart.TMimePart.html#DecomposeParts"},
     {"title": "mimepart.TMimePart.DecomposePartsBinary", "text": "HTTP message is received by THTTPSend component in two parts: headers are stored in THTTPSend.Headers and a body in memory stream THTTPSend.Document.  On the top of it, HTTP connections are always 8-bit, hence data are transferred in native format i.e. no transfer encoding is applied.  This method operates the similiar way and produces the same result as DecomposeParts.    ", "tags": "", "url": "mimepart.TMimePart.html#DecomposePartsBinary"},
     {"title": "mimepart.TMimePart.ComposeParts", "text": "This part and all subparts is composed into one MIME message stored in Lines property.    ", "tags": "", "url": "mimepart.TMimePart.html#ComposeParts"},
     {"title": "mimepart.TMimePart.WalkPart", "text": "By calling this method is called OnWalkPart event for each part and their subparts. It is very good for calling some code for each part in MIME message    ", "tags": "", "url": "mimepart.TMimePart.html#WalkPart"},
     {"title": "mimepart.TMimePart.CanSubPart", "text": "Return True when is possible create next subpart. (maxSublevel is still not reached)    ", "tags": "", "url": "mimepart.TMimePart.html#CanSubPart"},
     {"title": "mimepart.TMimePart.Primary", "text": "Primary Mime type of part. (i.e. 'application') Writing to this property automaticly generate value of PrimaryCode.   ", "tags": "", "url": "mimepart.TMimePart.html#Primary"},
     {"title": "mimepart.TMimePart.Encoding", "text": "String representation of used Mime encoding in part. (i.e. 'base64') Writing to this property automaticly generate value of EncodingCode.   ", "tags": "", "url": "mimepart.TMimePart.html#Encoding"},
     {"title": "mimepart.TMimePart.Charset", "text": "String representation of used Mime charset in part. (i.e. 'iso-8859-1') Writing to this property automaticly generate value of CharsetCode. Charset is used only for text parts.   ", "tags": "", "url": "mimepart.TMimePart.html#Charset"},
     {"title": "mimepart.TMimePart.DefaultCharset", "text": "Define default charset for decoding text MIME parts without charset specification. Default value is 'ISO-8859-1' by RCF documents. But Microsoft Outlook use windows codings as default. This property allows properly decode textual parts from some broken versions of Microsoft Outlook. (this is bad software!)   ", "tags": "", "url": "mimepart.TMimePart.html#DefaultCharset"},
     {"title": "mimepart.TMimePart.PrimaryCode", "text": "Decoded primary type. Possible values are: MP_TEXT, MP_MULTIPART, MP_MESSAGE and MP_BINARY. If type not recognised, result is MP_BINARY.   ", "tags": "", "url": "mimepart.TMimePart.html#PrimaryCode"},
     {"title": "mimepart.TMimePart.EncodingCode", "text": "Decoded encoding type. Possible values are: ME_7BIT, ME_8BIT, ME_QUOTED_PRINTABLE and ME_BASE64. If type not recognised, result is ME_7BIT.   ", "tags": "", "url": "mimepart.TMimePart.html#EncodingCode"},
     {"title": "mimepart.TMimePart.CharsetCode", "text": "Decoded charset type. Possible values are defined in SynaChar unit.   ", "tags": "", "url": "mimepart.TMimePart.html#CharsetCode"},
     {"title": "mimepart.TMimePart.TargetCharset", "text": "System charset type. Default value is charset used by default in your operating system.   ", "tags": "", "url": "mimepart.TMimePart.html#TargetCharset"},
     {"title": "mimepart.TMimePart.ConvertCharset", "text": "If True, then do internal charset translation of part content between CharsetCode and TargetCharset   ", "tags": "", "url": "mimepart.TMimePart.html#ConvertCharset"},
     {"title": "mimepart.TMimePart.ForcedHTMLConvert", "text": "If True, then allways do internal charset translation of HTML parts by MIME even it have their own charset in META tag. Default is False.   ", "tags": "", "url": "mimepart.TMimePart.html#ForcedHTMLConvert"},
     {"title": "mimepart.TMimePart.Secondary", "text": "Secondary Mime type of part. (i.e. 'mixed')   ", "tags": "", "url": "mimepart.TMimePart.html#Secondary"},
     {"title": "mimepart.TMimePart.Description", "text": "Description of Mime part.   ", "tags": "", "url": "mimepart.TMimePart.html#Description"},
     {"title": "mimepart.TMimePart.Disposition", "text": "Value of content disposition field. (i.e. 'inline' or 'attachment')   ", "tags": "", "url": "mimepart.TMimePart.html#Disposition"},
     {"title": "mimepart.TMimePart.ContentID", "text": "Content ID.   ", "tags": "", "url": "mimepart.TMimePart.html#ContentID"},
     {"title": "mimepart.TMimePart.Boundary", "text": "Boundary delimiter of multipart Mime part. Used only in multipart part.   ", "tags": "", "url": "mimepart.TMimePart.html#Boundary"},
     {"title": "mimepart.TMimePart.FileName", "text": "Filename of file in binary part.   ", "tags": "", "url": "mimepart.TMimePart.html#FileName"},
     {"title": "mimepart.TMimePart.Lines", "text": "String list with lines contains mime part (It can be a full message).   ", "tags": "", "url": "mimepart.TMimePart.html#Lines"},
     {"title": "mimepart.TMimePart.PartBody", "text": "Encoded form of MIME part data.   ", "tags": "", "url": "mimepart.TMimePart.html#PartBody"},
     {"title": "mimepart.TMimePart.Headers", "text": "All header lines of MIME part.   ", "tags": "", "url": "mimepart.TMimePart.html#Headers"},
     {"title": "mimepart.TMimePart.PrePart", "text": "On multipart this contains part of message between first line of message and first boundary.   ", "tags": "", "url": "mimepart.TMimePart.html#PrePart"},
     {"title": "mimepart.TMimePart.PostPart", "text": "On multipart this contains part of message between last boundary and end of message.   ", "tags": "", "url": "mimepart.TMimePart.html#PostPart"},
     {"title": "mimepart.TMimePart.DecodedLines", "text": "Stream with decoded form of budy part.   ", "tags": "", "url": "mimepart.TMimePart.html#DecodedLines"},
     {"title": "mimepart.TMimePart.SubLevel", "text": "Show nested level in subpart tree. Value 0 means root part. 1 means subpart from this root. etc.   ", "tags": "", "url": "mimepart.TMimePart.html#SubLevel"},
     {"title": "mimepart.TMimePart.MaxSubLevel", "text": "Specify maximum sublevel value for decomposing.   ", "tags": "", "url": "mimepart.TMimePart.html#MaxSubLevel"},
     {"title": "mimepart.TMimePart.AttachInside", "text": "When is True, then this part maybe(!) have included some uuencoded binary data.   ", "tags": "", "url": "mimepart.TMimePart.html#AttachInside"},
     {"title": "mimepart.TMimePart.OnWalkPart", "text": "Here you can assign hook procedure for walking through all part and their subparts.   ", "tags": "", "url": "mimepart.TMimePart.html#OnWalkPart"},
     {"title": "mimepart.TMimePart.MaxLineLength", "text": "Here you can specify maximum line length for encoding of MIME part. If line is longer, then is splitted by standard of MIME. Correct MIME mailers can de-split this line into original length.   ", "tags": "", "url": "mimepart.TMimePart.html#MaxLineLength"},
     {"title": "mimepart.MaxMimeType", "text": "   ", "tags": "", "url": "mimepart.html#MaxMimeType"},
     {"title": "mimepart.MimeType", "text": "   ", "tags": "", "url": "mimepart.html#MimeType"},
     {"title": "mimepart.GenerateBoundary", "text": "Generates a unique boundary string.    ", "tags": "", "url": "mimepart.html#GenerateBoundary"},
     {"title": "mimepart.CreateStringList", "text": "Generates a stringlist that does not write a BOM character.    ", "tags": "", "url": "mimepart.html#CreateStringList"},
     {"title": "mimepart.THookWalkPart", "text": ". This hook is used for easy walking through MIME subparts.    ", "tags": "", "url": "mimepart.html#THookWalkPart"},
     {"title": "mimepart.TMimePrimary", "text": "The four types of MIME parts. (textual, multipart, message or any other binary data.)    MP_TEXT    MP_MULTIPART    MP_MESSAGE    MP_BINARY   ", "tags": "", "url": "mimepart.html#TMimePrimary"},
     {"title": "mimepart.TMimeEncoding", "text": "The various types of possible part encodings.    ME_7BIT    ME_8BIT    ME_QUOTED_PRINTABLE    ME_BASE64    ME_UU    ME_XX   ", "tags": "", "url": "mimepart.html#TMimeEncoding"},
     {"title": "nntpsend", "text": " NNTP (network news transfer protocol)  Used RFC: RFC-977, RFC-2980   ", "tags": "", "url": "nntpsend.html"},
     {"title": "nntpsend.TNNTPSend", "text": "abstract(Implementation of Network News Transfer Protocol.  Note: Are you missing properties for setting Username and Password? Look to parent TSynaClient object!  Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "nntpsend.TNNTPSend.html"},
     {"title": "nntpsend.TNNTPSend.Create", "text": "    ", "tags": "", "url": "nntpsend.TNNTPSend.html#Create"},
     {"title": "nntpsend.TNNTPSend.Destroy", "text": "    ", "tags": "", "url": "nntpsend.TNNTPSend.html#Destroy"},
     {"title": "nntpsend.TNNTPSend.Login", "text": "Connects to NNTP server and begin session.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#Login"},
     {"title": "nntpsend.TNNTPSend.Logout", "text": "Logout from NNTP server and terminate session.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#Logout"},
     {"title": "nntpsend.TNNTPSend.DoCommand", "text": "By this you can call any NNTP command.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#DoCommand"},
     {"title": "nntpsend.TNNTPSend.DoCommandRead", "text": "by this you can call any NNTP command. This variant is used for commands for download information from server.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#DoCommandRead"},
     {"title": "nntpsend.TNNTPSend.DoCommandWrite", "text": "by this you can call any NNTP command. This variant is used for commands for upload information to server.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#DoCommandWrite"},
     {"title": "nntpsend.TNNTPSend.GetArticle", "text": "Download full message to data property. Value can be number of message or message-id (in brackets).    ", "tags": "", "url": "nntpsend.TNNTPSend.html#GetArticle"},
     {"title": "nntpsend.TNNTPSend.GetBody", "text": "Download only body of message to data property. Value can be number of message or message-id (in brackets).    ", "tags": "", "url": "nntpsend.TNNTPSend.html#GetBody"},
     {"title": "nntpsend.TNNTPSend.GetHead", "text": "Download only headers of message to data property. Value can be number of message or message-id (in brackets).    ", "tags": "", "url": "nntpsend.TNNTPSend.html#GetHead"},
     {"title": "nntpsend.TNNTPSend.GetStat", "text": "Get message status. Value can be number of message or message-id (in brackets).    ", "tags": "", "url": "nntpsend.TNNTPSend.html#GetStat"},
     {"title": "nntpsend.TNNTPSend.SelectGroup", "text": "Select given group.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#SelectGroup"},
     {"title": "nntpsend.TNNTPSend.IHave", "text": "Tell to server 'I have mesage with given message-ID.' If server need this message, message is uploaded to server.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#IHave"},
     {"title": "nntpsend.TNNTPSend.GotoLast", "text": "Move message pointer to last item in group.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#GotoLast"},
     {"title": "nntpsend.TNNTPSend.GotoNext", "text": "Move message pointer to next item in group.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#GotoNext"},
     {"title": "nntpsend.TNNTPSend.ListGroups", "text": "Download to data property list of all groups on NNTP server.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#ListGroups"},
     {"title": "nntpsend.TNNTPSend.ListNewGroups", "text": "Download to data property list of all groups created after given time.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#ListNewGroups"},
     {"title": "nntpsend.TNNTPSend.NewArticles", "text": "Download to data property list of message-ids in given group since given time.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#NewArticles"},
     {"title": "nntpsend.TNNTPSend.PostArticle", "text": "Upload new article to server. (for new messages by you)    ", "tags": "", "url": "nntpsend.TNNTPSend.html#PostArticle"},
     {"title": "nntpsend.TNNTPSend.SwitchToSlave", "text": "Tells to remote NNTP server 'I am not NNTP client, but I am another NNTP server'.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#SwitchToSlave"},
     {"title": "nntpsend.TNNTPSend.Xover", "text": "Call NNTP XOVER command.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#Xover"},
     {"title": "nntpsend.TNNTPSend.StartTLS", "text": "Call STARTTLS command for upgrade connection to SSL/TLS mode.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#StartTLS"},
     {"title": "nntpsend.TNNTPSend.FindCap", "text": "Try to find given capability in extension list. This list is getted after successful login to NNTP server. If extension capability is not found, then return is empty string.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#FindCap"},
     {"title": "nntpsend.TNNTPSend.ListExtensions", "text": "Try get list of server extensions. List is returned in data property.    ", "tags": "", "url": "nntpsend.TNNTPSend.html#ListExtensions"},
     {"title": "nntpsend.TNNTPSend.ResultCode", "text": "Result code number of last operation.   ", "tags": "", "url": "nntpsend.TNNTPSend.html#ResultCode"},
     {"title": "nntpsend.TNNTPSend.ResultString", "text": "String description of last result code from NNTP server.   ", "tags": "", "url": "nntpsend.TNNTPSend.html#ResultString"},
     {"title": "nntpsend.TNNTPSend.Data", "text": "Readed data. (message, etc.)   ", "tags": "", "url": "nntpsend.TNNTPSend.html#Data"},
     {"title": "nntpsend.TNNTPSend.AutoTLS", "text": "If is set to True, then upgrade to SSL/TLS mode after login if remote server support it.   ", "tags": "", "url": "nntpsend.TNNTPSend.html#AutoTLS"},
     {"title": "nntpsend.TNNTPSend.FullSSL", "text": "SSL/TLS mode is used from first contact to server. Servers with full SSL/TLS mode usualy using non-standard TCP port!   ", "tags": "", "url": "nntpsend.TNNTPSend.html#FullSSL"},
     {"title": "nntpsend.TNNTPSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "nntpsend.TNNTPSend.html#Sock"},
     {"title": "nntpsend.cNNTPProtocol", "text": "   ", "tags": "", "url": "nntpsend.html#cNNTPProtocol"},
     {"title": "pop3send", "text": "  Used RFC: RFC-1734, RFC-1939, RFC-2195, RFC-2449, RFC-2595   ", "tags": "", "url": "pop3send.html"},
     {"title": "pop3send.TPOP3Send", "text": "  Note: Are you missing properties for setting Username and Password? Look to parent TSynaClient object!  Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "pop3send.TPOP3Send.html"},
     {"title": "pop3send.TPOP3Send.Create", "text": "    ", "tags": "", "url": "pop3send.TPOP3Send.html#Create"},
     {"title": "pop3send.TPOP3Send.Destroy", "text": "    ", "tags": "", "url": "pop3send.TPOP3Send.html#Destroy"},
     {"title": "pop3send.TPOP3Send.CustomCommand", "text": "You can call any custom by this method. Call Command without trailing CRLF. If MultiLine parameter is True, multilined response are expected. Result is True on sucess.    ", "tags": "", "url": "pop3send.TPOP3Send.html#CustomCommand"},
     {"title": "pop3send.TPOP3Send.Capability", "text": "Call CAPA command for get POP3 server capabilites. note: not all servers support this command!    ", "tags": "", "url": "pop3send.TPOP3Send.html#Capability"},
     {"title": "pop3send.TPOP3Send.Login", "text": "Connect to remote POP3 host. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Login"},
     {"title": "pop3send.TPOP3Send.Logout", "text": "Disconnects from POP3 server.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Logout"},
     {"title": "pop3send.TPOP3Send.Reset", "text": "Send RSET command. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Reset"},
     {"title": "pop3send.TPOP3Send.NoOp", "text": "Send NOOP command. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#NoOp"},
     {"title": "pop3send.TPOP3Send.Stat", "text": "Send STAT command and fill StatCount and StatSize property. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Stat"},
     {"title": "pop3send.TPOP3Send.List", "text": "Send LIST command. If Value is 0, LIST is for all messages. After successful operation is listing in FullResult. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#List"},
     {"title": "pop3send.TPOP3Send.Retr", "text": "Send RETR command. After successful operation dowloaded message in FullResult. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Retr"},
     {"title": "pop3send.TPOP3Send.RetrStream", "text": "Send RETR command. After successful operation dowloaded message in Stream. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#RetrStream"},
     {"title": "pop3send.TPOP3Send.Dele", "text": "Send DELE command for delete specified message. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Dele"},
     {"title": "pop3send.TPOP3Send.Top", "text": "Send TOP command. After successful operation dowloaded headers of message and maxlines count of message in FullResult. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Top"},
     {"title": "pop3send.TPOP3Send.Uidl", "text": "Send UIDL command. If Value is 0, UIDL is for all messages. After successful operation is listing in FullResult. If all OK, result is True.    ", "tags": "", "url": "pop3send.TPOP3Send.html#Uidl"},
     {"title": "pop3send.TPOP3Send.StartTLS", "text": "Call STLS command for upgrade connection to SSL/TLS mode.    ", "tags": "", "url": "pop3send.TPOP3Send.html#StartTLS"},
     {"title": "pop3send.TPOP3Send.FindCap", "text": "Try to find given capabily in capabilty string returned from POP3 server by CAPA command.    ", "tags": "", "url": "pop3send.TPOP3Send.html#FindCap"},
     {"title": "pop3send.TPOP3Send.ResultCode", "text": "Result code of last POP3 operation. 0 - error, 1 - OK.   ", "tags": "", "url": "pop3send.TPOP3Send.html#ResultCode"},
     {"title": "pop3send.TPOP3Send.ResultString", "text": "Result string of last POP3 operation.   ", "tags": "", "url": "pop3send.TPOP3Send.html#ResultString"},
     {"title": "pop3send.TPOP3Send.FullResult", "text": "Stringlist with full lines returned as result of POP3 operation. I.e. if operation is LIST, this property is filled by list of messages. If operation is RETR, this property have downloaded message.   ", "tags": "", "url": "pop3send.TPOP3Send.html#FullResult"},
     {"title": "pop3send.TPOP3Send.StatCount", "text": "After STAT command is there count of messages in inbox.   ", "tags": "", "url": "pop3send.TPOP3Send.html#StatCount"},
     {"title": "pop3send.TPOP3Send.StatSize", "text": "After STAT command is there size of all messages in inbox.   ", "tags": "", "url": "pop3send.TPOP3Send.html#StatSize"},
     {"title": "pop3send.TPOP3Send.ListSize", "text": "After LIST 0 command size of all messages on server, After LIST x size of message x on server   ", "tags": "", "url": "pop3send.TPOP3Send.html#ListSize"},
     {"title": "pop3send.TPOP3Send.TimeStamp", "text": "If server support this, after comnnect is in this property timestamp of remote server.   ", "tags": "", "url": "pop3send.TPOP3Send.html#TimeStamp"},
     {"title": "pop3send.TPOP3Send.AuthType", "text": "Type of authorisation for login to POP3 server. Dafault is autodetect one of possible authorisation. Autodetect do this:  If remote POP3 server support APOP, try login by APOP method. If APOP is not supported, or if APOP login failed, try classic USER+PASS login method.   ", "tags": "", "url": "pop3send.TPOP3Send.html#AuthType"},
     {"title": "pop3send.TPOP3Send.AutoTLS", "text": "If is set to True, then upgrade to SSL/TLS mode if remote server support it.   ", "tags": "", "url": "pop3send.TPOP3Send.html#AutoTLS"},
     {"title": "pop3send.TPOP3Send.FullSSL", "text": "SSL/TLS mode is used from first contact to server. Servers with full SSL/TLS mode usualy using non-standard TCP port!   ", "tags": "", "url": "pop3send.TPOP3Send.html#FullSSL"},
     {"title": "pop3send.TPOP3Send.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "pop3send.TPOP3Send.html#Sock"},
     {"title": "pop3send.cPop3Protocol", "text": "   ", "tags": "", "url": "pop3send.html#cPop3Protocol"},
     {"title": "pop3send.TPOP3AuthType", "text": "The three types of possible authorization methods for &quot;logging in&quot; to a POP3 server.    POP3AuthAll    POP3AuthLogin    POP3AuthAPOP   ", "tags": "", "url": "pop3send.html#TPOP3AuthType"},
     {"title": "slogsend", "text": "  Used RFC: RFC-3164, RFC-5424 (millisecond grade timestamp, nonASCII support)   ", "tags": "", "url": "slogsend.html"},
     {"title": "slogsend.TSyslogMessage", "text": "   ", "tags": "", "url": "slogsend.TSyslogMessage.html"},
     {"title": "slogsend.TSyslogMessage.Clear", "text": "Reset values to defaults    ", "tags": "", "url": "slogsend.TSyslogMessage.html#Clear"},
     {"title": "slogsend.TSyslogMessage.Version", "text": "Define packet format version.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#Version"},
     {"title": "slogsend.TSyslogMessage.Facility", "text": "Define facilicity of Syslog message. For specify you may use predefined FCL_* constants. Default is &quot;FCL_Local0&quot;.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#Facility"},
     {"title": "slogsend.TSyslogMessage.Severity", "text": "Define possible priority of Syslog message. Default is &quot;Debug&quot;.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#Severity"},
     {"title": "slogsend.TSyslogMessage.DateTime", "text": "date and time of Syslog message   ", "tags": "", "url": "slogsend.TSyslogMessage.html#DateTime"},
     {"title": "slogsend.TSyslogMessage.Tag", "text": "This is used for identify process of this message. Default is filename of your executable file.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#Tag"},
     {"title": "slogsend.TSyslogMessage.AppName", "text": "alias to Tag   ", "tags": "", "url": "slogsend.TSyslogMessage.html#AppName"},
     {"title": "slogsend.TSyslogMessage.ProcID", "text": "Identification of logging process, like handle of process, transaction ID, etc.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#ProcID"},
     {"title": "slogsend.TSyslogMessage.MsgID", "text": "Identification of message type category. Messages with same ID should have same semantic.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#MsgID"},
     {"title": "slogsend.TSyslogMessage.LogMessage", "text": "Text of your message for log.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#LogMessage"},
     {"title": "slogsend.TSyslogMessage.LocalIP", "text": "IP address of message sender.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#LocalIP"},
     {"title": "slogsend.TSyslogMessage.PacketBuf", "text": "This property holds encoded binary SYSLOG packet. Note: writing is deprecated and working for RFC3164 only.   ", "tags": "", "url": "slogsend.TSyslogMessage.html#PacketBuf"},
     {"title": "slogsend.TSyslogSend", "text": "  Note: Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "slogsend.TSyslogSend.html"},
     {"title": "slogsend.TSyslogSend.Create", "text": "    ", "tags": "", "url": "slogsend.TSyslogSend.html#Create"},
     {"title": "slogsend.TSyslogSend.Destroy", "text": "    ", "tags": "", "url": "slogsend.TSyslogSend.html#Destroy"},
     {"title": "slogsend.TSyslogSend.DoIt", "text": "Send Syslog UDP packet defined by SysLogMessage.    ", "tags": "", "url": "slogsend.TSyslogSend.html#DoIt"},
     {"title": "slogsend.TSyslogSend.SysLogMessage", "text": "Syslog message for send   ", "tags": "", "url": "slogsend.TSyslogSend.html#SysLogMessage"},
     {"title": "slogsend.cSysLogProtocol", "text": "   ", "tags": "", "url": "slogsend.html#cSysLogProtocol"},
     {"title": "slogsend.FCL_Kernel", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Kernel"},
     {"title": "slogsend.FCL_UserLevel", "text": "   ", "tags": "", "url": "slogsend.html#FCL_UserLevel"},
     {"title": "slogsend.FCL_MailSystem", "text": "   ", "tags": "", "url": "slogsend.html#FCL_MailSystem"},
     {"title": "slogsend.FCL_System", "text": "   ", "tags": "", "url": "slogsend.html#FCL_System"},
     {"title": "slogsend.FCL_Security", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Security"},
     {"title": "slogsend.FCL_Syslogd", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Syslogd"},
     {"title": "slogsend.FCL_Printer", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Printer"},
     {"title": "slogsend.FCL_News", "text": "   ", "tags": "", "url": "slogsend.html#FCL_News"},
     {"title": "slogsend.FCL_UUCP", "text": "   ", "tags": "", "url": "slogsend.html#FCL_UUCP"},
     {"title": "slogsend.FCL_Clock", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Clock"},
     {"title": "slogsend.FCL_Authorization", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Authorization"},
     {"title": "slogsend.FCL_FTP", "text": "   ", "tags": "", "url": "slogsend.html#FCL_FTP"},
     {"title": "slogsend.FCL_NTP", "text": "   ", "tags": "", "url": "slogsend.html#FCL_NTP"},
     {"title": "slogsend.FCL_LogAudit", "text": "   ", "tags": "", "url": "slogsend.html#FCL_LogAudit"},
     {"title": "slogsend.FCL_LogAlert", "text": "   ", "tags": "", "url": "slogsend.html#FCL_LogAlert"},
     {"title": "slogsend.FCL_Time", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Time"},
     {"title": "slogsend.FCL_Local0", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local0"},
     {"title": "slogsend.FCL_Local1", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local1"},
     {"title": "slogsend.FCL_Local2", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local2"},
     {"title": "slogsend.FCL_Local3", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local3"},
     {"title": "slogsend.FCL_Local4", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local4"},
     {"title": "slogsend.FCL_Local5", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local5"},
     {"title": "slogsend.FCL_Local6", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local6"},
     {"title": "slogsend.FCL_Local7", "text": "   ", "tags": "", "url": "slogsend.html#FCL_Local7"},
     {"title": "slogsend.ToSysLog", "text": "Simply send old RFC-3164 packet to specified Syslog server.    ", "tags": "", "url": "slogsend.html#ToSysLog"},
     {"title": "slogsend.ToSysLog1", "text": "Simply send RFC-5424 version 1 packet to specified Syslog server.    ", "tags": "", "url": "slogsend.html#ToSysLog1"},
     {"title": "slogsend.TSyslogVersion", "text": "    RFC3164    RFC5424   ", "tags": "", "url": "slogsend.html#TSyslogVersion"},
     {"title": "slogsend.TSyslogSeverity", "text": "    Emergency    Alert    Critical    Error    Warning    Notice    Info    Debug   ", "tags": "", "url": "slogsend.html#TSyslogSeverity"},
     {"title": "smtpsend", "text": "  Used RFC: RFC-1869, RFC-1870, RFC-1893, RFC-2034, RFC-2104, RFC-2195, RFC-2487, RFC-2554, RFC-2821   ", "tags": "", "url": "smtpsend.html"},
     {"title": "smtpsend.TSMTPSend", "text": ", include some ESMTP extensions, include SSL/TLS too.  Note: Are you missing properties for setting Username and Password for ESMTP? Look to parent TSynaClient object!  Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "smtpsend.TSMTPSend.html"},
     {"title": "smtpsend.TSMTPSend.Create", "text": "    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Create"},
     {"title": "smtpsend.TSMTPSend.Destroy", "text": "    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Destroy"},
     {"title": "smtpsend.TSMTPSend.Login", "text": "Connects to SMTP server (defined in TSynaClient.TargetHost) and begin SMTP session. (First try ESMTP EHLO, next old HELO handshake). Parses ESMTP capabilites and if you specified Username and password and remote server can handle AUTH command, try login by AUTH command. Preffered login method is CRAM-MD5 (if safer!). If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Login"},
     {"title": "smtpsend.TSMTPSend.Logout", "text": "Close SMTP session (QUIT command) and disconnect from SMTP server.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Logout"},
     {"title": "smtpsend.TSMTPSend.Reset", "text": "Send RSET SMTP command for reset SMTP session. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Reset"},
     {"title": "smtpsend.TSMTPSend.NoOp", "text": "Send NOOP SMTP command for keep SMTP session. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#NoOp"},
     {"title": "smtpsend.TSMTPSend.MailFrom", "text": "Send MAIL FROM SMTP command for set sender e-mail address. If sender's e-mail address is empty string, transmited message is error message.  If size not 0 and remote server can handle SIZE parameter, append SIZE parameter to request. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#MailFrom"},
     {"title": "smtpsend.TSMTPSend.MailTo", "text": "Send RCPT TO SMTP command for set receiver e-mail address. It cannot be an empty string. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#MailTo"},
     {"title": "smtpsend.TSMTPSend.MailData", "text": "Send DATA SMTP command and transmit message data. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#MailData"},
     {"title": "smtpsend.TSMTPSend.Etrn", "text": "Send ETRN SMTP command for start sending of remote queue for domain in Value. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Etrn"},
     {"title": "smtpsend.TSMTPSend.Verify", "text": "Send VRFY SMTP command for check receiver e-mail address. It cannot be an empty string. If all OK, result is True, else result is False.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#Verify"},
     {"title": "smtpsend.TSMTPSend.StartTLS", "text": "Call STARTTLS command for upgrade connection to SSL/TLS mode.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#StartTLS"},
     {"title": "smtpsend.TSMTPSend.EnhCodeString", "text": "Return string descriptive text for enhanced result codes stored in EnhCode1, EnhCode2 and EnhCode3.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#EnhCodeString"},
     {"title": "smtpsend.TSMTPSend.FindCap", "text": "Try to find specified capability in ESMTP response.    ", "tags": "", "url": "smtpsend.TSMTPSend.html#FindCap"},
     {"title": "smtpsend.TSMTPSend.ResultCode", "text": "result code of last SMTP command.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#ResultCode"},
     {"title": "smtpsend.TSMTPSend.ResultString", "text": "result string of last SMTP command (begin with string representation of result code).   ", "tags": "", "url": "smtpsend.TSMTPSend.html#ResultString"},
     {"title": "smtpsend.TSMTPSend.FullResult", "text": "All result strings of last SMTP command (result is maybe multiline!).   ", "tags": "", "url": "smtpsend.TSMTPSend.html#FullResult"},
     {"title": "smtpsend.TSMTPSend.ESMTPcap", "text": "List of ESMTP capabilites of remote ESMTP server. (If you connect to ESMTP server only!).   ", "tags": "", "url": "smtpsend.TSMTPSend.html#ESMTPcap"},
     {"title": "smtpsend.TSMTPSend.ESMTP", "text": "True if you successfuly logged to ESMTP server.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#ESMTP"},
     {"title": "smtpsend.TSMTPSend.AuthDone", "text": "True if you successfuly pass authorisation to remote server.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#AuthDone"},
     {"title": "smtpsend.TSMTPSend.ESMTPSize", "text": "True if remote server can handle SIZE parameter.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#ESMTPSize"},
     {"title": "smtpsend.TSMTPSend.MaxSize", "text": "When ESMTPsize is True, contains max length of message that remote server can handle.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#MaxSize"},
     {"title": "smtpsend.TSMTPSend.EnhCode1", "text": "First digit of Enhanced result code. If last operation does not have enhanced result code, values is 0.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#EnhCode1"},
     {"title": "smtpsend.TSMTPSend.EnhCode2", "text": "Second digit of Enhanced result code. If last operation does not have enhanced result code, values is 0.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#EnhCode2"},
     {"title": "smtpsend.TSMTPSend.EnhCode3", "text": "Third digit of Enhanced result code. If last operation does not have enhanced result code, values is 0.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#EnhCode3"},
     {"title": "smtpsend.TSMTPSend.SystemName", "text": "name of our system used in HELO and EHLO command. Implicit value is internet address of your machine.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#SystemName"},
     {"title": "smtpsend.TSMTPSend.AutoTLS", "text": "If is set to true, then upgrade to SSL/TLS mode if remote server support it.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#AutoTLS"},
     {"title": "smtpsend.TSMTPSend.FullSSL", "text": "SSL/TLS mode is used from first contact to server. Servers with full SSL/TLS mode usualy using non-standard TCP port!   ", "tags": "", "url": "smtpsend.TSMTPSend.html#FullSSL"},
     {"title": "smtpsend.TSMTPSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "smtpsend.TSMTPSend.html#Sock"},
     {"title": "smtpsend.cSmtpProtocol", "text": "   ", "tags": "", "url": "smtpsend.html#cSmtpProtocol"},
     {"title": "smtpsend.SendToRaw", "text": "A very useful function and example of its use would be found in the TSMTPsend object. Send maildata (text of e-mail with all SMTP headers! For example when text of message is created by TMimemess object) from &quot;MailFrom&quot; e-mail address to &quot;MailTo&quot; e-mail address (If you need more then one receiver, then separate their addresses by comma).  Function sends e-mail to a SMTP server defined in &quot;SMTPhost&quot; parameter. Username and password are used for authorization to the &quot;SMTPhost&quot;. If you don't want authorization, set &quot;Username&quot; and &quot;Password&quot; to empty strings. If e-mail message is successfully sent, the result returns True.  If you need use different port number then standard, then add this port number to SMTPhost after colon. (i.e. '127.0.0.1:1025')    ", "tags": "", "url": "smtpsend.html#SendToRaw"},
     {"title": "smtpsend.SendTo", "text": "A very useful function and example of its use would be found in the TSMTPsend object. Send &quot;Maildata&quot; (text of e-mail without any SMTP headers!) from &quot;MailFrom&quot; e-mail address to &quot;MailTo&quot; e-mail address with &quot;Subject&quot;. (If you need more then one receiver, then separate their addresses by comma).  This function constructs all needed SMTP headers (with DATE header) and sends the e-mail to the SMTP server defined in the &quot;SMTPhost&quot; parameter. If the e-mail message is successfully sent, the result will be True.  If you need use different port number then standard, then add this port number to SMTPhost after colon. (i.e. '127.0.0.1:1025')    ", "tags": "", "url": "smtpsend.html#SendTo"},
     {"title": "smtpsend.SendToEx", "text": "A very useful function and example of its use would be found in the TSMTPsend object. Sends &quot;MailData&quot; (text of e-mail without any SMTP headers!) from &quot;MailFrom&quot; e-mail address to &quot;MailTo&quot; e-mail address (If you need more then one receiver, then separate their addresses by comma).  This function sends the e-mail to the SMTP server defined in the &quot;SMTPhost&quot; parameter. Username and password are used for authorization to the &quot;SMTPhost&quot;. If you dont want authorization, set &quot;Username&quot; and &quot;Password&quot; to empty Strings. If the e-mail message is successfully sent, the result will be True.  If you need use different port number then standard, then add this port number to SMTPhost after colon. (i.e. '127.0.0.1:1025')    ", "tags": "", "url": "smtpsend.html#SendToEx"},
     {"title": "snmpsend", "text": " Supports SNMPv1 include traps, SNMPv2c and SNMPv3 include authorization and privacy encryption.  Used RFC: RFC-1157, RFC-1901, RFC-3412, RFC-3414, RFC-3416, RFC-3826  Supported Authorization hashes: MD5, SHA1 Supported Privacy encryptions: DES, 3DES, AES   ", "tags": "", "url": "snmpsend.html"},
     {"title": "snmpsend.TSNMPMib", "text": "   ", "tags": "", "url": "snmpsend.TSNMPMib.html"},
     {"title": "snmpsend.TSNMPMib.FOID", "text": "   ", "tags": "", "url": "snmpsend.TSNMPMib.html#FOID"},
     {"title": "snmpsend.TSNMPMib.FValue", "text": "   ", "tags": "", "url": "snmpsend.TSNMPMib.html#FValue"},
     {"title": "snmpsend.TSNMPMib.FValueType", "text": "   ", "tags": "", "url": "snmpsend.TSNMPMib.html#FValueType"},
     {"title": "snmpsend.TSNMPMib.OID", "text": "OID number in string format.   ", "tags": "", "url": "snmpsend.TSNMPMib.html#OID"},
     {"title": "snmpsend.TSNMPMib.Value", "text": "Value of OID object in string format.   ", "tags": "", "url": "snmpsend.TSNMPMib.html#Value"},
     {"title": "snmpsend.TSNMPMib.ValueType", "text": "Define type of Value. Supported values are defined in asn1util. For queries use ASN1_NULL, becouse you don't know type in response!   ", "tags": "", "url": "snmpsend.TSNMPMib.html#ValueType"},
     {"title": "snmpsend.TV3Sync", "text": " Used internally.   ", "tags": "", "url": "snmpsend.TV3Sync.html"},
     {"title": "snmpsend.TV3Sync.EngineID", "text": "   ", "tags": "", "url": "snmpsend.TV3Sync.html#EngineID"},
     {"title": "snmpsend.TV3Sync.EngineBoots", "text": "   ", "tags": "", "url": "snmpsend.TV3Sync.html#EngineBoots"},
     {"title": "snmpsend.TV3Sync.EngineTime", "text": "   ", "tags": "", "url": "snmpsend.TV3Sync.html#EngineTime"},
     {"title": "snmpsend.TV3Sync.EngineStamp", "text": "   ", "tags": "", "url": "snmpsend.TV3Sync.html#EngineStamp"},
     {"title": "snmpsend.TSNMPRec", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html"},
     {"title": "snmpsend.TSNMPRec.FVersion", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FVersion"},
     {"title": "snmpsend.TSNMPRec.FPDUType", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPDUType"},
     {"title": "snmpsend.TSNMPRec.FID", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FID"},
     {"title": "snmpsend.TSNMPRec.FErrorStatus", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FErrorStatus"},
     {"title": "snmpsend.TSNMPRec.FErrorIndex", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FErrorIndex"},
     {"title": "snmpsend.TSNMPRec.FCommunity", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FCommunity"},
     {"title": "snmpsend.TSNMPRec.FSNMPMibList", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FSNMPMibList"},
     {"title": "snmpsend.TSNMPRec.FMaxSize", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FMaxSize"},
     {"title": "snmpsend.TSNMPRec.FFlags", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FFlags"},
     {"title": "snmpsend.TSNMPRec.FFlagReportable", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FFlagReportable"},
     {"title": "snmpsend.TSNMPRec.FContextEngineID", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FContextEngineID"},
     {"title": "snmpsend.TSNMPRec.FContextName", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FContextName"},
     {"title": "snmpsend.TSNMPRec.FAuthMode", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FAuthMode"},
     {"title": "snmpsend.TSNMPRec.FAuthEngineID", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FAuthEngineID"},
     {"title": "snmpsend.TSNMPRec.FAuthEngineBoots", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FAuthEngineBoots"},
     {"title": "snmpsend.TSNMPRec.FAuthEngineTime", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FAuthEngineTime"},
     {"title": "snmpsend.TSNMPRec.FAuthEngineTimeStamp", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FAuthEngineTimeStamp"},
     {"title": "snmpsend.TSNMPRec.FUserName", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FUserName"},
     {"title": "snmpsend.TSNMPRec.FPassword", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPassword"},
     {"title": "snmpsend.TSNMPRec.FAuthKey", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FAuthKey"},
     {"title": "snmpsend.TSNMPRec.FPrivMode", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPrivMode"},
     {"title": "snmpsend.TSNMPRec.FPrivPassword", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPrivPassword"},
     {"title": "snmpsend.TSNMPRec.FPrivKey", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPrivKey"},
     {"title": "snmpsend.TSNMPRec.FPrivSalt", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPrivSalt"},
     {"title": "snmpsend.TSNMPRec.FPrivSaltCounter", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FPrivSaltCounter"},
     {"title": "snmpsend.TSNMPRec.FOldTrapEnterprise", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FOldTrapEnterprise"},
     {"title": "snmpsend.TSNMPRec.FOldTrapHost", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FOldTrapHost"},
     {"title": "snmpsend.TSNMPRec.FOldTrapGen", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FOldTrapGen"},
     {"title": "snmpsend.TSNMPRec.FOldTrapSpec", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FOldTrapSpec"},
     {"title": "snmpsend.TSNMPRec.FOldTrapTimeTicks", "text": "   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FOldTrapTimeTicks"},
     {"title": "snmpsend.TSNMPRec.Pass2Key", "text": "    ", "tags": "", "url": "snmpsend.TSNMPRec.html#Pass2Key"},
     {"title": "snmpsend.TSNMPRec.EncryptPDU", "text": "    ", "tags": "", "url": "snmpsend.TSNMPRec.html#EncryptPDU"},
     {"title": "snmpsend.TSNMPRec.DecryptPDU", "text": "    ", "tags": "", "url": "snmpsend.TSNMPRec.html#DecryptPDU"},
     {"title": "snmpsend.TSNMPRec.Create", "text": "    ", "tags": "", "url": "snmpsend.TSNMPRec.html#Create"},
     {"title": "snmpsend.TSNMPRec.Destroy", "text": "    ", "tags": "", "url": "snmpsend.TSNMPRec.html#Destroy"},
     {"title": "snmpsend.TSNMPRec.DecodeBuf", "text": "Decode SNMP packet in buffer to object properties.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#DecodeBuf"},
     {"title": "snmpsend.TSNMPRec.EncodeBuf", "text": "Encode obeject properties to SNMP packet.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#EncodeBuf"},
     {"title": "snmpsend.TSNMPRec.Clear", "text": "Clears all object properties to default values.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#Clear"},
     {"title": "snmpsend.TSNMPRec.MIBAdd", "text": "Add entry to SNMPMibList. For queries use value as empty string, and ValueType as ASN1_NULL.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#MIBAdd"},
     {"title": "snmpsend.TSNMPRec.MIBDelete", "text": "Delete entry from SNMPMibList.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#MIBDelete"},
     {"title": "snmpsend.TSNMPRec.MIBGet", "text": "Search SNMPMibList list for MIB and return correspond value.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#MIBGet"},
     {"title": "snmpsend.TSNMPRec.MIBCount", "text": "return number of entries in MIB array.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#MIBCount"},
     {"title": "snmpsend.TSNMPRec.MIBByIndex", "text": "Return MIB information from given row of MIB array.    ", "tags": "", "url": "snmpsend.TSNMPRec.html#MIBByIndex"},
     {"title": "snmpsend.TSNMPRec.SNMPMibList", "text": "List of TSNMPMib objects.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#SNMPMibList"},
     {"title": "snmpsend.TSNMPRec.Version", "text": "Version of SNMP packet. Default value is 0 (SNMP ver. 1). You can use value 1 for SNMPv2c or value 3 for SNMPv3.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#Version"},
     {"title": "snmpsend.TSNMPRec.Community", "text": "Community string for autorize access to SNMP server. (Case sensitive!) Community string is not used in SNMPv3! Use Username and password instead!   ", "tags": "", "url": "snmpsend.TSNMPRec.html#Community"},
     {"title": "snmpsend.TSNMPRec.PDUType", "text": "Define type of SNMP operation.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#PDUType"},
     {"title": "snmpsend.TSNMPRec.ID", "text": "Contains ID number. Not need to use.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#ID"},
     {"title": "snmpsend.TSNMPRec.ErrorStatus", "text": "When packet is reply, contains error code. Supported values are defined by E* constants.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#ErrorStatus"},
     {"title": "snmpsend.TSNMPRec.ErrorIndex", "text": "Point to error position in reply packet. Not usefull for users. It only good for debugging!   ", "tags": "", "url": "snmpsend.TSNMPRec.html#ErrorIndex"},
     {"title": "snmpsend.TSNMPRec.NonRepeaters", "text": "special value for GetBulkRequest of SNMPv2 and v3.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#NonRepeaters"},
     {"title": "snmpsend.TSNMPRec.MaxRepetitions", "text": "special value for GetBulkRequest of SNMPv2 and v3.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#MaxRepetitions"},
     {"title": "snmpsend.TSNMPRec.MaxSize", "text": "Maximum message size in bytes for SNMPv3. For sending is default 1472 bytes.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#MaxSize"},
     {"title": "snmpsend.TSNMPRec.Flags", "text": "Specify if message is authorised or encrypted. Used only in SNMPv3.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#Flags"},
     {"title": "snmpsend.TSNMPRec.FlagReportable", "text": "For SNMPv3.... If is True, SNMP agent must send reply (at least with some error).   ", "tags": "", "url": "snmpsend.TSNMPRec.html#FlagReportable"},
     {"title": "snmpsend.TSNMPRec.ContextEngineID", "text": "For SNMPv3. If not specified, is used value from AuthEngineID   ", "tags": "", "url": "snmpsend.TSNMPRec.html#ContextEngineID"},
     {"title": "snmpsend.TSNMPRec.ContextName", "text": "For SNMPv3.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#ContextName"},
     {"title": "snmpsend.TSNMPRec.AuthMode", "text": "For SNMPv3. Specify Authorization mode. (specify used hash for authorization)   ", "tags": "", "url": "snmpsend.TSNMPRec.html#AuthMode"},
     {"title": "snmpsend.TSNMPRec.PrivMode", "text": "For SNMPv3. Specify Privacy mode.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#PrivMode"},
     {"title": "snmpsend.TSNMPRec.AuthEngineID", "text": "value used by SNMPv3 authorisation for synchronization with SNMP agent.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#AuthEngineID"},
     {"title": "snmpsend.TSNMPRec.AuthEngineBoots", "text": "value used by SNMPv3 authorisation for synchronization with SNMP agent.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#AuthEngineBoots"},
     {"title": "snmpsend.TSNMPRec.AuthEngineTime", "text": "value used by SNMPv3 authorisation for synchronization with SNMP agent.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#AuthEngineTime"},
     {"title": "snmpsend.TSNMPRec.AuthEngineTimeStamp", "text": "value used by SNMPv3 authorisation for synchronization with SNMP agent.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#AuthEngineTimeStamp"},
     {"title": "snmpsend.TSNMPRec.UserName", "text": "SNMPv3 authorization username   ", "tags": "", "url": "snmpsend.TSNMPRec.html#UserName"},
     {"title": "snmpsend.TSNMPRec.Password", "text": "SNMPv3 authorization password   ", "tags": "", "url": "snmpsend.TSNMPRec.html#Password"},
     {"title": "snmpsend.TSNMPRec.AuthKey", "text": "For SNMPv3. Computed Athorization key from password.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#AuthKey"},
     {"title": "snmpsend.TSNMPRec.PrivPassword", "text": "SNMPv3 privacy password   ", "tags": "", "url": "snmpsend.TSNMPRec.html#PrivPassword"},
     {"title": "snmpsend.TSNMPRec.PrivKey", "text": "For SNMPv3. Computed Privacy key from PrivPassword.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#PrivKey"},
     {"title": "snmpsend.TSNMPRec.OldTrapEnterprise", "text": "MIB value to identify the object that sent the TRAPv1.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#OldTrapEnterprise"},
     {"title": "snmpsend.TSNMPRec.OldTrapHost", "text": "Address of TRAPv1 sender (IP address).   ", "tags": "", "url": "snmpsend.TSNMPRec.html#OldTrapHost"},
     {"title": "snmpsend.TSNMPRec.OldTrapGen", "text": "Generic TRAPv1 identification.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#OldTrapGen"},
     {"title": "snmpsend.TSNMPRec.OldTrapSpec", "text": "Specific TRAPv1 identification.   ", "tags": "", "url": "snmpsend.TSNMPRec.html#OldTrapSpec"},
     {"title": "snmpsend.TSNMPRec.OldTrapTimeTicks", "text": "Number of 1/100th of seconds since last reboot or power up. (for TRAPv1)   ", "tags": "", "url": "snmpsend.TSNMPRec.html#OldTrapTimeTicks"},
     {"title": "snmpsend.TSNMPSend", "text": "  Note: Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "snmpsend.TSNMPSend.html"},
     {"title": "snmpsend.TSNMPSend.FSock", "text": "   ", "tags": "", "url": "snmpsend.TSNMPSend.html#FSock"},
     {"title": "snmpsend.TSNMPSend.FBuffer", "text": "   ", "tags": "", "url": "snmpsend.TSNMPSend.html#FBuffer"},
     {"title": "snmpsend.TSNMPSend.FHostIP", "text": "   ", "tags": "", "url": "snmpsend.TSNMPSend.html#FHostIP"},
     {"title": "snmpsend.TSNMPSend.FQuery", "text": "   ", "tags": "", "url": "snmpsend.TSNMPSend.html#FQuery"},
     {"title": "snmpsend.TSNMPSend.FReply", "text": "   ", "tags": "", "url": "snmpsend.TSNMPSend.html#FReply"},
     {"title": "snmpsend.TSNMPSend.InternalSendSnmp", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#InternalSendSnmp"},
     {"title": "snmpsend.TSNMPSend.InternalRecvSnmp", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#InternalRecvSnmp"},
     {"title": "snmpsend.TSNMPSend.InternalSendRequest", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#InternalSendRequest"},
     {"title": "snmpsend.TSNMPSend.GetV3EngineID", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#GetV3EngineID"},
     {"title": "snmpsend.TSNMPSend.GetV3Sync", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#GetV3Sync"},
     {"title": "snmpsend.TSNMPSend.Create", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#Create"},
     {"title": "snmpsend.TSNMPSend.Destroy", "text": "    ", "tags": "", "url": "snmpsend.TSNMPSend.html#Destroy"},
     {"title": "snmpsend.TSNMPSend.SendRequest", "text": "Connects to a Host and send there query. If in timeout SNMP server send back query, result is True. If is used SNMPv3, then it synchronize self with SNMPv3 agent first. (It is needed for SNMPv3 auhorization!)    ", "tags": "", "url": "snmpsend.TSNMPSend.html#SendRequest"},
     {"title": "snmpsend.TSNMPSend.SendTrap", "text": "Send SNMP packet only, but not waits for reply. Good for sending traps.    ", "tags": "", "url": "snmpsend.TSNMPSend.html#SendTrap"},
     {"title": "snmpsend.TSNMPSend.RecvTrap", "text": "Receive SNMP packet only. Good for receiving traps.    ", "tags": "", "url": "snmpsend.TSNMPSend.html#RecvTrap"},
     {"title": "snmpsend.TSNMPSend.DoIt", "text": "Mapped to SendRequest internally. This function is only for backward compatibility.    ", "tags": "", "url": "snmpsend.TSNMPSend.html#DoIt"},
     {"title": "snmpsend.TSNMPSend.Buffer", "text": "contains raw binary form of SNMP packet. Good for debugging.   ", "tags": "", "url": "snmpsend.TSNMPSend.html#Buffer"},
     {"title": "snmpsend.TSNMPSend.HostIP", "text": "After SNMP operation hold IP address of remote side.   ", "tags": "", "url": "snmpsend.TSNMPSend.html#HostIP"},
     {"title": "snmpsend.TSNMPSend.Query", "text": "Data object contains SNMP query.   ", "tags": "", "url": "snmpsend.TSNMPSend.html#Query"},
     {"title": "snmpsend.TSNMPSend.Reply", "text": "Data object contains SNMP reply.   ", "tags": "", "url": "snmpsend.TSNMPSend.html#Reply"},
     {"title": "snmpsend.TSNMPSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "snmpsend.TSNMPSend.html#Sock"},
     {"title": "snmpsend.cSnmpProtocol", "text": "   ", "tags": "", "url": "snmpsend.html#cSnmpProtocol"},
     {"title": "snmpsend.cSnmpTrapProtocol", "text": "   ", "tags": "", "url": "snmpsend.html#cSnmpTrapProtocol"},
     {"title": "snmpsend.SNMP_V1", "text": "   ", "tags": "", "url": "snmpsend.html#SNMP_V1"},
     {"title": "snmpsend.SNMP_V2C", "text": "   ", "tags": "", "url": "snmpsend.html#SNMP_V2C"},
     {"title": "snmpsend.SNMP_V3", "text": "   ", "tags": "", "url": "snmpsend.html#SNMP_V3"},
     {"title": "snmpsend.PDUGetRequest", "text": "   ", "tags": "", "url": "snmpsend.html#PDUGetRequest"},
     {"title": "snmpsend.PDUGetNextRequest", "text": "   ", "tags": "", "url": "snmpsend.html#PDUGetNextRequest"},
     {"title": "snmpsend.PDUGetResponse", "text": "   ", "tags": "", "url": "snmpsend.html#PDUGetResponse"},
     {"title": "snmpsend.PDUSetRequest", "text": "   ", "tags": "", "url": "snmpsend.html#PDUSetRequest"},
     {"title": "snmpsend.PDUTrap", "text": "   ", "tags": "", "url": "snmpsend.html#PDUTrap"},
     {"title": "snmpsend.PDUGetBulkRequest", "text": "   ", "tags": "", "url": "snmpsend.html#PDUGetBulkRequest"},
     {"title": "snmpsend.PDUInformRequest", "text": "   ", "tags": "", "url": "snmpsend.html#PDUInformRequest"},
     {"title": "snmpsend.PDUTrapV2", "text": "   ", "tags": "", "url": "snmpsend.html#PDUTrapV2"},
     {"title": "snmpsend.PDUReport", "text": "   ", "tags": "", "url": "snmpsend.html#PDUReport"},
     {"title": "snmpsend.ENoError", "text": "   ", "tags": "", "url": "snmpsend.html#ENoError"},
     {"title": "snmpsend.ETooBig", "text": "   ", "tags": "", "url": "snmpsend.html#ETooBig"},
     {"title": "snmpsend.ENoSuchName", "text": "   ", "tags": "", "url": "snmpsend.html#ENoSuchName"},
     {"title": "snmpsend.EBadValue", "text": "   ", "tags": "", "url": "snmpsend.html#EBadValue"},
     {"title": "snmpsend.EReadOnly", "text": "   ", "tags": "", "url": "snmpsend.html#EReadOnly"},
     {"title": "snmpsend.EGenErr", "text": "   ", "tags": "", "url": "snmpsend.html#EGenErr"},
     {"title": "snmpsend.ENoAccess", "text": "   ", "tags": "", "url": "snmpsend.html#ENoAccess"},
     {"title": "snmpsend.EWrongType", "text": "   ", "tags": "", "url": "snmpsend.html#EWrongType"},
     {"title": "snmpsend.EWrongLength", "text": "   ", "tags": "", "url": "snmpsend.html#EWrongLength"},
     {"title": "snmpsend.EWrongEncoding", "text": "   ", "tags": "", "url": "snmpsend.html#EWrongEncoding"},
     {"title": "snmpsend.EWrongValue", "text": "   ", "tags": "", "url": "snmpsend.html#EWrongValue"},
     {"title": "snmpsend.ENoCreation", "text": "   ", "tags": "", "url": "snmpsend.html#ENoCreation"},
     {"title": "snmpsend.EInconsistentValue", "text": "   ", "tags": "", "url": "snmpsend.html#EInconsistentValue"},
     {"title": "snmpsend.EResourceUnavailable", "text": "   ", "tags": "", "url": "snmpsend.html#EResourceUnavailable"},
     {"title": "snmpsend.ECommitFailed", "text": "   ", "tags": "", "url": "snmpsend.html#ECommitFailed"},
     {"title": "snmpsend.EUndoFailed", "text": "   ", "tags": "", "url": "snmpsend.html#EUndoFailed"},
     {"title": "snmpsend.EAuthorizationError", "text": "   ", "tags": "", "url": "snmpsend.html#EAuthorizationError"},
     {"title": "snmpsend.ENotWritable", "text": "   ", "tags": "", "url": "snmpsend.html#ENotWritable"},
     {"title": "snmpsend.EInconsistentName", "text": "   ", "tags": "", "url": "snmpsend.html#EInconsistentName"},
     {"title": "snmpsend.SNMPGet", "text": "A very useful function and example of its use would be found in the TSNMPSend object. It implements basic GET method of the SNMP protocol. The MIB value is located in the &quot;OID&quot; variable, and is sent to the requested &quot;SNMPHost&quot; with the proper &quot;Community&quot; access identifier. Upon a successful retrieval, &quot;Value&quot; will contain the information requested. If the SNMP operation is successful, the result returns True.    ", "tags": "", "url": "snmpsend.html#SNMPGet"},
     {"title": "snmpsend.SNMPSet", "text": "This is useful function and example of use TSNMPSend object. It implements the basic SET method of the SNMP protocol. If the SNMP operation is successful, the result is True. &quot;Value&quot; is value of MIB Oid for &quot;SNMPHost&quot; with &quot;Community&quot; access identifier. You must specify &quot;ValueType&quot; too.    ", "tags": "", "url": "snmpsend.html#SNMPSet"},
     {"title": "snmpsend.SNMPGetNext", "text": "A very useful function and example of its use would be found in the TSNMPSend object. It implements basic GETNEXT method of the SNMP protocol. The MIB value is located in the &quot;OID&quot; variable, and is sent to the requested &quot;SNMPHost&quot; with the proper &quot;Community&quot; access identifier. Upon a successful retrieval, &quot;Value&quot; will contain the information requested. If the SNMP operation is successful, the result returns True.    ", "tags": "", "url": "snmpsend.html#SNMPGetNext"},
     {"title": "snmpsend.SNMPGetTable", "text": "A very useful function and example of its use would be found in the TSNMPSend object. It implements basic read of SNMP MIB tables. As BaseOID you must specify basic MIB OID of requested table (base IOD is OID without row and column specificator!) Table is readed into stringlist, where each string is comma delimited string.  Warning: this function is not have best performance. For better performance you must write your own function. best performace you can get by knowledge of structuture of table and by more then one MIB on one query.    ", "tags": "", "url": "snmpsend.html#SNMPGetTable"},
     {"title": "snmpsend.SNMPGetTableElement", "text": "A very useful function and example of its use would be found in the TSNMPSend object. It implements basic read of SNMP MIB table element. As BaseOID you must specify basic MIB OID of requested table (base IOD is OID without row and column specificator!) As next you must specify identificator of row and column for specify of needed field of table.    ", "tags": "", "url": "snmpsend.html#SNMPGetTableElement"},
     {"title": "snmpsend.SendTrap", "text": "A very useful function and example of its use would be found in the TSNMPSend object. It implements a TRAPv1 to send with all data in the parameters.    ", "tags": "", "url": "snmpsend.html#SendTrap"},
     {"title": "snmpsend.RecvTrap", "text": "A very useful function and example of its use would be found in the TSNMPSend object. It receives a TRAPv1 and returns all the data that comes with it.    ", "tags": "", "url": "snmpsend.html#RecvTrap"},
     {"title": "snmpsend.TV3Flags", "text": " This flags specify level of authorization and encryption.    NoAuthNoPriv    AuthNoPriv    AuthPriv   ", "tags": "", "url": "snmpsend.html#TV3Flags"},
     {"title": "snmpsend.TV3Auth", "text": "    AuthMD5    AuthSHA1   ", "tags": "", "url": "snmpsend.html#TV3Auth"},
     {"title": "snmpsend.TV3Priv", "text": "    PrivDES    Priv3DES    PrivAES   ", "tags": "", "url": "snmpsend.html#TV3Priv"},
     {"title": "snmpsend.TSNMPMibList", "text": "   ", "tags": "", "url": "snmpsend.html#TSNMPMibList"},
     {"title": "sntpsend", "text": "  Used RFC: RFC-1305, RFC-2030   ", "tags": "", "url": "sntpsend.html"},
     {"title": "sntpsend.TNtp", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html"},
     {"title": "sntpsend.TNtp.mode", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#mode"},
     {"title": "sntpsend.TNtp.stratum", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#stratum"},
     {"title": "sntpsend.TNtp.poll", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#poll"},
     {"title": "sntpsend.TNtp.Precision", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Precision"},
     {"title": "sntpsend.TNtp.RootDelay", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#RootDelay"},
     {"title": "sntpsend.TNtp.RootDisperson", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#RootDisperson"},
     {"title": "sntpsend.TNtp.RefID", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#RefID"},
     {"title": "sntpsend.TNtp.Ref1", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Ref1"},
     {"title": "sntpsend.TNtp.Ref2", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Ref2"},
     {"title": "sntpsend.TNtp.Org1", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Org1"},
     {"title": "sntpsend.TNtp.Org2", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Org2"},
     {"title": "sntpsend.TNtp.Rcv1", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Rcv1"},
     {"title": "sntpsend.TNtp.Rcv2", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Rcv2"},
     {"title": "sntpsend.TNtp.Xmit1", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Xmit1"},
     {"title": "sntpsend.TNtp.Xmit2", "text": "   ", "tags": "", "url": "sntpsend.TNtp.html#Xmit2"},
     {"title": "sntpsend.TSNTPSend", "text": ", include time synchronisation. It can send NTP or SNTP time queries, or it can receive NTP broadcasts too.  Note: Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "sntpsend.TSNTPSend.html"},
     {"title": "sntpsend.TSNTPSend.Create", "text": "    ", "tags": "", "url": "sntpsend.TSNTPSend.html#Create"},
     {"title": "sntpsend.TSNTPSend.Destroy", "text": "    ", "tags": "", "url": "sntpsend.TSNTPSend.html#Destroy"},
     {"title": "sntpsend.TSNTPSend.DecodeTs", "text": "Decode 128 bit timestamp used in NTP packet to TDateTime type.    ", "tags": "", "url": "sntpsend.TSNTPSend.html#DecodeTs"},
     {"title": "sntpsend.TSNTPSend.EncodeTs", "text": "Decode TDateTime type to 128 bit timestamp used in NTP packet.    ", "tags": "", "url": "sntpsend.TSNTPSend.html#EncodeTs"},
     {"title": "sntpsend.TSNTPSend.GetSNTP", "text": "Send request to TSynaClient.TargetHost and wait for reply. If all is OK, then result is True and NTPReply and NTPTime are valid.    ", "tags": "", "url": "sntpsend.TSNTPSend.html#GetSNTP"},
     {"title": "sntpsend.TSNTPSend.GetNTP", "text": "Send request to TSynaClient.TargetHost and wait for reply. If all is OK, then result is True and NTPReply and NTPTime are valid. Result time is after all needed corrections.    ", "tags": "", "url": "sntpsend.TSNTPSend.html#GetNTP"},
     {"title": "sntpsend.TSNTPSend.GetBroadcastNTP", "text": "Wait for broadcast NTP packet. If all OK, result is True and NTPReply and NTPTime are valid.    ", "tags": "", "url": "sntpsend.TSNTPSend.html#GetBroadcastNTP"},
     {"title": "sntpsend.TSNTPSend.NTPReply", "text": "Holds last received NTP packet.   ", "tags": "", "url": "sntpsend.TSNTPSend.html#NTPReply"},
     {"title": "sntpsend.TSNTPSend.NTPTime", "text": "Date and time of remote NTP or SNTP server. (UTC time!!!)   ", "tags": "", "url": "sntpsend.TSNTPSend.html#NTPTime"},
     {"title": "sntpsend.TSNTPSend.NTPOffset", "text": "Offset between your computer and remote NTP or SNTP server.   ", "tags": "", "url": "sntpsend.TSNTPSend.html#NTPOffset"},
     {"title": "sntpsend.TSNTPSend.NTPDelay", "text": "Delay between your computer and remote NTP or SNTP server.   ", "tags": "", "url": "sntpsend.TSNTPSend.html#NTPDelay"},
     {"title": "sntpsend.TSNTPSend.MaxSyncDiff", "text": "Define allowed maximum difference between your time and remote time for synchronising time. If difference is bigger, your system time is not changed!   ", "tags": "", "url": "sntpsend.TSNTPSend.html#MaxSyncDiff"},
     {"title": "sntpsend.TSNTPSend.SyncTime", "text": "If True, after successfull getting time is local computer clock synchronised to given time. For synchronising time you must have proper rights! (Usually Administrator)   ", "tags": "", "url": "sntpsend.TSNTPSend.html#SyncTime"},
     {"title": "sntpsend.TSNTPSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "sntpsend.TSNTPSend.html#Sock"},
     {"title": "sntpsend.cNtpProtocol", "text": "   ", "tags": "", "url": "sntpsend.html#cNtpProtocol"},
     {"title": "ssl_cryptlib", "text": "  This plugin requires cl32.dll at least version 3.2.0! It can be used on Win32 and Linux. This library is staticly linked - when you compile your application with this plugin, you MUST distribute it with Cryptib library, otherwise you cannot run your application!  It can work with keys and certificates stored as PKCS#15 only! It must be stored as disk file only, you cannot load them from memory! Each file can hold multiple keys and certificates. You must identify it by 'label' stored in TSSLCryptLib.PrivateKeyLabel.  If you need to use secure connection and authorize self by certificate (each SSL/TLS server or client with client authorization), then use TCustomSSL.PrivateKeyFile, TSSLCryptLib.PrivateKeyLabel and TCustomSSL.KeyPassword properties.  If you need to use server what verifying client certificates, then use TCustomSSL.CertCAFile as PKCS#15 file with public keyas of allowed clients. Clients with non-matching certificates will be rejected by cryptLib.  This plugin is capable to create Ad-Hoc certificates. When you start SSL/TLS server without explicitly assigned key and certificate, then this plugin create Ad-Hoc key and certificate for each incomming connection by self. It slowdown accepting of new connections!  You can use this plugin for SSHv2 connections too! You must explicitly set TCustomSSL.SSLType to value LT_SSHv2 and set TCustomSSL.username and TCustomSSL.password. You can use special SSH channels too, see TCustomSSL.   ", "tags": "", "url": "ssl_cryptlib.html"},
     {"title": "ssl_cryptlib.TSSLCryptLib", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html"},
     {"title": "ssl_cryptlib.TSSLCryptLib.FCryptSession", "text": "   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#FCryptSession"},
     {"title": "ssl_cryptlib.TSSLCryptLib.FPrivateKeyLabel", "text": "   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#FPrivateKeyLabel"},
     {"title": "ssl_cryptlib.TSSLCryptLib.FDelCert", "text": "   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#FDelCert"},
     {"title": "ssl_cryptlib.TSSLCryptLib.FReadBuffer", "text": "   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#FReadBuffer"},
     {"title": "ssl_cryptlib.TSSLCryptLib.FTrustedCAs", "text": "   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#FTrustedCAs"},
     {"title": "ssl_cryptlib.TSSLCryptLib.SSLCheck", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#SSLCheck"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Init", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Init"},
     {"title": "ssl_cryptlib.TSSLCryptLib.DeInit", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#DeInit"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Prepare", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Prepare"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetString", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetString"},
     {"title": "ssl_cryptlib.TSSLCryptLib.CreateSelfSignedCert", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#CreateSelfSignedCert"},
     {"title": "ssl_cryptlib.TSSLCryptLib.PopAll", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#PopAll"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Create", "text": "See TCustomSSL.Create    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Create"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Destroy", "text": "    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Destroy"},
     {"title": "ssl_cryptlib.TSSLCryptLib.SetCertCAFile", "text": "Load trusted CA's in PEM format    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#SetCertCAFile"},
     {"title": "ssl_cryptlib.TSSLCryptLib.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#LibVersion"},
     {"title": "ssl_cryptlib.TSSLCryptLib.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#LibName"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Assign", "text": "See TCustomSSL.Assign    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Assign"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Connect", "text": "See TCustomSSL.Connect and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Connect"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Accept", "text": "See TCustomSSL.Accept and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Accept"},
     {"title": "ssl_cryptlib.TSSLCryptLib.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#Shutdown"},
     {"title": "ssl_cryptlib.TSSLCryptLib.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#BiShutdown"},
     {"title": "ssl_cryptlib.TSSLCryptLib.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#SendBuffer"},
     {"title": "ssl_cryptlib.TSSLCryptLib.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#RecvBuffer"},
     {"title": "ssl_cryptlib.TSSLCryptLib.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#WaitingData"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetSSLVersion"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetPeerSubject", "text": "See TCustomSSL.GetPeerSubject    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetPeerSubject"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetPeerIssuer", "text": "See TCustomSSL.GetPeerIssuer    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetPeerIssuer"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetPeerName", "text": "See TCustomSSL.GetPeerName    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetPeerName"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetPeerFingerprint", "text": "See TCustomSSL.GetPeerFingerprint    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetPeerFingerprint"},
     {"title": "ssl_cryptlib.TSSLCryptLib.GetVerifyCert", "text": "See TCustomSSL.GetVerifyCert    ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#GetVerifyCert"},
     {"title": "ssl_cryptlib.TSSLCryptLib.PrivateKeyLabel", "text": "name of certificate/key within PKCS#15 file. It can hold more then one certificate/key and each certificate/key must have unique label within one file.   ", "tags": "", "url": "ssl_cryptlib.TSSLCryptLib.html#PrivateKeyLabel"},
     {"title": "ssl_libssh2", "text": "  Requires libssh2.dll or libssh2.so. You can download binaries as part of the CURL project from http://curl.haxx.se/download.html  You need Pascal bindings for the library too! You can find one at: http://www.lazarus.freepascal.org/index.php/topic,15935.msg86465.html#msg86465  This plugin implements the client part only.   ", "tags": "", "url": "ssl_libssh2.html"},
     {"title": "ssl_libssh2.TSSLLibSSH2", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html"},
     {"title": "ssl_libssh2.TSSLLibSSH2.FSession", "text": "   ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#FSession"},
     {"title": "ssl_libssh2.TSSLLibSSH2.FChannel", "text": "   ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#FChannel"},
     {"title": "ssl_libssh2.TSSLLibSSH2.SSHCheck", "text": "    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#SSHCheck"},
     {"title": "ssl_libssh2.TSSLLibSSH2.DeInit", "text": "    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#DeInit"},
     {"title": "ssl_libssh2.TSSLLibSSH2.Create", "text": "See TCustomSSL.Create    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#Create"},
     {"title": "ssl_libssh2.TSSLLibSSH2.Destroy", "text": "    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#Destroy"},
     {"title": "ssl_libssh2.TSSLLibSSH2.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#LibVersion"},
     {"title": "ssl_libssh2.TSSLLibSSH2.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#LibName"},
     {"title": "ssl_libssh2.TSSLLibSSH2.Connect", "text": "See TCustomSSL.Connect    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#Connect"},
     {"title": "ssl_libssh2.TSSLLibSSH2.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#Shutdown"},
     {"title": "ssl_libssh2.TSSLLibSSH2.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#BiShutdown"},
     {"title": "ssl_libssh2.TSSLLibSSH2.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#SendBuffer"},
     {"title": "ssl_libssh2.TSSLLibSSH2.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#RecvBuffer"},
     {"title": "ssl_libssh2.TSSLLibSSH2.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#WaitingData"},
     {"title": "ssl_libssh2.TSSLLibSSH2.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_libssh2.TSSLLibSSH2.html#GetSSLVersion"},
     {"title": "ssl_openssl", "text": "   ", "tags": "", "url": "ssl_openssl.html"},
     {"title": "ssl_openssl.TSSLOpenSSL", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html"},
     {"title": "ssl_openssl.TSSLOpenSSL.FSsl", "text": "   ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#FSsl"},
     {"title": "ssl_openssl.TSSLOpenSSL.Fctx", "text": "   ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Fctx"},
     {"title": "ssl_openssl.TSSLOpenSSL.NeedSigningCertificate", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#NeedSigningCertificate"},
     {"title": "ssl_openssl.TSSLOpenSSL.SSLCheck", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#SSLCheck"},
     {"title": "ssl_openssl.TSSLOpenSSL.SetSslKeys", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#SetSslKeys"},
     {"title": "ssl_openssl.TSSLOpenSSL.Init", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Init"},
     {"title": "ssl_openssl.TSSLOpenSSL.DeInit", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#DeInit"},
     {"title": "ssl_openssl.TSSLOpenSSL.Prepare", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Prepare"},
     {"title": "ssl_openssl.TSSLOpenSSL.LoadPFX", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#LoadPFX"},
     {"title": "ssl_openssl.TSSLOpenSSL.CreateSelfSignedCert", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#CreateSelfSignedCert"},
     {"title": "ssl_openssl.TSSLOpenSSL.Create", "text": "See TCustomSSL.Create    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Create"},
     {"title": "ssl_openssl.TSSLOpenSSL.Destroy", "text": "    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Destroy"},
     {"title": "ssl_openssl.TSSLOpenSSL.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#LibVersion"},
     {"title": "ssl_openssl.TSSLOpenSSL.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#LibName"},
     {"title": "ssl_openssl.TSSLOpenSSL.Connect", "text": "See TCustomSSL.Connect and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Connect"},
     {"title": "ssl_openssl.TSSLOpenSSL.Accept", "text": "See TCustomSSL.Accept and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Accept"},
     {"title": "ssl_openssl.TSSLOpenSSL.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Shutdown"},
     {"title": "ssl_openssl.TSSLOpenSSL.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#BiShutdown"},
     {"title": "ssl_openssl.TSSLOpenSSL.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#SendBuffer"},
     {"title": "ssl_openssl.TSSLOpenSSL.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#RecvBuffer"},
     {"title": "ssl_openssl.TSSLOpenSSL.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#WaitingData"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetSSLVersion"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetPeerSubject", "text": "See TCustomSSL.GetPeerSubject    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetPeerSubject"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetPeerSerialNo", "text": "See TCustomSSL.GetPeerSerialNo    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetPeerSerialNo"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetPeerIssuer", "text": "See TCustomSSL.GetPeerIssuer    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetPeerIssuer"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetPeerName", "text": "See TCustomSSL.GetPeerName    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetPeerName"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetPeerNameHash", "text": "See TCustomSSL.GetPeerNameHash    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetPeerNameHash"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetPeerFingerprint", "text": "See TCustomSSL.GetPeerFingerprint    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetPeerFingerprint"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetCertInfo", "text": "See TCustomSSL.GetCertInfo    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetCertInfo"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetCipherName", "text": "See TCustomSSL.GetCipherName    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetCipherName"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetCipherBits", "text": "See TCustomSSL.GetCipherBits    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetCipherBits"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetCipherAlgBits", "text": "See TCustomSSL.GetCipherAlgBits    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetCipherAlgBits"},
     {"title": "ssl_openssl.TSSLOpenSSL.GetVerifyCert", "text": "See TCustomSSL.GetVerifyCert    ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#GetVerifyCert"},
     {"title": "ssl_openssl.TSSLOpenSSL.Server", "text": "   ", "tags": "", "url": "ssl_openssl.TSSLOpenSSL.html#Server"},
     {"title": "ssl_openssl11", "text": "   ", "tags": "", "url": "ssl_openssl11.html"},
     {"title": "ssl_openssl11.TSSLOpenSSL", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html"},
     {"title": "ssl_openssl11.TSSLOpenSSL.FSsl", "text": "   ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#FSsl"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Fctx", "text": "   ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Fctx"},
     {"title": "ssl_openssl11.TSSLOpenSSL.SSLCheck", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#SSLCheck"},
     {"title": "ssl_openssl11.TSSLOpenSSL.SetSslKeys", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#SetSslKeys"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Init", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Init"},
     {"title": "ssl_openssl11.TSSLOpenSSL.DeInit", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#DeInit"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Prepare", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Prepare"},
     {"title": "ssl_openssl11.TSSLOpenSSL.LoadPFX", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#LoadPFX"},
     {"title": "ssl_openssl11.TSSLOpenSSL.CreateSelfSignedCert", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#CreateSelfSignedCert"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Create", "text": "See TCustomSSL.Create    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Create"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Destroy", "text": "    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Destroy"},
     {"title": "ssl_openssl11.TSSLOpenSSL.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#LibVersion"},
     {"title": "ssl_openssl11.TSSLOpenSSL.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#LibName"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Connect", "text": "See TCustomSSL.Connect and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Connect"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Accept", "text": "See TCustomSSL.Accept and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Accept"},
     {"title": "ssl_openssl11.TSSLOpenSSL.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#Shutdown"},
     {"title": "ssl_openssl11.TSSLOpenSSL.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#BiShutdown"},
     {"title": "ssl_openssl11.TSSLOpenSSL.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#SendBuffer"},
     {"title": "ssl_openssl11.TSSLOpenSSL.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#RecvBuffer"},
     {"title": "ssl_openssl11.TSSLOpenSSL.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#WaitingData"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetSSLVersion"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetPeerSubject", "text": "See TCustomSSL.GetPeerSubject    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetPeerSubject"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetPeerSerialNo", "text": "See TCustomSSL.GetPeerSerialNo    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetPeerSerialNo"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetPeerIssuer", "text": "See TCustomSSL.GetPeerIssuer    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetPeerIssuer"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetPeerName", "text": "See TCustomSSL.GetPeerName    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetPeerName"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetPeerNameHash", "text": "See TCustomSSL.GetPeerNameHash    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetPeerNameHash"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetPeerFingerprint", "text": "See TCustomSSL.GetPeerFingerprint    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetPeerFingerprint"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetCertInfo", "text": "See TCustomSSL.GetCertInfo    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetCertInfo"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetCipherName", "text": "See TCustomSSL.GetCipherName    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetCipherName"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetCipherBits", "text": "See TCustomSSL.GetCipherBits    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetCipherBits"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetCipherAlgBits", "text": "See TCustomSSL.GetCipherAlgBits    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetCipherAlgBits"},
     {"title": "ssl_openssl11.TSSLOpenSSL.GetVerifyCert", "text": "See TCustomSSL.GetVerifyCert    ", "tags": "", "url": "ssl_openssl11.TSSLOpenSSL.html#GetVerifyCert"},
     {"title": "ssl_openssl11_lib", "text": "  This unit is Pascal interface to OpenSSL library (used by ssl_openssl unit). OpenSSL 1.1 is loaded dynamicly on-demand. If this library is not found in system, requested OpenSSL function just return errorcode.   ", "tags": "", "url": "ssl_openssl11_lib.html"},
     {"title": "ssl_openssl11_lib.des_ks_struct", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.des_ks_struct.html"},
     {"title": "ssl_openssl11_lib.des_ks_struct.ks", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.des_ks_struct.html#ks"},
     {"title": "ssl_openssl11_lib.des_ks_struct.weak_key", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.des_ks_struct.html#weak_key"},
     {"title": "ssl_openssl11_lib.EVP_MAX_MD_SIZE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#EVP_MAX_MD_SIZE"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_NONE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_NONE"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_SSL", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_SSL"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_WANT_READ", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_WANT_READ"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_WANT_WRITE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_WANT_WRITE"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_WANT_X509_LOOKUP", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_WANT_X509_LOOKUP"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_SYSCALL", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_SYSCALL"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_ZERO_RETURN", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_ZERO_RETURN"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_WANT_CONNECT", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_WANT_CONNECT"},
     {"title": "ssl_openssl11_lib.SSL_ERROR_WANT_ACCEPT", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_ERROR_WANT_ACCEPT"},
     {"title": "ssl_openssl11_lib.SSL_OP_NO_SSLv2", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_OP_NO_SSLv2"},
     {"title": "ssl_openssl11_lib.SSL_OP_NO_SSLv3", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_OP_NO_SSLv3"},
     {"title": "ssl_openssl11_lib.SSL_OP_NO_TLSv1", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_OP_NO_TLSv1"},
     {"title": "ssl_openssl11_lib.SSL_OP_ALL", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_OP_ALL"},
     {"title": "ssl_openssl11_lib.SSL_VERIFY_NONE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_VERIFY_NONE"},
     {"title": "ssl_openssl11_lib.SSL_VERIFY_PEER", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_VERIFY_PEER"},
     {"title": "ssl_openssl11_lib.OPENSSL_DES_DECRYPT", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#OPENSSL_DES_DECRYPT"},
     {"title": "ssl_openssl11_lib.OPENSSL_DES_ENCRYPT", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#OPENSSL_DES_ENCRYPT"},
     {"title": "ssl_openssl11_lib.X509_V_OK", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_OK"},
     {"title": "ssl_openssl11_lib.X509_V_ILLEGAL", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ILLEGAL"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_GET_CRL", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_GET_CRL"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_SIGNATURE_FAILURE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_SIGNATURE_FAILURE"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CRL_SIGNATURE_FAILURE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CRL_SIGNATURE_FAILURE"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_NOT_YET_VALID", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_NOT_YET_VALID"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_HAS_EXPIRED", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_HAS_EXPIRED"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CRL_NOT_YET_VALID", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CRL_NOT_YET_VALID"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CRL_HAS_EXPIRED", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CRL_HAS_EXPIRED"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_OUT_OF_MEM", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_OUT_OF_MEM"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_CHAIN_TOO_LONG", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_CHAIN_TOO_LONG"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_REVOKED", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_REVOKED"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_INVALID_CA", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_INVALID_CA"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_PATH_LENGTH_EXCEEDED", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_PATH_LENGTH_EXCEEDED"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_INVALID_PURPOSE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_INVALID_PURPOSE"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_UNTRUSTED", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_UNTRUSTED"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_CERT_REJECTED", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_CERT_REJECTED"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_SUBJECT_ISSUER_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_SUBJECT_ISSUER_MISMATCH"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_AKID_SKID_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_AKID_SKID_MISMATCH"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_KEYUSAGE_NO_CERTSIGN", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_KEYUSAGE_NO_CERTSIGN"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION"},
     {"title": "ssl_openssl11_lib.X509_V_ERR_APPLICATION_VERIFICATION", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#X509_V_ERR_APPLICATION_VERIFICATION"},
     {"title": "ssl_openssl11_lib.SSL_FILETYPE_ASN1", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_FILETYPE_ASN1"},
     {"title": "ssl_openssl11_lib.SSL_FILETYPE_PEM", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_FILETYPE_PEM"},
     {"title": "ssl_openssl11_lib.EVP_PKEY_RSA", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#EVP_PKEY_RSA"},
     {"title": "ssl_openssl11_lib.SSL_CTRL_SET_TLSEXT_HOSTNAME", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_CTRL_SET_TLSEXT_HOSTNAME"},
     {"title": "ssl_openssl11_lib.TLSEXT_NAMETYPE_host_name", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#TLSEXT_NAMETYPE_host_name"},
     {"title": "ssl_openssl11_lib.TLS1_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#TLS1_VERSION"},
     {"title": "ssl_openssl11_lib.TLS1_1_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#TLS1_1_VERSION"},
     {"title": "ssl_openssl11_lib.TLS1_2_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#TLS1_2_VERSION"},
     {"title": "ssl_openssl11_lib.TLS1_3_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#TLS1_3_VERSION"},
     {"title": "ssl_openssl11_lib.SslGetError", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslGetError"},
     {"title": "ssl_openssl11_lib.SslCtxSetCipherList", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxSetCipherList"},
     {"title": "ssl_openssl11_lib.SslCtxNew", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxNew"},
     {"title": "ssl_openssl11_lib.SslCtxFree", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxFree"},
     {"title": "ssl_openssl11_lib.SslSetFd", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslSetFd"},
     {"title": "ssl_openssl11_lib.SslMethodTLS", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslMethodTLS"},
     {"title": "ssl_openssl11_lib.SslCtxUsePrivateKey", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUsePrivateKey"},
     {"title": "ssl_openssl11_lib.SslCtxUsePrivateKeyASN1", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUsePrivateKeyASN1"},
     {"title": "ssl_openssl11_lib.SslCtxUsePrivateKeyFile", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUsePrivateKeyFile"},
     {"title": "ssl_openssl11_lib.SslCtxUseCertificate", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUseCertificate"},
     {"title": "ssl_openssl11_lib.SslCtxUseCertificateASN1", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUseCertificateASN1"},
     {"title": "ssl_openssl11_lib.SslCtxUseCertificateFile", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUseCertificateFile"},
     {"title": "ssl_openssl11_lib.SslCtxUseCertificateChainFile", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxUseCertificateChainFile"},
     {"title": "ssl_openssl11_lib.SslCtxCheckPrivateKeyFile", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxCheckPrivateKeyFile"},
     {"title": "ssl_openssl11_lib.SslCtxSetDefaultPasswdCb", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxSetDefaultPasswdCb"},
     {"title": "ssl_openssl11_lib.SslCtxSetDefaultPasswdCbUserdata", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxSetDefaultPasswdCbUserdata"},
     {"title": "ssl_openssl11_lib.SslCtxLoadVerifyLocations", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxLoadVerifyLocations"},
     {"title": "ssl_openssl11_lib.SslCtxCtrl", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxCtrl"},
     {"title": "ssl_openssl11_lib.SslCtxSetMinProtoVersion", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxSetMinProtoVersion"},
     {"title": "ssl_openssl11_lib.SslCtxSetMaxProtoVersion", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxSetMaxProtoVersion"},
     {"title": "ssl_openssl11_lib.SslNew", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslNew"},
     {"title": "ssl_openssl11_lib.SslFree", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslFree"},
     {"title": "ssl_openssl11_lib.SslAccept", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslAccept"},
     {"title": "ssl_openssl11_lib.SslConnect", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslConnect"},
     {"title": "ssl_openssl11_lib.SslShutdown", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslShutdown"},
     {"title": "ssl_openssl11_lib.SslRead", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslRead"},
     {"title": "ssl_openssl11_lib.SslPeek", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslPeek"},
     {"title": "ssl_openssl11_lib.SslWrite", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslWrite"},
     {"title": "ssl_openssl11_lib.SslPending", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslPending"},
     {"title": "ssl_openssl11_lib.SslGetVersion", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslGetVersion"},
     {"title": "ssl_openssl11_lib.SslGetPeerCertificate", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslGetPeerCertificate"},
     {"title": "ssl_openssl11_lib.SslCtxSetVerify", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslCtxSetVerify"},
     {"title": "ssl_openssl11_lib.SSLGetCurrentCipher", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SSLGetCurrentCipher"},
     {"title": "ssl_openssl11_lib.SSLCipherGetName", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SSLCipherGetName"},
     {"title": "ssl_openssl11_lib.SSLCipherGetBits", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SSLCipherGetBits"},
     {"title": "ssl_openssl11_lib.SSLGetVerifyResult", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SSLGetVerifyResult"},
     {"title": "ssl_openssl11_lib.SSLCtrl", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SSLCtrl"},
     {"title": "ssl_openssl11_lib.SslSet1Host", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SslSet1Host"},
     {"title": "ssl_openssl11_lib.X509New", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509New"},
     {"title": "ssl_openssl11_lib.X509Free", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509Free"},
     {"title": "ssl_openssl11_lib.X509NameOneline", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509NameOneline"},
     {"title": "ssl_openssl11_lib.X509GetSubjectName", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509GetSubjectName"},
     {"title": "ssl_openssl11_lib.X509GetIssuerName", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509GetIssuerName"},
     {"title": "ssl_openssl11_lib.X509NameHash", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509NameHash"},
     {"title": "ssl_openssl11_lib.X509Digest", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509Digest"},
     {"title": "ssl_openssl11_lib.X509print", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509print"},
     {"title": "ssl_openssl11_lib.X509SetVersion", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509SetVersion"},
     {"title": "ssl_openssl11_lib.X509SetPubkey", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509SetPubkey"},
     {"title": "ssl_openssl11_lib.X509SetIssuerName", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509SetIssuerName"},
     {"title": "ssl_openssl11_lib.X509NameAddEntryByTxt", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509NameAddEntryByTxt"},
     {"title": "ssl_openssl11_lib.X509Sign", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509Sign"},
     {"title": "ssl_openssl11_lib.X509GmtimeAdj", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509GmtimeAdj"},
     {"title": "ssl_openssl11_lib.X509SetNotBefore", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509SetNotBefore"},
     {"title": "ssl_openssl11_lib.X509SetNotAfter", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509SetNotAfter"},
     {"title": "ssl_openssl11_lib.X509GetSerialNumber", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509GetSerialNumber"},
     {"title": "ssl_openssl11_lib.EvpPkeyNew", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#EvpPkeyNew"},
     {"title": "ssl_openssl11_lib.EvpPkeyFree", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#EvpPkeyFree"},
     {"title": "ssl_openssl11_lib.EvpPkeyAssign", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#EvpPkeyAssign"},
     {"title": "ssl_openssl11_lib.EvpGetDigestByName", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#EvpGetDigestByName"},
     {"title": "ssl_openssl11_lib.OpenSSLversion", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#OpenSSLversion"},
     {"title": "ssl_openssl11_lib.ErrErrorString", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#ErrErrorString"},
     {"title": "ssl_openssl11_lib.ErrGetError", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#ErrGetError"},
     {"title": "ssl_openssl11_lib.ErrClearError", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#ErrClearError"},
     {"title": "ssl_openssl11_lib.BioNew", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#BioNew"},
     {"title": "ssl_openssl11_lib.BioFreeAll", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#BioFreeAll"},
     {"title": "ssl_openssl11_lib.BioSMem", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#BioSMem"},
     {"title": "ssl_openssl11_lib.BioCtrlPending", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#BioCtrlPending"},
     {"title": "ssl_openssl11_lib.BioRead", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#BioRead"},
     {"title": "ssl_openssl11_lib.BioWrite", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#BioWrite"},
     {"title": "ssl_openssl11_lib.d2iPKCS12bio", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#d2iPKCS12bio"},
     {"title": "ssl_openssl11_lib.PKCS12parse", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#PKCS12parse"},
     {"title": "ssl_openssl11_lib.PKCS12free", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#PKCS12free"},
     {"title": "ssl_openssl11_lib.RsaGenerateKey", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#RsaGenerateKey"},
     {"title": "ssl_openssl11_lib.Asn1UtctimeNew", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#Asn1UtctimeNew"},
     {"title": "ssl_openssl11_lib.Asn1UtctimeFree", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#Asn1UtctimeFree"},
     {"title": "ssl_openssl11_lib.Asn1IntegerSet", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#Asn1IntegerSet"},
     {"title": "ssl_openssl11_lib.Asn1IntegerGet", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#Asn1IntegerGet"},
     {"title": "ssl_openssl11_lib.i2dX509bio", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#i2dX509bio"},
     {"title": "ssl_openssl11_lib.d2iX509bio", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#d2iX509bio"},
     {"title": "ssl_openssl11_lib.PEMReadBioX509", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#PEMReadBioX509"},
     {"title": "ssl_openssl11_lib.SkX509PopFree", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SkX509PopFree"},
     {"title": "ssl_openssl11_lib.OPENSSL_sk_num", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#OPENSSL_sk_num"},
     {"title": "ssl_openssl11_lib.OPENSSL_sk_value", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#OPENSSL_sk_value"},
     {"title": "ssl_openssl11_lib.X509_STORE_add_cert", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#X509_STORE_add_cert"},
     {"title": "ssl_openssl11_lib.SSL_CTX_get_cert_store", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#SSL_CTX_get_cert_store"},
     {"title": "ssl_openssl11_lib.i2dPrivateKeyBio", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#i2dPrivateKeyBio"},
     {"title": "ssl_openssl11_lib.DESsetoddparity", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#DESsetoddparity"},
     {"title": "ssl_openssl11_lib.DESsetkeychecked", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#DESsetkeychecked"},
     {"title": "ssl_openssl11_lib.DESecbencrypt", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#DESecbencrypt"},
     {"title": "ssl_openssl11_lib.IsSSLloaded", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#IsSSLloaded"},
     {"title": "ssl_openssl11_lib.InitSSLInterface", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#InitSSLInterface"},
     {"title": "ssl_openssl11_lib.DestroySSLInterface", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#DestroySSLInterface"},
     {"title": "ssl_openssl11_lib.SslPtr", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SslPtr"},
     {"title": "ssl_openssl11_lib.PSslPtr", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PSslPtr"},
     {"title": "ssl_openssl11_lib.PSSL_CTX", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PSSL_CTX"},
     {"title": "ssl_openssl11_lib.PSSL", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PSSL"},
     {"title": "ssl_openssl11_lib.PSSL_METHOD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PSSL_METHOD"},
     {"title": "ssl_openssl11_lib.PX509", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PX509"},
     {"title": "ssl_openssl11_lib.PX509_NAME", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PX509_NAME"},
     {"title": "ssl_openssl11_lib.PX509_STORE", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PX509_STORE"},
     {"title": "ssl_openssl11_lib.PEVP_MD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PEVP_MD"},
     {"title": "ssl_openssl11_lib.PInteger", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PInteger"},
     {"title": "ssl_openssl11_lib.PBIO_METHOD", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PBIO_METHOD"},
     {"title": "ssl_openssl11_lib.PBIO", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PBIO"},
     {"title": "ssl_openssl11_lib.EVP_PKEY", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#EVP_PKEY"},
     {"title": "ssl_openssl11_lib.PRSA", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PRSA"},
     {"title": "ssl_openssl11_lib.PASN1_UTCTIME", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PASN1_UTCTIME"},
     {"title": "ssl_openssl11_lib.PASN1_INTEGER", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PASN1_INTEGER"},
     {"title": "ssl_openssl11_lib.PPasswdCb", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PPasswdCb"},
     {"title": "ssl_openssl11_lib.PFunction", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#PFunction"},
     {"title": "ssl_openssl11_lib.PSTACK", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PSTACK"},
     {"title": "ssl_openssl11_lib.TSkPopFreeFunc", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#TSkPopFreeFunc"},
     {"title": "ssl_openssl11_lib.TX509Free", "text": "    ", "tags": "", "url": "ssl_openssl11_lib.html#TX509Free"},
     {"title": "ssl_openssl11_lib.DES_cblock", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#DES_cblock"},
     {"title": "ssl_openssl11_lib.PDES_cblock", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#PDES_cblock"},
     {"title": "ssl_openssl11_lib.des_key_schedule", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#des_key_schedule"},
     {"title": "ssl_openssl11_lib.DLLSSLName", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#DLLSSLName"},
     {"title": "ssl_openssl11_lib.DLLUtilName", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#DLLUtilName"},
     {"title": "ssl_openssl11_lib.SSLLibHandle", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSLLibHandle"},
     {"title": "ssl_openssl11_lib.SSLUtilHandle", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSLUtilHandle"},
     {"title": "ssl_openssl11_lib.SSLLibFile", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSLLibFile"},
     {"title": "ssl_openssl11_lib.SSLUtilFile", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#SSLUtilFile"},
     {"title": "ssl_openssl11_lib._X509Free", "text": "   ", "tags": "", "url": "ssl_openssl11_lib.html#_X509Free"},
     {"title": "ssl_openssl3", "text": "   ", "tags": "", "url": "ssl_openssl3.html"},
     {"title": "ssl_openssl3.TSSLOpenSSL3", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.FSsl", "text": "   ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#FSsl"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Fctx", "text": "   ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Fctx"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.SSLCheck", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#SSLCheck"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.SetSslKeys", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#SetSslKeys"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Init", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Init"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.DeInit", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#DeInit"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Prepare", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Prepare"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.LoadPFX", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#LoadPFX"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.CreateSelfSignedCert", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#CreateSelfSignedCert"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Create", "text": "See TCustomSSL.Create    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Create"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Destroy", "text": "    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Destroy"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#LibVersion"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#LibName"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Connect", "text": "See TCustomSSL.Connect and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Connect"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Accept", "text": "See TCustomSSL.Accept and ssl_cryptlib for more details.    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Accept"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#Shutdown"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#BiShutdown"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#SendBuffer"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#RecvBuffer"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#WaitingData"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetSSLVersion"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetPeerSubject", "text": "See TCustomSSL.GetPeerSubject    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetPeerSubject"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetPeerSerialNo", "text": "See TCustomSSL.GetPeerSerialNo    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetPeerSerialNo"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetPeerIssuer", "text": "See TCustomSSL.GetPeerIssuer    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetPeerIssuer"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetPeerName", "text": "See TCustomSSL.GetPeerName    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetPeerName"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetPeerNameHash", "text": "See TCustomSSL.GetPeerNameHash    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetPeerNameHash"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetPeerFingerprint", "text": "See TCustomSSL.GetPeerFingerprint    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetPeerFingerprint"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetCertInfo", "text": "See TCustomSSL.GetCertInfo    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetCertInfo"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetCipherName", "text": "See TCustomSSL.GetCipherName    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetCipherName"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetCipherBits", "text": "See TCustomSSL.GetCipherBits    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetCipherBits"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetCipherAlgBits", "text": "See TCustomSSL.GetCipherAlgBits    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetCipherAlgBits"},
     {"title": "ssl_openssl3.TSSLOpenSSL3.GetVerifyCert", "text": "See TCustomSSL.GetVerifyCert    ", "tags": "", "url": "ssl_openssl3.TSSLOpenSSL3.html#GetVerifyCert"},
     {"title": "ssl_openssl3_lib", "text": "  This unit is Pascal interface to OpenSSL library (used by ssl_openssl unit). OpenSSL 3.0 is loaded dynamicly on-demand. If this library is not found in system, requested OpenSSL function just return errorcode.   ", "tags": "", "url": "ssl_openssl3_lib.html"},
     {"title": "ssl_openssl3_lib.des_ks_struct", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.des_ks_struct.html"},
     {"title": "ssl_openssl3_lib.des_ks_struct.ks", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.des_ks_struct.html#ks"},
     {"title": "ssl_openssl3_lib.des_ks_struct.weak_key", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.des_ks_struct.html#weak_key"},
     {"title": "ssl_openssl3_lib.EVP_MAX_MD_SIZE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#EVP_MAX_MD_SIZE"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_NONE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_NONE"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_SSL", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_SSL"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_WANT_READ", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_WANT_READ"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_WANT_WRITE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_WANT_WRITE"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_WANT_X509_LOOKUP", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_WANT_X509_LOOKUP"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_SYSCALL", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_SYSCALL"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_ZERO_RETURN", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_ZERO_RETURN"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_WANT_CONNECT", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_WANT_CONNECT"},
     {"title": "ssl_openssl3_lib.SSL_ERROR_WANT_ACCEPT", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_ERROR_WANT_ACCEPT"},
     {"title": "ssl_openssl3_lib.SSL_OP_NO_SSLv2", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_OP_NO_SSLv2"},
     {"title": "ssl_openssl3_lib.SSL_OP_NO_SSLv3", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_OP_NO_SSLv3"},
     {"title": "ssl_openssl3_lib.SSL_OP_NO_TLSv1", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_OP_NO_TLSv1"},
     {"title": "ssl_openssl3_lib.SSL_OP_ALL", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_OP_ALL"},
     {"title": "ssl_openssl3_lib.SSL_VERIFY_NONE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_VERIFY_NONE"},
     {"title": "ssl_openssl3_lib.SSL_VERIFY_PEER", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_VERIFY_PEER"},
     {"title": "ssl_openssl3_lib.OPENSSL_DES_DECRYPT", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#OPENSSL_DES_DECRYPT"},
     {"title": "ssl_openssl3_lib.OPENSSL_DES_ENCRYPT", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#OPENSSL_DES_ENCRYPT"},
     {"title": "ssl_openssl3_lib.X509_V_OK", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_OK"},
     {"title": "ssl_openssl3_lib.X509_V_ILLEGAL", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ILLEGAL"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_GET_CRL", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_GET_CRL"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_SIGNATURE_FAILURE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_SIGNATURE_FAILURE"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CRL_SIGNATURE_FAILURE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CRL_SIGNATURE_FAILURE"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_NOT_YET_VALID", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_NOT_YET_VALID"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_HAS_EXPIRED", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_HAS_EXPIRED"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CRL_NOT_YET_VALID", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CRL_NOT_YET_VALID"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CRL_HAS_EXPIRED", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CRL_HAS_EXPIRED"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_OUT_OF_MEM", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_OUT_OF_MEM"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_CHAIN_TOO_LONG", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_CHAIN_TOO_LONG"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_REVOKED", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_REVOKED"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_INVALID_CA", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_INVALID_CA"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_PATH_LENGTH_EXCEEDED", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_PATH_LENGTH_EXCEEDED"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_INVALID_PURPOSE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_INVALID_PURPOSE"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_UNTRUSTED", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_UNTRUSTED"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_CERT_REJECTED", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_CERT_REJECTED"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_SUBJECT_ISSUER_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_SUBJECT_ISSUER_MISMATCH"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_AKID_SKID_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_AKID_SKID_MISMATCH"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_KEYUSAGE_NO_CERTSIGN", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_KEYUSAGE_NO_CERTSIGN"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION"},
     {"title": "ssl_openssl3_lib.X509_V_ERR_APPLICATION_VERIFICATION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#X509_V_ERR_APPLICATION_VERIFICATION"},
     {"title": "ssl_openssl3_lib.SSL_FILETYPE_ASN1", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_FILETYPE_ASN1"},
     {"title": "ssl_openssl3_lib.SSL_FILETYPE_PEM", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_FILETYPE_PEM"},
     {"title": "ssl_openssl3_lib.EVP_PKEY_RSA", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#EVP_PKEY_RSA"},
     {"title": "ssl_openssl3_lib.SSL_CTRL_SET_TLSEXT_HOSTNAME", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_CTRL_SET_TLSEXT_HOSTNAME"},
     {"title": "ssl_openssl3_lib.SSL_CTRL_SET_MIN_PROTO_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_CTRL_SET_MIN_PROTO_VERSION"},
     {"title": "ssl_openssl3_lib.SSL_CTRL_SET_MAX_PROTO_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_CTRL_SET_MAX_PROTO_VERSION"},
     {"title": "ssl_openssl3_lib.TLSEXT_NAMETYPE_host_name", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#TLSEXT_NAMETYPE_host_name"},
     {"title": "ssl_openssl3_lib.TLS1_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#TLS1_VERSION"},
     {"title": "ssl_openssl3_lib.TLS1_1_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#TLS1_1_VERSION"},
     {"title": "ssl_openssl3_lib.TLS1_2_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#TLS1_2_VERSION"},
     {"title": "ssl_openssl3_lib.TLS1_3_VERSION", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#TLS1_3_VERSION"},
     {"title": "ssl_openssl3_lib.SslGetError", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslGetError"},
     {"title": "ssl_openssl3_lib.SslCtxSetCipherList", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxSetCipherList"},
     {"title": "ssl_openssl3_lib.SslCtxNew", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxNew"},
     {"title": "ssl_openssl3_lib.SslCtxFree", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxFree"},
     {"title": "ssl_openssl3_lib.SslSetFd", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslSetFd"},
     {"title": "ssl_openssl3_lib.SslMethodTLS", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslMethodTLS"},
     {"title": "ssl_openssl3_lib.SslCtxUsePrivateKey", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUsePrivateKey"},
     {"title": "ssl_openssl3_lib.SslCtxUsePrivateKeyASN1", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUsePrivateKeyASN1"},
     {"title": "ssl_openssl3_lib.SslCtxUsePrivateKeyFile", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUsePrivateKeyFile"},
     {"title": "ssl_openssl3_lib.SslCtxUseCertificate", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUseCertificate"},
     {"title": "ssl_openssl3_lib.SslCtxUseCertificateASN1", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUseCertificateASN1"},
     {"title": "ssl_openssl3_lib.SslCtxUseCertificateFile", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUseCertificateFile"},
     {"title": "ssl_openssl3_lib.SslCtxUseCertificateChainFile", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxUseCertificateChainFile"},
     {"title": "ssl_openssl3_lib.SslCtxCheckPrivateKeyFile", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxCheckPrivateKeyFile"},
     {"title": "ssl_openssl3_lib.SslCtxSetDefaultPasswdCb", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxSetDefaultPasswdCb"},
     {"title": "ssl_openssl3_lib.SslCtxSetDefaultPasswdCbUserdata", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxSetDefaultPasswdCbUserdata"},
     {"title": "ssl_openssl3_lib.SslCtxLoadVerifyLocations", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxLoadVerifyLocations"},
     {"title": "ssl_openssl3_lib.SslCtxCtrl", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxCtrl"},
     {"title": "ssl_openssl3_lib.SslNew", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslNew"},
     {"title": "ssl_openssl3_lib.SslFree", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslFree"},
     {"title": "ssl_openssl3_lib.SslAccept", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslAccept"},
     {"title": "ssl_openssl3_lib.SslConnect", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslConnect"},
     {"title": "ssl_openssl3_lib.SslShutdown", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslShutdown"},
     {"title": "ssl_openssl3_lib.SslRead", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslRead"},
     {"title": "ssl_openssl3_lib.SslPeek", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslPeek"},
     {"title": "ssl_openssl3_lib.SslWrite", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslWrite"},
     {"title": "ssl_openssl3_lib.SslPending", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslPending"},
     {"title": "ssl_openssl3_lib.SslGetVersion", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslGetVersion"},
     {"title": "ssl_openssl3_lib.SslGetPeerCertificate", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslGetPeerCertificate"},
     {"title": "ssl_openssl3_lib.SslCtxSetVerify", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslCtxSetVerify"},
     {"title": "ssl_openssl3_lib.SSLGetCurrentCipher", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SSLGetCurrentCipher"},
     {"title": "ssl_openssl3_lib.SSLCipherGetName", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SSLCipherGetName"},
     {"title": "ssl_openssl3_lib.SSLCipherGetBits", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SSLCipherGetBits"},
     {"title": "ssl_openssl3_lib.SSLGetVerifyResult", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SSLGetVerifyResult"},
     {"title": "ssl_openssl3_lib.SSLCtrl", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SSLCtrl"},
     {"title": "ssl_openssl3_lib.SslSet1Host", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SslSet1Host"},
     {"title": "ssl_openssl3_lib.X509New", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509New"},
     {"title": "ssl_openssl3_lib.X509Free", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509Free"},
     {"title": "ssl_openssl3_lib.X509NameOneline", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509NameOneline"},
     {"title": "ssl_openssl3_lib.X509GetSubjectName", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509GetSubjectName"},
     {"title": "ssl_openssl3_lib.X509GetIssuerName", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509GetIssuerName"},
     {"title": "ssl_openssl3_lib.X509NameHash", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509NameHash"},
     {"title": "ssl_openssl3_lib.X509Digest", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509Digest"},
     {"title": "ssl_openssl3_lib.X509print", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509print"},
     {"title": "ssl_openssl3_lib.X509SetVersion", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509SetVersion"},
     {"title": "ssl_openssl3_lib.X509SetPubkey", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509SetPubkey"},
     {"title": "ssl_openssl3_lib.X509SetIssuerName", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509SetIssuerName"},
     {"title": "ssl_openssl3_lib.X509NameAddEntryByTxt", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509NameAddEntryByTxt"},
     {"title": "ssl_openssl3_lib.X509Sign", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509Sign"},
     {"title": "ssl_openssl3_lib.X509GmtimeAdj", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509GmtimeAdj"},
     {"title": "ssl_openssl3_lib.X509SetNotBefore", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509SetNotBefore"},
     {"title": "ssl_openssl3_lib.X509SetNotAfter", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509SetNotAfter"},
     {"title": "ssl_openssl3_lib.X509GetSerialNumber", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509GetSerialNumber"},
     {"title": "ssl_openssl3_lib.EvpPkeyNew", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#EvpPkeyNew"},
     {"title": "ssl_openssl3_lib.EvpPkeyFree", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#EvpPkeyFree"},
     {"title": "ssl_openssl3_lib.EvpPkeyAssign", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#EvpPkeyAssign"},
     {"title": "ssl_openssl3_lib.EvpGetDigestByName", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#EvpGetDigestByName"},
     {"title": "ssl_openssl3_lib.OpenSSLversion", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#OpenSSLversion"},
     {"title": "ssl_openssl3_lib.ErrErrorString", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#ErrErrorString"},
     {"title": "ssl_openssl3_lib.ErrGetError", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#ErrGetError"},
     {"title": "ssl_openssl3_lib.ErrClearError", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#ErrClearError"},
     {"title": "ssl_openssl3_lib.BioNew", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#BioNew"},
     {"title": "ssl_openssl3_lib.BioFreeAll", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#BioFreeAll"},
     {"title": "ssl_openssl3_lib.BioSMem", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#BioSMem"},
     {"title": "ssl_openssl3_lib.BioCtrlPending", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#BioCtrlPending"},
     {"title": "ssl_openssl3_lib.BioRead", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#BioRead"},
     {"title": "ssl_openssl3_lib.BioWrite", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#BioWrite"},
     {"title": "ssl_openssl3_lib.d2iPKCS12bio", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#d2iPKCS12bio"},
     {"title": "ssl_openssl3_lib.PKCS12parse", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#PKCS12parse"},
     {"title": "ssl_openssl3_lib.PKCS12free", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#PKCS12free"},
     {"title": "ssl_openssl3_lib.RsaGenerateKey", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#RsaGenerateKey"},
     {"title": "ssl_openssl3_lib.Asn1UtctimeNew", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#Asn1UtctimeNew"},
     {"title": "ssl_openssl3_lib.Asn1UtctimeFree", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#Asn1UtctimeFree"},
     {"title": "ssl_openssl3_lib.Asn1IntegerSet", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#Asn1IntegerSet"},
     {"title": "ssl_openssl3_lib.Asn1IntegerGet", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#Asn1IntegerGet"},
     {"title": "ssl_openssl3_lib.i2dX509bio", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#i2dX509bio"},
     {"title": "ssl_openssl3_lib.d2iX509bio", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#d2iX509bio"},
     {"title": "ssl_openssl3_lib.PEMReadBioX509", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#PEMReadBioX509"},
     {"title": "ssl_openssl3_lib.SkX509PopFree", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SkX509PopFree"},
     {"title": "ssl_openssl3_lib.OPENSSL_sk_num", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#OPENSSL_sk_num"},
     {"title": "ssl_openssl3_lib.OPENSSL_sk_value", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#OPENSSL_sk_value"},
     {"title": "ssl_openssl3_lib.X509_STORE_add_cert", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#X509_STORE_add_cert"},
     {"title": "ssl_openssl3_lib.SSL_CTX_get_cert_store", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#SSL_CTX_get_cert_store"},
     {"title": "ssl_openssl3_lib.i2dPrivateKeyBio", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#i2dPrivateKeyBio"},
     {"title": "ssl_openssl3_lib.DESsetoddparity", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#DESsetoddparity"},
     {"title": "ssl_openssl3_lib.DESsetkeychecked", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#DESsetkeychecked"},
     {"title": "ssl_openssl3_lib.DESecbencrypt", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#DESecbencrypt"},
     {"title": "ssl_openssl3_lib.IsSSLloaded", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#IsSSLloaded"},
     {"title": "ssl_openssl3_lib.InitSSLInterface", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#InitSSLInterface"},
     {"title": "ssl_openssl3_lib.DestroySSLInterface", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#DestroySSLInterface"},
     {"title": "ssl_openssl3_lib.SslPtr", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SslPtr"},
     {"title": "ssl_openssl3_lib.PSslPtr", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PSslPtr"},
     {"title": "ssl_openssl3_lib.PSSL_CTX", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PSSL_CTX"},
     {"title": "ssl_openssl3_lib.PSSL", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PSSL"},
     {"title": "ssl_openssl3_lib.PSSL_METHOD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PSSL_METHOD"},
     {"title": "ssl_openssl3_lib.PX509", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PX509"},
     {"title": "ssl_openssl3_lib.PX509_NAME", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PX509_NAME"},
     {"title": "ssl_openssl3_lib.PX509_STORE", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PX509_STORE"},
     {"title": "ssl_openssl3_lib.PEVP_MD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PEVP_MD"},
     {"title": "ssl_openssl3_lib.PInteger", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PInteger"},
     {"title": "ssl_openssl3_lib.PBIO_METHOD", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PBIO_METHOD"},
     {"title": "ssl_openssl3_lib.PBIO", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PBIO"},
     {"title": "ssl_openssl3_lib.EVP_PKEY", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#EVP_PKEY"},
     {"title": "ssl_openssl3_lib.PRSA", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PRSA"},
     {"title": "ssl_openssl3_lib.PASN1_UTCTIME", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PASN1_UTCTIME"},
     {"title": "ssl_openssl3_lib.PASN1_INTEGER", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PASN1_INTEGER"},
     {"title": "ssl_openssl3_lib.PPasswdCb", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PPasswdCb"},
     {"title": "ssl_openssl3_lib.PFunction", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#PFunction"},
     {"title": "ssl_openssl3_lib.PSTACK", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PSTACK"},
     {"title": "ssl_openssl3_lib.TSkPopFreeFunc", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#TSkPopFreeFunc"},
     {"title": "ssl_openssl3_lib.TX509Free", "text": "    ", "tags": "", "url": "ssl_openssl3_lib.html#TX509Free"},
     {"title": "ssl_openssl3_lib.DES_cblock", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#DES_cblock"},
     {"title": "ssl_openssl3_lib.PDES_cblock", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#PDES_cblock"},
     {"title": "ssl_openssl3_lib.des_key_schedule", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#des_key_schedule"},
     {"title": "ssl_openssl3_lib.DLLSSLName", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#DLLSSLName"},
     {"title": "ssl_openssl3_lib.DLLUtilName", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#DLLUtilName"},
     {"title": "ssl_openssl3_lib.SSLLibHandle", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSLLibHandle"},
     {"title": "ssl_openssl3_lib.SSLUtilHandle", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSLUtilHandle"},
     {"title": "ssl_openssl3_lib.SSLLibFile", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSLLibFile"},
     {"title": "ssl_openssl3_lib.SSLUtilFile", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#SSLUtilFile"},
     {"title": "ssl_openssl3_lib._X509Free", "text": "   ", "tags": "", "url": "ssl_openssl3_lib.html#_X509Free"},
     {"title": "ssl_openssl_capi", "text": "   ", "tags": "", "url": "ssl_openssl_capi.html"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.LoadSigningCertificate", "text": "Loads a certificate context into the CAPI engine for signing/decryption.    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#LoadSigningCertificate"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.SetSslKeys", "text": "See TSSLOpenSSL.SetSslKeys    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#SetSslKeys"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.NeedSigningCertificate", "text": "See TSSLOpenSSL.NeedSigningCertificate    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#NeedSigningCertificate"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.SigningCertificateSpecified", "text": "Returns true if the signing certificate should be used.    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#SigningCertificateSpecified"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.Create", "text": "See TSSLOpenSSL.Create    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#Create"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.Destroy", "text": "See TSSLOpenSSL.Destroy    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#Destroy"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.Assign", "text": "See TCustomSSL.Assign    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#Assign"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.InitEngine", "text": "Use this function to load the CAPI engine and/or verify that the engine is available. The plugin will load CAPI itself when it is needed, so you may skip this function completely, but it may be useful to perform a manual CAPI load early during the application startup to make sure all connection use the same cryptographic engine (and, as a result, behave the same way).    ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#InitEngine"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.Engine", "text": "Provides a cryptographic engine for OpenSSL   ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#Engine"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.SigningCertificateLocation", "text": "Location of the certificate store used for the communication.   ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#SigningCertificateLocation"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.SigningCertificateStore", "text": "Certificate store used for the communication. The most common is &quot;MY&quot;, or the user's private certificates.   ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#SigningCertificateStore"},
     {"title": "ssl_openssl_capi.TSSLOpenSSLCapi.SigningCertificateID", "text": "ID of the certificate to use. For standard CAPI, this is the friendly name of the certificate. For the client-side SSL it is not really necessary, as long as it is non-empty (which signifies that the CAPI engine should be used). For the server side, it must be a substring of the SubjectName of the certificate. The first matching certificate will be used.   ", "tags": "", "url": "ssl_openssl_capi.TSSLOpenSSLCapi.html#SigningCertificateID"},
     {"title": "ssl_openssl_capi.PENGINE", "text": "   ", "tags": "", "url": "ssl_openssl_capi.html#PENGINE"},
     {"title": "ssl_openssl_capi.TWindowsCertStoreLocation", "text": "    wcslCurrentUser    wcslCurrentUserGroupPolicy    wcslUsers    wcslCurrentService    wcslServices    wcslLocalMachine    wcslLocalMachineGroupPolicy    wcslLocalMachineEnterprise   ", "tags": "", "url": "ssl_openssl_capi.html#TWindowsCertStoreLocation"},
     {"title": "ssl_openssl_lib", "text": "  This unit is Pascal interface to OpenSSL library (used by ssl_openssl unit). OpenSSL is loaded dynamicly on-demand. If this library is not found in system, requested OpenSSL function just return errorcode.   ", "tags": "", "url": "ssl_openssl_lib.html"},
     {"title": "ssl_openssl_lib.des_ks_struct", "text": "   ", "tags": "", "url": "ssl_openssl_lib.des_ks_struct.html"},
     {"title": "ssl_openssl_lib.des_ks_struct.ks", "text": "   ", "tags": "", "url": "ssl_openssl_lib.des_ks_struct.html#ks"},
     {"title": "ssl_openssl_lib.des_ks_struct.weak_key", "text": "   ", "tags": "", "url": "ssl_openssl_lib.des_ks_struct.html#weak_key"},
     {"title": "ssl_openssl_lib.EVP_MAX_MD_SIZE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#EVP_MAX_MD_SIZE"},
     {"title": "ssl_openssl_lib.SSL_ERROR_NONE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_NONE"},
     {"title": "ssl_openssl_lib.SSL_ERROR_SSL", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_SSL"},
     {"title": "ssl_openssl_lib.SSL_ERROR_WANT_READ", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_WANT_READ"},
     {"title": "ssl_openssl_lib.SSL_ERROR_WANT_WRITE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_WANT_WRITE"},
     {"title": "ssl_openssl_lib.SSL_ERROR_WANT_X509_LOOKUP", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_WANT_X509_LOOKUP"},
     {"title": "ssl_openssl_lib.SSL_ERROR_SYSCALL", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_SYSCALL"},
     {"title": "ssl_openssl_lib.SSL_ERROR_ZERO_RETURN", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_ZERO_RETURN"},
     {"title": "ssl_openssl_lib.SSL_ERROR_WANT_CONNECT", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_WANT_CONNECT"},
     {"title": "ssl_openssl_lib.SSL_ERROR_WANT_ACCEPT", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_ERROR_WANT_ACCEPT"},
     {"title": "ssl_openssl_lib.SSL_OP_NO_SSLv2", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_OP_NO_SSLv2"},
     {"title": "ssl_openssl_lib.SSL_OP_NO_SSLv3", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_OP_NO_SSLv3"},
     {"title": "ssl_openssl_lib.SSL_OP_NO_TLSv1", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_OP_NO_TLSv1"},
     {"title": "ssl_openssl_lib.SSL_OP_ALL", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_OP_ALL"},
     {"title": "ssl_openssl_lib.SSL_VERIFY_NONE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_VERIFY_NONE"},
     {"title": "ssl_openssl_lib.SSL_VERIFY_PEER", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_VERIFY_PEER"},
     {"title": "ssl_openssl_lib.OPENSSL_DES_DECRYPT", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#OPENSSL_DES_DECRYPT"},
     {"title": "ssl_openssl_lib.OPENSSL_DES_ENCRYPT", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#OPENSSL_DES_ENCRYPT"},
     {"title": "ssl_openssl_lib.X509_V_OK", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_OK"},
     {"title": "ssl_openssl_lib.X509_V_ILLEGAL", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ILLEGAL"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_GET_CRL", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_GET_CRL"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_SIGNATURE_FAILURE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_SIGNATURE_FAILURE"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CRL_SIGNATURE_FAILURE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CRL_SIGNATURE_FAILURE"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_NOT_YET_VALID", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_NOT_YET_VALID"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_HAS_EXPIRED", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_HAS_EXPIRED"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CRL_NOT_YET_VALID", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CRL_NOT_YET_VALID"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CRL_HAS_EXPIRED", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CRL_HAS_EXPIRED"},
     {"title": "ssl_openssl_lib.X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD"},
     {"title": "ssl_openssl_lib.X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD"},
     {"title": "ssl_openssl_lib.X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD"},
     {"title": "ssl_openssl_lib.X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD"},
     {"title": "ssl_openssl_lib.X509_V_ERR_OUT_OF_MEM", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_OUT_OF_MEM"},
     {"title": "ssl_openssl_lib.X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT"},
     {"title": "ssl_openssl_lib.X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_CHAIN_TOO_LONG", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_CHAIN_TOO_LONG"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_REVOKED", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_REVOKED"},
     {"title": "ssl_openssl_lib.X509_V_ERR_INVALID_CA", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_INVALID_CA"},
     {"title": "ssl_openssl_lib.X509_V_ERR_PATH_LENGTH_EXCEEDED", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_PATH_LENGTH_EXCEEDED"},
     {"title": "ssl_openssl_lib.X509_V_ERR_INVALID_PURPOSE", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_INVALID_PURPOSE"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_UNTRUSTED", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_UNTRUSTED"},
     {"title": "ssl_openssl_lib.X509_V_ERR_CERT_REJECTED", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_CERT_REJECTED"},
     {"title": "ssl_openssl_lib.X509_V_ERR_SUBJECT_ISSUER_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_SUBJECT_ISSUER_MISMATCH"},
     {"title": "ssl_openssl_lib.X509_V_ERR_AKID_SKID_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_AKID_SKID_MISMATCH"},
     {"title": "ssl_openssl_lib.X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH"},
     {"title": "ssl_openssl_lib.X509_V_ERR_KEYUSAGE_NO_CERTSIGN", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_KEYUSAGE_NO_CERTSIGN"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER"},
     {"title": "ssl_openssl_lib.X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION"},
     {"title": "ssl_openssl_lib.X509_V_ERR_APPLICATION_VERIFICATION", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#X509_V_ERR_APPLICATION_VERIFICATION"},
     {"title": "ssl_openssl_lib.SSL_FILETYPE_ASN1", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_FILETYPE_ASN1"},
     {"title": "ssl_openssl_lib.SSL_FILETYPE_PEM", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_FILETYPE_PEM"},
     {"title": "ssl_openssl_lib.EVP_PKEY_RSA", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#EVP_PKEY_RSA"},
     {"title": "ssl_openssl_lib.SSL_CTRL_SET_TLSEXT_HOSTNAME", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSL_CTRL_SET_TLSEXT_HOSTNAME"},
     {"title": "ssl_openssl_lib.TLSEXT_NAMETYPE_host_name", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#TLSEXT_NAMETYPE_host_name"},
     {"title": "ssl_openssl_lib.SslGetError", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslGetError"},
     {"title": "ssl_openssl_lib.SslLibraryInit", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslLibraryInit"},
     {"title": "ssl_openssl_lib.SslLoadErrorStrings", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslLoadErrorStrings"},
     {"title": "ssl_openssl_lib.SslCtxSetCipherList", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxSetCipherList"},
     {"title": "ssl_openssl_lib.SslCtxNew", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxNew"},
     {"title": "ssl_openssl_lib.SslCtxFree", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxFree"},
     {"title": "ssl_openssl_lib.SslSetFd", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslSetFd"},
     {"title": "ssl_openssl_lib.SslMethodV2", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodV2"},
     {"title": "ssl_openssl_lib.SslMethodV3", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodV3"},
     {"title": "ssl_openssl_lib.SslMethodTLSV1", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodTLSV1"},
     {"title": "ssl_openssl_lib.SslMethodTLSV11", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodTLSV11"},
     {"title": "ssl_openssl_lib.SslMethodTLSV12", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodTLSV12"},
     {"title": "ssl_openssl_lib.SslMethodV23", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodV23"},
     {"title": "ssl_openssl_lib.SslMethodTLS", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslMethodTLS"},
     {"title": "ssl_openssl_lib.SslCtxUsePrivateKey", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUsePrivateKey"},
     {"title": "ssl_openssl_lib.SslCtxUsePrivateKeyASN1", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUsePrivateKeyASN1"},
     {"title": "ssl_openssl_lib.SslCtxUsePrivateKeyFile", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUsePrivateKeyFile"},
     {"title": "ssl_openssl_lib.SslCtxUseCertificate", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUseCertificate"},
     {"title": "ssl_openssl_lib.SslCtxUseCertificateASN1", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUseCertificateASN1"},
     {"title": "ssl_openssl_lib.SslCtxUseCertificateFile", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUseCertificateFile"},
     {"title": "ssl_openssl_lib.SslCtxUseCertificateChainFile", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxUseCertificateChainFile"},
     {"title": "ssl_openssl_lib.SslCtxCheckPrivateKeyFile", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxCheckPrivateKeyFile"},
     {"title": "ssl_openssl_lib.SslCtxSetDefaultPasswdCb", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxSetDefaultPasswdCb"},
     {"title": "ssl_openssl_lib.SslCtxSetDefaultPasswdCbUserdata", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxSetDefaultPasswdCbUserdata"},
     {"title": "ssl_openssl_lib.SslCtxLoadVerifyLocations", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxLoadVerifyLocations"},
     {"title": "ssl_openssl_lib.SslCtxCtrl", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxCtrl"},
     {"title": "ssl_openssl_lib.SslNew", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslNew"},
     {"title": "ssl_openssl_lib.SslFree", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslFree"},
     {"title": "ssl_openssl_lib.SslAccept", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslAccept"},
     {"title": "ssl_openssl_lib.SslConnect", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslConnect"},
     {"title": "ssl_openssl_lib.SslShutdown", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslShutdown"},
     {"title": "ssl_openssl_lib.SslRead", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslRead"},
     {"title": "ssl_openssl_lib.SslPeek", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslPeek"},
     {"title": "ssl_openssl_lib.SslWrite", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslWrite"},
     {"title": "ssl_openssl_lib.SslPending", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslPending"},
     {"title": "ssl_openssl_lib.SslGetVersion", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslGetVersion"},
     {"title": "ssl_openssl_lib.SslGetPeerCertificate", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslGetPeerCertificate"},
     {"title": "ssl_openssl_lib.SslCtxSetVerify", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslCtxSetVerify"},
     {"title": "ssl_openssl_lib.SSLGetCurrentCipher", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SSLGetCurrentCipher"},
     {"title": "ssl_openssl_lib.SSLCipherGetName", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SSLCipherGetName"},
     {"title": "ssl_openssl_lib.SSLCipherGetBits", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SSLCipherGetBits"},
     {"title": "ssl_openssl_lib.SSLGetVerifyResult", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SSLGetVerifyResult"},
     {"title": "ssl_openssl_lib.SSLCtrl", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SSLCtrl"},
     {"title": "ssl_openssl_lib.SslSet1Host", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SslSet1Host"},
     {"title": "ssl_openssl_lib.X509New", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509New"},
     {"title": "ssl_openssl_lib.X509Free", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509Free"},
     {"title": "ssl_openssl_lib.X509NameOneline", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509NameOneline"},
     {"title": "ssl_openssl_lib.X509GetSubjectName", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509GetSubjectName"},
     {"title": "ssl_openssl_lib.X509GetIssuerName", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509GetIssuerName"},
     {"title": "ssl_openssl_lib.X509NameHash", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509NameHash"},
     {"title": "ssl_openssl_lib.X509Digest", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509Digest"},
     {"title": "ssl_openssl_lib.X509print", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509print"},
     {"title": "ssl_openssl_lib.X509SetVersion", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509SetVersion"},
     {"title": "ssl_openssl_lib.X509SetPubkey", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509SetPubkey"},
     {"title": "ssl_openssl_lib.X509SetIssuerName", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509SetIssuerName"},
     {"title": "ssl_openssl_lib.X509NameAddEntryByTxt", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509NameAddEntryByTxt"},
     {"title": "ssl_openssl_lib.X509Sign", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509Sign"},
     {"title": "ssl_openssl_lib.X509GmtimeAdj", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509GmtimeAdj"},
     {"title": "ssl_openssl_lib.X509SetNotBefore", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509SetNotBefore"},
     {"title": "ssl_openssl_lib.X509SetNotAfter", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509SetNotAfter"},
     {"title": "ssl_openssl_lib.X509GetSerialNumber", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#X509GetSerialNumber"},
     {"title": "ssl_openssl_lib.EvpPkeyNew", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#EvpPkeyNew"},
     {"title": "ssl_openssl_lib.EvpPkeyFree", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#EvpPkeyFree"},
     {"title": "ssl_openssl_lib.EvpPkeyAssign", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#EvpPkeyAssign"},
     {"title": "ssl_openssl_lib.EvpGetDigestByName", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#EvpGetDigestByName"},
     {"title": "ssl_openssl_lib.EVPcleanup", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#EVPcleanup"},
     {"title": "ssl_openssl_lib.SSLeayversion", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SSLeayversion"},
     {"title": "ssl_openssl_lib.ErrErrorString", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#ErrErrorString"},
     {"title": "ssl_openssl_lib.ErrGetError", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#ErrGetError"},
     {"title": "ssl_openssl_lib.ErrClearError", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#ErrClearError"},
     {"title": "ssl_openssl_lib.ErrFreeStrings", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#ErrFreeStrings"},
     {"title": "ssl_openssl_lib.ErrRemoveState", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#ErrRemoveState"},
     {"title": "ssl_openssl_lib.OPENSSLaddallalgorithms", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#OPENSSLaddallalgorithms"},
     {"title": "ssl_openssl_lib.CRYPTOcleanupAllExData", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#CRYPTOcleanupAllExData"},
     {"title": "ssl_openssl_lib.RandScreen", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#RandScreen"},
     {"title": "ssl_openssl_lib.BioNew", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#BioNew"},
     {"title": "ssl_openssl_lib.BioFreeAll", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#BioFreeAll"},
     {"title": "ssl_openssl_lib.BioSMem", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#BioSMem"},
     {"title": "ssl_openssl_lib.BioCtrlPending", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#BioCtrlPending"},
     {"title": "ssl_openssl_lib.BioRead", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#BioRead"},
     {"title": "ssl_openssl_lib.BioWrite", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#BioWrite"},
     {"title": "ssl_openssl_lib.d2iPKCS12bio", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#d2iPKCS12bio"},
     {"title": "ssl_openssl_lib.PKCS12parse", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#PKCS12parse"},
     {"title": "ssl_openssl_lib.PKCS12free", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#PKCS12free"},
     {"title": "ssl_openssl_lib.RsaGenerateKey", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#RsaGenerateKey"},
     {"title": "ssl_openssl_lib.Asn1UtctimeNew", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#Asn1UtctimeNew"},
     {"title": "ssl_openssl_lib.Asn1UtctimeFree", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#Asn1UtctimeFree"},
     {"title": "ssl_openssl_lib.Asn1IntegerSet", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#Asn1IntegerSet"},
     {"title": "ssl_openssl_lib.Asn1IntegerGet", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#Asn1IntegerGet"},
     {"title": "ssl_openssl_lib.i2dX509bio", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#i2dX509bio"},
     {"title": "ssl_openssl_lib.d2iX509bio", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#d2iX509bio"},
     {"title": "ssl_openssl_lib.PEMReadBioX509", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#PEMReadBioX509"},
     {"title": "ssl_openssl_lib.SkX509PopFree", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#SkX509PopFree"},
     {"title": "ssl_openssl_lib.i2dPrivateKeyBio", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#i2dPrivateKeyBio"},
     {"title": "ssl_openssl_lib.DESsetoddparity", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#DESsetoddparity"},
     {"title": "ssl_openssl_lib.DESsetkeychecked", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#DESsetkeychecked"},
     {"title": "ssl_openssl_lib.DESecbencrypt", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#DESecbencrypt"},
     {"title": "ssl_openssl_lib.IsSSLloaded", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#IsSSLloaded"},
     {"title": "ssl_openssl_lib.InitSSLInterface", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#InitSSLInterface"},
     {"title": "ssl_openssl_lib.DestroySSLInterface", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#DestroySSLInterface"},
     {"title": "ssl_openssl_lib.SslPtr", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SslPtr"},
     {"title": "ssl_openssl_lib.PSslPtr", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PSslPtr"},
     {"title": "ssl_openssl_lib.PSSL_CTX", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PSSL_CTX"},
     {"title": "ssl_openssl_lib.PSSL", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PSSL"},
     {"title": "ssl_openssl_lib.PSSL_METHOD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PSSL_METHOD"},
     {"title": "ssl_openssl_lib.PX509", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PX509"},
     {"title": "ssl_openssl_lib.PX509_NAME", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PX509_NAME"},
     {"title": "ssl_openssl_lib.PEVP_MD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PEVP_MD"},
     {"title": "ssl_openssl_lib.PInteger", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PInteger"},
     {"title": "ssl_openssl_lib.PBIO_METHOD", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PBIO_METHOD"},
     {"title": "ssl_openssl_lib.PBIO", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PBIO"},
     {"title": "ssl_openssl_lib.EVP_PKEY", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#EVP_PKEY"},
     {"title": "ssl_openssl_lib.PRSA", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PRSA"},
     {"title": "ssl_openssl_lib.PASN1_UTCTIME", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PASN1_UTCTIME"},
     {"title": "ssl_openssl_lib.PASN1_INTEGER", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PASN1_INTEGER"},
     {"title": "ssl_openssl_lib.PPasswdCb", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PPasswdCb"},
     {"title": "ssl_openssl_lib.PFunction", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#PFunction"},
     {"title": "ssl_openssl_lib.PSTACK", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PSTACK"},
     {"title": "ssl_openssl_lib.TSkPopFreeFunc", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#TSkPopFreeFunc"},
     {"title": "ssl_openssl_lib.TX509Free", "text": "    ", "tags": "", "url": "ssl_openssl_lib.html#TX509Free"},
     {"title": "ssl_openssl_lib.DES_cblock", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#DES_cblock"},
     {"title": "ssl_openssl_lib.PDES_cblock", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#PDES_cblock"},
     {"title": "ssl_openssl_lib.des_key_schedule", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#des_key_schedule"},
     {"title": "ssl_openssl_lib.DLLSSLName", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#DLLSSLName"},
     {"title": "ssl_openssl_lib.DLLUtilName", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#DLLUtilName"},
     {"title": "ssl_openssl_lib.SSLLibHandle", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSLLibHandle"},
     {"title": "ssl_openssl_lib.SSLUtilHandle", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSLUtilHandle"},
     {"title": "ssl_openssl_lib.SSLLibFile", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSLLibFile"},
     {"title": "ssl_openssl_lib.SSLUtilFile", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#SSLUtilFile"},
     {"title": "ssl_openssl_lib._X509Free", "text": "   ", "tags": "", "url": "ssl_openssl_lib.html#_X509Free"},
     {"title": "ssl_sbb", "text": "  For handling keys and certificates you can use this properties: TCustomSSL.CertCAFile, TCustomSSL.CertCA, TCustomSSL.TrustCertificateFile, TCustomSSL.TrustCertificate, TCustomSSL.PrivateKeyFile, TCustomSSL.PrivateKey, TCustomSSL.CertificateFile, TCustomSSL.Certificate, TCustomSSL.PFXFile. For usage of this properties and for possible formats of keys and certificates refer to SecureBlackBox documentation.   ", "tags": "", "url": "ssl_sbb.html"},
     {"title": "ssl_sbb.TSSLSBB", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html"},
     {"title": "ssl_sbb.TSSLSBB.FServer", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FServer"},
     {"title": "ssl_sbb.TSSLSBB.FElSecureClient", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FElSecureClient"},
     {"title": "ssl_sbb.TSSLSBB.FElSecureServer", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FElSecureServer"},
     {"title": "ssl_sbb.TSSLSBB.FElCertStorage", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FElCertStorage"},
     {"title": "ssl_sbb.TSSLSBB.FElX509Certificate", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FElX509Certificate"},
     {"title": "ssl_sbb.TSSLSBB.FElX509CACertificate", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FElX509CACertificate"},
     {"title": "ssl_sbb.TSSLSBB.FCipherSuites", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#FCipherSuites"},
     {"title": "ssl_sbb.TSSLSBB.Create", "text": "    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#Create"},
     {"title": "ssl_sbb.TSSLSBB.Destroy", "text": "    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#Destroy"},
     {"title": "ssl_sbb.TSSLSBB.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#LibVersion"},
     {"title": "ssl_sbb.TSSLSBB.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#LibName"},
     {"title": "ssl_sbb.TSSLSBB.Connect", "text": "See TCustomSSL.Connect and ssl_sbb for more details.    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#Connect"},
     {"title": "ssl_sbb.TSSLSBB.Accept", "text": "See TCustomSSL.Accept and ssl_sbb for more details.    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#Accept"},
     {"title": "ssl_sbb.TSSLSBB.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#Shutdown"},
     {"title": "ssl_sbb.TSSLSBB.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#BiShutdown"},
     {"title": "ssl_sbb.TSSLSBB.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#SendBuffer"},
     {"title": "ssl_sbb.TSSLSBB.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#RecvBuffer"},
     {"title": "ssl_sbb.TSSLSBB.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#WaitingData"},
     {"title": "ssl_sbb.TSSLSBB.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#GetSSLVersion"},
     {"title": "ssl_sbb.TSSLSBB.GetPeerSubject", "text": "See TCustomSSL.GetPeerSubject    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#GetPeerSubject"},
     {"title": "ssl_sbb.TSSLSBB.GetPeerIssuer", "text": "See TCustomSSL.GetPeerIssuer    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#GetPeerIssuer"},
     {"title": "ssl_sbb.TSSLSBB.GetPeerName", "text": "See TCustomSSL.GetPeerName    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#GetPeerName"},
     {"title": "ssl_sbb.TSSLSBB.GetPeerFingerprint", "text": "See TCustomSSL.GetPeerFingerprint    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#GetPeerFingerprint"},
     {"title": "ssl_sbb.TSSLSBB.GetCertInfo", "text": "See TCustomSSL.GetCertInfo    ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#GetCertInfo"},
     {"title": "ssl_sbb.TSSLSBB.ElSecureClient", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#ElSecureClient"},
     {"title": "ssl_sbb.TSSLSBB.ElSecureServer", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#ElSecureServer"},
     {"title": "ssl_sbb.TSSLSBB.CipherSuites", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#CipherSuites"},
     {"title": "ssl_sbb.TSSLSBB.CipherSuite", "text": "   ", "tags": "", "url": "ssl_sbb.TSSLSBB.html#CipherSuite"},
     {"title": "ssl_streamsec", "text": "  StreamSecII is native pascal library, you not need any external libraries!  You can tune lot of StreamSecII properties by using your GlobalServer. If you not using your GlobalServer, then this plugin create own TSimpleTLSInternalServer instance for each TCP connection. Formore information about GlobalServer usage refer StreamSecII documentation.  If you are not using key and certificate by GlobalServer, then you can use properties of this plugin instead, but this have limited features and TCustomSSL.KeyPassword not working properly yet!  For handling keys and certificates you can use this properties: TCustomSSL.CertCAFile, TCustomSSL.CertCA, TCustomSSL.TrustCertificateFile, TCustomSSL.TrustCertificate, TCustomSSL.PrivateKeyFile, TCustomSSL.PrivateKey, TCustomSSL.CertificateFile, TCustomSSL.Certificate, TCustomSSL.PFXFile. For usage of this properties and for possible formats of keys and certificates refer to StreamSecII documentation.   ", "tags": "", "url": "ssl_streamsec.html"},
     {"title": "ssl_streamsec.TSSLStreamSec", "text": " Instance of this class will be created for each TTCPBlockSocket. You not need to create instance of this class, all is done by Synapse itself!   ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html"},
     {"title": "ssl_streamsec.TSSLStreamSec.FSlave", "text": "   ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#FSlave"},
     {"title": "ssl_streamsec.TSSLStreamSec.FIsServer", "text": "   ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#FIsServer"},
     {"title": "ssl_streamsec.TSSLStreamSec.FTLSServer", "text": "   ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#FTLSServer"},
     {"title": "ssl_streamsec.TSSLStreamSec.FServerCreated", "text": "   ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#FServerCreated"},
     {"title": "ssl_streamsec.TSSLStreamSec.SSLCheck", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#SSLCheck"},
     {"title": "ssl_streamsec.TSSLStreamSec.Init", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Init"},
     {"title": "ssl_streamsec.TSSLStreamSec.DeInit", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#DeInit"},
     {"title": "ssl_streamsec.TSSLStreamSec.Prepare", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Prepare"},
     {"title": "ssl_streamsec.TSSLStreamSec.NotTrustEvent", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#NotTrustEvent"},
     {"title": "ssl_streamsec.TSSLStreamSec.X500StrToStr", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#X500StrToStr"},
     {"title": "ssl_streamsec.TSSLStreamSec.X501NameToStr", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#X501NameToStr"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetCert", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetCert"},
     {"title": "ssl_streamsec.TSSLStreamSec.Create", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Create"},
     {"title": "ssl_streamsec.TSSLStreamSec.Destroy", "text": "    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Destroy"},
     {"title": "ssl_streamsec.TSSLStreamSec.LibVersion", "text": "See TCustomSSL.LibVersion    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#LibVersion"},
     {"title": "ssl_streamsec.TSSLStreamSec.LibName", "text": "See TCustomSSL.LibName    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#LibName"},
     {"title": "ssl_streamsec.TSSLStreamSec.Connect", "text": "See TCustomSSL.Connect and ssl_streamsec for more details.    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Connect"},
     {"title": "ssl_streamsec.TSSLStreamSec.Accept", "text": "See TCustomSSL.Accept and ssl_streamsec for more details.    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Accept"},
     {"title": "ssl_streamsec.TSSLStreamSec.Shutdown", "text": "See TCustomSSL.Shutdown    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#Shutdown"},
     {"title": "ssl_streamsec.TSSLStreamSec.BiShutdown", "text": "See TCustomSSL.BiShutdown    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#BiShutdown"},
     {"title": "ssl_streamsec.TSSLStreamSec.SendBuffer", "text": "See TCustomSSL.SendBuffer    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#SendBuffer"},
     {"title": "ssl_streamsec.TSSLStreamSec.RecvBuffer", "text": "See TCustomSSL.RecvBuffer    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#RecvBuffer"},
     {"title": "ssl_streamsec.TSSLStreamSec.WaitingData", "text": "See TCustomSSL.WaitingData    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#WaitingData"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetSSLVersion", "text": "See TCustomSSL.GetSSLVersion    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetSSLVersion"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetPeerSubject", "text": "See TCustomSSL.GetPeerSubject    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetPeerSubject"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetPeerIssuer", "text": "See TCustomSSL.GetPeerIssuer    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetPeerIssuer"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetPeerName", "text": "See TCustomSSL.GetPeerName    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetPeerName"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetPeerFingerprint", "text": "See TCustomSSL.GetPeerFingerprint    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetPeerFingerprint"},
     {"title": "ssl_streamsec.TSSLStreamSec.GetCertInfo", "text": "See TCustomSSL.GetCertInfo    ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#GetCertInfo"},
     {"title": "ssl_streamsec.TSSLStreamSec.TLSServer", "text": "TLS server for tuning of StreamSecII.   ", "tags": "", "url": "ssl_streamsec.TSSLStreamSec.html#TLSServer"},
     {"title": "synachar", "text": "   ", "tags": "", "url": "synachar.html"},
     {"title": "synachar.IconvOnlyChars", "text": "Set of charsets supported by Iconv library only.   ", "tags": "", "url": "synachar.html#IconvOnlyChars"},
     {"title": "synachar.NoIconvChars", "text": "Set of charsets supported by internal routines only.   ", "tags": "", "url": "synachar.html#NoIconvChars"},
     {"title": "synachar.Replace_None", "text": "null character replace table. (Usable for disable charater replacing.)   ", "tags": "", "url": "synachar.html#Replace_None"},
     {"title": "synachar.Replace_Czech", "text": "Character replace table for remove Czech diakritics.   ", "tags": "", "url": "synachar.html#Replace_Czech"},
     {"title": "synachar.CharsetConversion", "text": "Convert Value from one charset to another. See: CharsetConversionEx    ", "tags": "", "url": "synachar.html#CharsetConversion"},
     {"title": "synachar.CharsetConversionEx", "text": "Convert Value from one charset to another with additional character conversion. see: Replace_None and Replace_Czech    ", "tags": "", "url": "synachar.html#CharsetConversionEx"},
     {"title": "synachar.CharsetConversionTrans", "text": "Convert Value from one charset to another with additional character conversion. This funtion is similar to CharsetConversionEx, but you can disable transliteration of unconvertible characters.    ", "tags": "", "url": "synachar.html#CharsetConversionTrans"},
     {"title": "synachar.GetCurCP", "text": "Returns charset used by operating system.    ", "tags": "", "url": "synachar.html#GetCurCP"},
     {"title": "synachar.GetCurOEMCP", "text": "Returns charset used by operating system as OEM charset. (in Windows DOS box, for example)    ", "tags": "", "url": "synachar.html#GetCurOEMCP"},
     {"title": "synachar.GetCPFromID", "text": "Converting string with charset name to TMimeChar.    ", "tags": "", "url": "synachar.html#GetCPFromID"},
     {"title": "synachar.GetIDFromCP", "text": "Converting TMimeChar to string with name of charset.    ", "tags": "", "url": "synachar.html#GetIDFromCP"},
     {"title": "synachar.NeedCharsetConversion", "text": "return True when value need to be converted. (It is not 7-bit ASCII)    ", "tags": "", "url": "synachar.html#NeedCharsetConversion"},
     {"title": "synachar.IdealCharsetCoding", "text": "Finding best target charset from set of TMimeChars with minimal count of unconvertible characters.    ", "tags": "", "url": "synachar.html#IdealCharsetCoding"},
     {"title": "synachar.GetBOM", "text": "Return BOM (Byte Order Mark) for given unicode charset.    ", "tags": "", "url": "synachar.html#GetBOM"},
     {"title": "synachar.StringToWide", "text": "Convert binary string with unicode content to WideString.    ", "tags": "", "url": "synachar.html#StringToWide"},
     {"title": "synachar.WideToString", "text": "Convert WideString to binary string with unicode content.    ", "tags": "", "url": "synachar.html#WideToString"},
     {"title": "synachar.GetIconvIDFromCP", "text": "    ", "tags": "", "url": "synachar.html#GetIconvIDFromCP"},
     {"title": "synachar.GetCPFromIconvID", "text": "    ", "tags": "", "url": "synachar.html#GetCPFromIconvID"},
     {"title": "synachar.TMimeChar", "text": "Type with all supported charsets.    ISO_8859_1    ISO_8859_2    ISO_8859_3    ISO_8859_4    ISO_8859_5    ISO_8859_6    ISO_8859_7    ISO_8859_8    ISO_8859_9    ISO_8859_10    ISO_8859_13    ISO_8859_14    ISO_8859_15    CP1250    CP1251    CP1252    CP1253    CP1254    CP1255    CP1256    CP1257    CP1258    KOI8_R    CP895    CP852    UCS_2    UCS_4    UTF_8    UTF_7    UTF_7mod    UCS_2LE    UCS_4LE    UTF_16    UTF_16LE    UTF_32    UTF_32LE    C99    JAVA    ISO_8859_16    KOI8_U    KOI8_RU    CP862    CP866    MAC    MACCE    MACICE    MACCRO    MACRO    MACCYR    MACUK    MACGR    MACTU    MACHEB    MACAR    MACTH    ROMAN8    NEXTSTEP    ARMASCII    GEORGIAN_AC    GEORGIAN_PS    KOI8_T    MULELAO    CP1133    TIS620    CP874    VISCII    TCVN    ISO_IR_14    JIS_X0201    JIS_X0208    JIS_X0212    GB1988_80    GB2312_80    ISO_IR_165    ISO_IR_149    EUC_JP    SHIFT_JIS    CP932    ISO_2022_JP    ISO_2022_JP1    ISO_2022_JP2    GB2312    CP936    GB18030    ISO_2022_CN    ISO_2022_CNE    HZ    EUC_TW    BIG5    CP950    BIG5_HKSCS    EUC_KR    CP949    CP1361    ISO_2022_KR    CP737    CP775    CP853    CP855    CP857    CP858    CP860    CP861    CP863    CP864    CP865    CP869    CP1125   ", "tags": "", "url": "synachar.html#TMimeChar"},
     {"title": "synachar.TMimeSetChar", "text": "Set of any charsets.   ", "tags": "", "url": "synachar.html#TMimeSetChar"},
     {"title": "synachar.DisableIconv", "text": "By this you can generally disable/enable Iconv support.   ", "tags": "", "url": "synachar.html#DisableIconv"},
     {"title": "synachar.IdealCharsets", "text": "Default set of charsets for IdealCharsetCoding function.   ", "tags": "", "url": "synachar.html#IdealCharsets"},
     {"title": "synacode", "text": "   ", "tags": "", "url": "synacode.html"},
     {"title": "synacode.SpecialChar", "text": "   ", "tags": "", "url": "synacode.html#SpecialChar"},
     {"title": "synacode.NonAsciiChar", "text": "   ", "tags": "", "url": "synacode.html#NonAsciiChar"},
     {"title": "synacode.URLFullSpecialChar", "text": "   ", "tags": "", "url": "synacode.html#URLFullSpecialChar"},
     {"title": "synacode.URLSpecialChar", "text": "   ", "tags": "", "url": "synacode.html#URLSpecialChar"},
     {"title": "synacode.TableBase64", "text": "   ", "tags": "", "url": "synacode.html#TableBase64"},
     {"title": "synacode.TableBase64mod", "text": "   ", "tags": "", "url": "synacode.html#TableBase64mod"},
     {"title": "synacode.TableUU", "text": "   ", "tags": "", "url": "synacode.html#TableUU"},
     {"title": "synacode.TableXX", "text": "   ", "tags": "", "url": "synacode.html#TableXX"},
     {"title": "synacode.ReTablebase64", "text": "   ", "tags": "", "url": "synacode.html#ReTablebase64"},
     {"title": "synacode.ReTableUU", "text": "   ", "tags": "", "url": "synacode.html#ReTableUU"},
     {"title": "synacode.ReTableXX", "text": "   ", "tags": "", "url": "synacode.html#ReTableXX"},
     {"title": "synacode.DecodeTriplet", "text": "Decodes triplet encoding with a given character delimiter. It is used for decoding quoted-printable or URL encoding.    ", "tags": "", "url": "synacode.html#DecodeTriplet"},
     {"title": "synacode.DecodeQuotedPrintable", "text": "Decodes a string from quoted printable form. (also decodes triplet sequences like '=7F')    ", "tags": "", "url": "synacode.html#DecodeQuotedPrintable"},
     {"title": "synacode.DecodeURL", "text": "Decodes a string of URL encoding. (also decodes triplet sequences like '%7F')    ", "tags": "", "url": "synacode.html#DecodeURL"},
     {"title": "synacode.EncodeTriplet", "text": "Performs triplet encoding with a given character delimiter. Used for encoding quoted-printable or URL encoding.    ", "tags": "", "url": "synacode.html#EncodeTriplet"},
     {"title": "synacode.EncodeQuotedPrintable", "text": "Encodes a string to triplet quoted printable form. All NonAsciiChar are encoded.    ", "tags": "", "url": "synacode.html#EncodeQuotedPrintable"},
     {"title": "synacode.EncodeSafeQuotedPrintable", "text": "Encodes a string to triplet quoted printable form. All NonAsciiChar and SpecialChar are encoded.    ", "tags": "", "url": "synacode.html#EncodeSafeQuotedPrintable"},
     {"title": "synacode.EncodeURLElement", "text": "Encodes a string to URL format. Used for encoding data from a form field in HTTP, etc. (Encodes all critical characters including characters used as URL delimiters ('/',':', etc.)    ", "tags": "", "url": "synacode.html#EncodeURLElement"},
     {"title": "synacode.EncodeURL", "text": "Encodes a string to URL format. Used to encode critical characters in all URLs.    ", "tags": "", "url": "synacode.html#EncodeURL"},
     {"title": "synacode.Decode4to3", "text": "Decode 4to3 encoding with given table. If some element is not found in table, first item from table is used. This is good for buggy coded items by Microsoft Outlook. This software sometimes using wrong table for UUcode, where is used ' ' instead '`'.    ", "tags": "", "url": "synacode.html#Decode4to3"},
     {"title": "synacode.Decode4to3Ex", "text": "Decode 4to3 encoding with given REVERSE table. Using this function with reverse table is much faster then Decode4to3. This function is used internally for Base64, UU or XX decoding.    ", "tags": "", "url": "synacode.html#Decode4to3Ex"},
     {"title": "synacode.Encode3to4", "text": "Encode by system 3to4 (used by Base64, UU coding, etc) by given table.    ", "tags": "", "url": "synacode.html#Encode3to4"},
     {"title": "synacode.DecodeBase64", "text": "Decode string from base64 format.    ", "tags": "", "url": "synacode.html#DecodeBase64"},
     {"title": "synacode.EncodeBase64", "text": "Encodes a string to base64 format.    ", "tags": "", "url": "synacode.html#EncodeBase64"},
     {"title": "synacode.DecodeBase64mod", "text": "Decode string from modified base64 format. (used in IMAP, for example.)    ", "tags": "", "url": "synacode.html#DecodeBase64mod"},
     {"title": "synacode.EncodeBase64mod", "text": "Encodes a string to modified base64 format. (used in IMAP, for example.)    ", "tags": "", "url": "synacode.html#EncodeBase64mod"},
     {"title": "synacode.DecodeUU", "text": "Decodes a string from UUcode format.    ", "tags": "", "url": "synacode.html#DecodeUU"},
     {"title": "synacode.EncodeUU", "text": "encode UUcode. it encode only datas, you must also add header and footer for proper encode.    ", "tags": "", "url": "synacode.html#EncodeUU"},
     {"title": "synacode.DecodeXX", "text": "Decodes a string from XXcode format.    ", "tags": "", "url": "synacode.html#DecodeXX"},
     {"title": "synacode.DecodeYEnc", "text": "decode line with Yenc code. This code is sometimes used in newsgroups.    ", "tags": "", "url": "synacode.html#DecodeYEnc"},
     {"title": "synacode.UpdateCrc32", "text": "Returns a new CRC32 value after adding a new byte of data.    ", "tags": "", "url": "synacode.html#UpdateCrc32"},
     {"title": "synacode.Crc32", "text": "return CRC32 from a value string.    ", "tags": "", "url": "synacode.html#Crc32"},
     {"title": "synacode.UpdateCrc16", "text": "Returns a new CRC16 value after adding a new byte of data.    ", "tags": "", "url": "synacode.html#UpdateCrc16"},
     {"title": "synacode.Crc16", "text": "return CRC16 from a value string.    ", "tags": "", "url": "synacode.html#Crc16"},
     {"title": "synacode.MD5", "text": "Returns a binary string with a RSA-MD5 hashing of &quot;Value&quot; string.    ", "tags": "", "url": "synacode.html#MD5"},
     {"title": "synacode.HMAC_MD5", "text": "Returns a binary string with HMAC-MD5 hash.    ", "tags": "", "url": "synacode.html#HMAC_MD5"},
     {"title": "synacode.MD5LongHash", "text": "Returns a binary string with a RSA-MD5 hashing of string what is constructed by repeating &quot;value&quot; until length is &quot;Len&quot;.    ", "tags": "", "url": "synacode.html#MD5LongHash"},
     {"title": "synacode.SHA1", "text": "Returns a binary string with a SHA-1 hashing of &quot;Value&quot; string.    ", "tags": "", "url": "synacode.html#SHA1"},
     {"title": "synacode.HMAC_SHA1", "text": "Returns a binary string with HMAC-SHA1 hash.    ", "tags": "", "url": "synacode.html#HMAC_SHA1"},
     {"title": "synacode.SHA1LongHash", "text": "Returns a binary string with a SHA-1 hashing of string what is constructed by repeating &quot;value&quot; until length is &quot;Len&quot;.    ", "tags": "", "url": "synacode.html#SHA1LongHash"},
     {"title": "synacode.MD4", "text": "Returns a binary string with a RSA-MD4 hashing of &quot;Value&quot; string.    ", "tags": "", "url": "synacode.html#MD4"},
     {"title": "synacode.TSpecials", "text": "   ", "tags": "", "url": "synacode.html#TSpecials"},
     {"title": "synacrypt", "text": "  Implemented are DES and 3DES encryption/decryption by ECB, CBC, CFB-8bit, CFB-block, OFB and CTR methods.   ", "tags": "", "url": "synacrypt.html"},
     {"title": "synacrypt.TSynaBlockCipher", "text": "  Do not use this class directly, use descendants only!   ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html"},
     {"title": "synacrypt.TSynaBlockCipher.InitKey", "text": "    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#InitKey"},
     {"title": "synacrypt.TSynaBlockCipher.GetSize", "text": "    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#GetSize"},
     {"title": "synacrypt.TSynaBlockCipher.SetIV", "text": "Sets the IV to Value and performs a reset    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#SetIV"},
     {"title": "synacrypt.TSynaBlockCipher.GetIV", "text": "Returns the current chaining information, not the actual IV    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#GetIV"},
     {"title": "synacrypt.TSynaBlockCipher.Reset", "text": "Reset any stored chaining information    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#Reset"},
     {"title": "synacrypt.TSynaBlockCipher.EncryptECB", "text": "Encrypt a 64-bit block of data using the ECB method of encryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#EncryptECB"},
     {"title": "synacrypt.TSynaBlockCipher.DecryptECB", "text": "Decrypt a 64-bit block of data using the ECB method of decryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#DecryptECB"},
     {"title": "synacrypt.TSynaBlockCipher.EncryptCBC", "text": "Encrypt data using the CBC method of encryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#EncryptCBC"},
     {"title": "synacrypt.TSynaBlockCipher.DecryptCBC", "text": "Decrypt data using the CBC method of decryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#DecryptCBC"},
     {"title": "synacrypt.TSynaBlockCipher.EncryptCFB8bit", "text": "Encrypt data using the CFB (8 bit) method of encryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#EncryptCFB8bit"},
     {"title": "synacrypt.TSynaBlockCipher.DecryptCFB8bit", "text": "Decrypt data using the CFB (8 bit) method of decryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#DecryptCFB8bit"},
     {"title": "synacrypt.TSynaBlockCipher.EncryptCFBblock", "text": "Encrypt data using the CFB (block) method of encryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#EncryptCFBblock"},
     {"title": "synacrypt.TSynaBlockCipher.DecryptCFBblock", "text": "Decrypt data using the CFB (block) method of decryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#DecryptCFBblock"},
     {"title": "synacrypt.TSynaBlockCipher.EncryptOFB", "text": "Encrypt data using the OFB method of encryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#EncryptOFB"},
     {"title": "synacrypt.TSynaBlockCipher.DecryptOFB", "text": "Decrypt data using the OFB method of decryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#DecryptOFB"},
     {"title": "synacrypt.TSynaBlockCipher.EncryptCTR", "text": "Encrypt data using the CTR method of encryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#EncryptCTR"},
     {"title": "synacrypt.TSynaBlockCipher.DecryptCTR", "text": "Decrypt data using the CTR method of decryption    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#DecryptCTR"},
     {"title": "synacrypt.TSynaBlockCipher.Create", "text": "Create a encryptor/decryptor instance and initialize it by the Key.    ", "tags": "", "url": "synacrypt.TSynaBlockCipher.html#Create"},
     {"title": "synacrypt.TSynaCustomDes", "text": "  Do not use this class directly, use descendants only!   ", "tags": "", "url": "synacrypt.TSynaCustomDes.html"},
     {"title": "synacrypt.TSynaCustomDes.DoInit", "text": "    ", "tags": "", "url": "synacrypt.TSynaCustomDes.html#DoInit"},
     {"title": "synacrypt.TSynaCustomDes.EncryptBlock", "text": "    ", "tags": "", "url": "synacrypt.TSynaCustomDes.html#EncryptBlock"},
     {"title": "synacrypt.TSynaCustomDes.DecryptBlock", "text": "    ", "tags": "", "url": "synacrypt.TSynaCustomDes.html#DecryptBlock"},
     {"title": "synacrypt.TSynaDes", "text": "   ", "tags": "", "url": "synacrypt.TSynaDes.html"},
     {"title": "synacrypt.TSynaDes.KeyData", "text": "   ", "tags": "", "url": "synacrypt.TSynaDes.html#KeyData"},
     {"title": "synacrypt.TSynaDes.InitKey", "text": "    ", "tags": "", "url": "synacrypt.TSynaDes.html#InitKey"},
     {"title": "synacrypt.TSynaDes.EncryptECB", "text": "Encrypt a 64-bit block of data using the ECB method of encryption    ", "tags": "", "url": "synacrypt.TSynaDes.html#EncryptECB"},
     {"title": "synacrypt.TSynaDes.DecryptECB", "text": "Decrypt a 64-bit block of data using the ECB method of decryption    ", "tags": "", "url": "synacrypt.TSynaDes.html#DecryptECB"},
     {"title": "synacrypt.TSyna3Des", "text": "   ", "tags": "", "url": "synacrypt.TSyna3Des.html"},
     {"title": "synacrypt.TSyna3Des.KeyData", "text": "   ", "tags": "", "url": "synacrypt.TSyna3Des.html#KeyData"},
     {"title": "synacrypt.TSyna3Des.InitKey", "text": "    ", "tags": "", "url": "synacrypt.TSyna3Des.html#InitKey"},
     {"title": "synacrypt.TSyna3Des.EncryptECB", "text": "Encrypt a 64-bit block of data using the ECB method of encryption    ", "tags": "", "url": "synacrypt.TSyna3Des.html#EncryptECB"},
     {"title": "synacrypt.TSyna3Des.DecryptECB", "text": "Decrypt a 64-bit block of data using the ECB method of decryption    ", "tags": "", "url": "synacrypt.TSyna3Des.html#DecryptECB"},
     {"title": "synacrypt.TSynaAes", "text": "   ", "tags": "", "url": "synacrypt.TSynaAes.html"},
     {"title": "synacrypt.TSynaAes.numrounds", "text": "   ", "tags": "", "url": "synacrypt.TSynaAes.html#numrounds"},
     {"title": "synacrypt.TSynaAes.rk", "text": "   ", "tags": "", "url": "synacrypt.TSynaAes.html#rk"},
     {"title": "synacrypt.TSynaAes.drk", "text": "   ", "tags": "", "url": "synacrypt.TSynaAes.html#drk"},
     {"title": "synacrypt.TSynaAes.InitKey", "text": "    ", "tags": "", "url": "synacrypt.TSynaAes.html#InitKey"},
     {"title": "synacrypt.TSynaAes.GetSize", "text": "    ", "tags": "", "url": "synacrypt.TSynaAes.html#GetSize"},
     {"title": "synacrypt.TSynaAes.EncryptECB", "text": "Encrypt a 128-bit block of data using the ECB method of encryption    ", "tags": "", "url": "synacrypt.TSynaAes.html#EncryptECB"},
     {"title": "synacrypt.TSynaAes.DecryptECB", "text": "Decrypt a 128-bit block of data using the ECB method of decryption    ", "tags": "", "url": "synacrypt.TSynaAes.html#DecryptECB"},
     {"title": "synacrypt.BC", "text": "   ", "tags": "", "url": "synacrypt.html#BC"},
     {"title": "synacrypt.MAXROUNDS", "text": "   ", "tags": "", "url": "synacrypt.html#MAXROUNDS"},
     {"title": "synacrypt.TestDes", "text": "Call internal test of all DES encryptions. Returns True if all is OK.    ", "tags": "", "url": "synacrypt.html#TestDes"},
     {"title": "synacrypt.Test3Des", "text": "Call internal test of all 3DES encryptions. Returns True if all is OK.    ", "tags": "", "url": "synacrypt.html#Test3Des"},
     {"title": "synacrypt.TestAes", "text": "Call internal test of all AES encryptions. Returns True if all is OK.    ", "tags": "", "url": "synacrypt.html#TestAes"},
     {"title": "synacrypt.TDesKeyData", "text": "  This data type is used internally.   ", "tags": "", "url": "synacrypt.html#TDesKeyData"},
     {"title": "synadbg", "text": "  Routines for help with debugging of events on the Sockets.   ", "tags": "", "url": "synadbg.html"},
     {"title": "synadbg.TSynaDebug", "text": "   ", "tags": "", "url": "synadbg.TSynaDebug.html"},
     {"title": "synadbg.TSynaDebug.HookStatus", "text": "    ", "tags": "", "url": "synadbg.TSynaDebug.html#HookStatus"},
     {"title": "synadbg.TSynaDebug.HookMonitor", "text": "    ", "tags": "", "url": "synadbg.TSynaDebug.html#HookMonitor"},
     {"title": "synadbg.AppendToLog", "text": "    ", "tags": "", "url": "synadbg.html#AppendToLog"},
     {"title": "synadbg.LogFile", "text": "   ", "tags": "", "url": "synadbg.html#LogFile"},
     {"title": "synafpc", "text": "   ", "tags": "", "url": "synafpc.html"},
     {"title": "synafpc.StrLCopy", "text": "    ", "tags": "", "url": "synafpc.html#StrLCopy"},
     {"title": "synafpc.StrLComp", "text": "    ", "tags": "", "url": "synafpc.html#StrLComp"},
     {"title": "synafpc.Sleep", "text": "    ", "tags": "", "url": "synafpc.html#Sleep"},
     {"title": "synafpc.CharInSet", "text": "    ", "tags": "", "url": "synafpc.html#CharInSet"},
     {"title": "synafpc.TLibHandle", "text": "   ", "tags": "", "url": "synafpc.html#TLibHandle"},
     {"title": "synafpc.PtrInt", "text": "   ", "tags": "", "url": "synafpc.html#PtrInt"},
     {"title": "synaicnv", "text": "  This unit is Pascal interface to LibIconv library for charset translations. LibIconv is loaded dynamicly on-demand. If this library is not found in system, requested LibIconv function just return errorcode.   ", "tags": "", "url": "synaicnv.html"},
     {"title": "synaicnv.DLLIconvName", "text": "   ", "tags": "", "url": "synaicnv.html#DLLIconvName"},
     {"title": "synaicnv.ICONV_TRIVIALP", "text": "   ", "tags": "", "url": "synaicnv.html#ICONV_TRIVIALP"},
     {"title": "synaicnv.ICONV_GET_TRANSLITERATE", "text": "   ", "tags": "", "url": "synaicnv.html#ICONV_GET_TRANSLITERATE"},
     {"title": "synaicnv.ICONV_SET_TRANSLITERATE", "text": "   ", "tags": "", "url": "synaicnv.html#ICONV_SET_TRANSLITERATE"},
     {"title": "synaicnv.ICONV_GET_DISCARD_ILSEQ", "text": "   ", "tags": "", "url": "synaicnv.html#ICONV_GET_DISCARD_ILSEQ"},
     {"title": "synaicnv.ICONV_SET_DISCARD_ILSEQ", "text": "   ", "tags": "", "url": "synaicnv.html#ICONV_SET_DISCARD_ILSEQ"},
     {"title": "synaicnv.SynaIconvOpen", "text": "    ", "tags": "", "url": "synaicnv.html#SynaIconvOpen"},
     {"title": "synaicnv.SynaIconvOpenTranslit", "text": "    ", "tags": "", "url": "synaicnv.html#SynaIconvOpenTranslit"},
     {"title": "synaicnv.SynaIconvOpenIgnore", "text": "    ", "tags": "", "url": "synaicnv.html#SynaIconvOpenIgnore"},
     {"title": "synaicnv.SynaIconv", "text": "    ", "tags": "", "url": "synaicnv.html#SynaIconv"},
     {"title": "synaicnv.SynaIconvClose", "text": "    ", "tags": "", "url": "synaicnv.html#SynaIconvClose"},
     {"title": "synaicnv.SynaIconvCtl", "text": "    ", "tags": "", "url": "synaicnv.html#SynaIconvCtl"},
     {"title": "synaicnv.IsIconvloaded", "text": "    ", "tags": "", "url": "synaicnv.html#IsIconvloaded"},
     {"title": "synaicnv.InitIconvInterface", "text": "    ", "tags": "", "url": "synaicnv.html#InitIconvInterface"},
     {"title": "synaicnv.DestroyIconvInterface", "text": "    ", "tags": "", "url": "synaicnv.html#DestroyIconvInterface"},
     {"title": "synaicnv.size_t", "text": "   ", "tags": "", "url": "synaicnv.html#size_t"},
     {"title": "synaicnv.iconv_t", "text": "   ", "tags": "", "url": "synaicnv.html#iconv_t"},
     {"title": "synaicnv.argptr", "text": "   ", "tags": "", "url": "synaicnv.html#argptr"},
     {"title": "synaicnv.iconvLibHandle", "text": "   ", "tags": "", "url": "synaicnv.html#iconvLibHandle"},
     {"title": "synaip", "text": "   ", "tags": "", "url": "synaip.html"},
     {"title": "synaip.IsIP", "text": "Returns True, if &quot;Value&quot; is a valid IPv4 address. Cannot be a symbolic Name!    ", "tags": "", "url": "synaip.html#IsIP"},
     {"title": "synaip.IsIP6", "text": "Returns True, if &quot;Value&quot; is a valid IPv6 address. Cannot be a symbolic Name!    ", "tags": "", "url": "synaip.html#IsIP6"},
     {"title": "synaip.IPToID", "text": "Returns a string with the &quot;Host&quot; ip address converted to binary form.    ", "tags": "", "url": "synaip.html#IPToID"},
     {"title": "synaip.StrToIp6", "text": "Convert IPv6 address from their string form to binary byte array.    ", "tags": "", "url": "synaip.html#StrToIp6"},
     {"title": "synaip.Ip6ToStr", "text": "Convert IPv6 address from binary byte array to string form.    ", "tags": "", "url": "synaip.html#Ip6ToStr"},
     {"title": "synaip.StrToIp", "text": "Convert IPv4 address from their string form to binary.    ", "tags": "", "url": "synaip.html#StrToIp"},
     {"title": "synaip.IpToStr", "text": "Convert IPv4 address from binary to string form.    ", "tags": "", "url": "synaip.html#IpToStr"},
     {"title": "synaip.ReverseIP", "text": "Convert IPv4 address to reverse form.    ", "tags": "", "url": "synaip.html#ReverseIP"},
     {"title": "synaip.ReverseIP6", "text": "Convert IPv6 address to reverse form.    ", "tags": "", "url": "synaip.html#ReverseIP6"},
     {"title": "synaip.ExpandIP6", "text": "Expand short form of IPv6 address to long form.    ", "tags": "", "url": "synaip.html#ExpandIP6"},
     {"title": "synaip.TIp6Bytes", "text": "binary form of IPv6 adress (for string conversion routines)   ", "tags": "", "url": "synaip.html#TIp6Bytes"},
     {"title": "synaip.TIp6Words", "text": "binary form of IPv6 adress (for string conversion routines)   ", "tags": "", "url": "synaip.html#TIp6Words"},
     {"title": "synamisc", "text": "   ", "tags": "", "url": "synamisc.html"},
     {"title": "synamisc.TProxySetting", "text": "   ", "tags": "", "url": "synamisc.TProxySetting.html"},
     {"title": "synamisc.TProxySetting.Host", "text": "   ", "tags": "", "url": "synamisc.TProxySetting.html#Host"},
     {"title": "synamisc.TProxySetting.Port", "text": "   ", "tags": "", "url": "synamisc.TProxySetting.html#Port"},
     {"title": "synamisc.TProxySetting.Bypass", "text": "   ", "tags": "", "url": "synamisc.TProxySetting.html#Bypass"},
     {"title": "synamisc.TProxySetting.ResultCode", "text": "   ", "tags": "", "url": "synamisc.TProxySetting.html#ResultCode"},
     {"title": "synamisc.TProxySetting.Autodetected", "text": "   ", "tags": "", "url": "synamisc.TProxySetting.html#Autodetected"},
     {"title": "synamisc.WakeOnLan", "text": "With this function you can turn on a computer on the network, if this computer supports Wake-on-LAN feature. You need the MAC address (network card identifier) of the computer. You can also assign a target IP addres. If you do not specify it, then broadcast is used to deliver magic wake-on-LAN packet. However broadcasts work only on your local network. When you need to wake-up a computer on another network, you must specify any existing IP addres on same network segment as targeting computer.    ", "tags": "", "url": "synamisc.html#WakeOnLan"},
     {"title": "synamisc.GetDNS", "text": "Autodetect current DNS servers used by the system. If more than one DNS server is defined, then the result is comma-delimited.    ", "tags": "", "url": "synamisc.html#GetDNS"},
     {"title": "synamisc.GetIEProxy", "text": "Read InternetExplorer 5.0+ proxy setting for given protocol. This function works only on windows!    ", "tags": "", "url": "synamisc.html#GetIEProxy"},
     {"title": "synamisc.GetLocalIPsFamily", "text": "Return all known IP addresses of required type on the local system. Addresses are divided by comma/comma-delimited.    ", "tags": "", "url": "synamisc.html#GetLocalIPsFamily"},
     {"title": "synamisc.GetLocalIPs", "text": "Return all known IP addresses on the local system. Addresses are divided by comma/comma-delimited.    ", "tags": "", "url": "synamisc.html#GetLocalIPs"},
     {"title": "synaser", "text": "   ", "tags": "", "url": "synaser.html"},
     {"title": "synaser.TDCB", "text": "   ", "tags": "", "url": "synaser.TDCB.html"},
     {"title": "synaser.TDCB.DCBlength", "text": "   ", "tags": "", "url": "synaser.TDCB.html#DCBlength"},
     {"title": "synaser.TDCB.BaudRate", "text": "   ", "tags": "", "url": "synaser.TDCB.html#BaudRate"},
     {"title": "synaser.TDCB.Flags", "text": "   ", "tags": "", "url": "synaser.TDCB.html#Flags"},
     {"title": "synaser.TDCB.wReserved", "text": "   ", "tags": "", "url": "synaser.TDCB.html#wReserved"},
     {"title": "synaser.TDCB.XonLim", "text": "   ", "tags": "", "url": "synaser.TDCB.html#XonLim"},
     {"title": "synaser.TDCB.XoffLim", "text": "   ", "tags": "", "url": "synaser.TDCB.html#XoffLim"},
     {"title": "synaser.TDCB.ByteSize", "text": "   ", "tags": "", "url": "synaser.TDCB.html#ByteSize"},
     {"title": "synaser.TDCB.Parity", "text": "   ", "tags": "", "url": "synaser.TDCB.html#Parity"},
     {"title": "synaser.TDCB.StopBits", "text": "   ", "tags": "", "url": "synaser.TDCB.html#StopBits"},
     {"title": "synaser.TDCB.XonChar", "text": "   ", "tags": "", "url": "synaser.TDCB.html#XonChar"},
     {"title": "synaser.TDCB.XoffChar", "text": "   ", "tags": "", "url": "synaser.TDCB.html#XoffChar"},
     {"title": "synaser.TDCB.ErrorChar", "text": "   ", "tags": "", "url": "synaser.TDCB.html#ErrorChar"},
     {"title": "synaser.TDCB.EofChar", "text": "   ", "tags": "", "url": "synaser.TDCB.html#EofChar"},
     {"title": "synaser.TDCB.EvtChar", "text": "   ", "tags": "", "url": "synaser.TDCB.html#EvtChar"},
     {"title": "synaser.TDCB.wReserved1", "text": "   ", "tags": "", "url": "synaser.TDCB.html#wReserved1"},
     {"title": "synaser.ESynaSerError", "text": "   ", "tags": "", "url": "synaser.ESynaSerError.html"},
     {"title": "synaser.ESynaSerError.ErrorCode", "text": "   ", "tags": "", "url": "synaser.ESynaSerError.html#ErrorCode"},
     {"title": "synaser.ESynaSerError.ErrorMessage", "text": "   ", "tags": "", "url": "synaser.ESynaSerError.html#ErrorMessage"},
     {"title": "synaser.TBlockSerial", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html"},
     {"title": "synaser.TBlockSerial.FOnStatus", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FOnStatus"},
     {"title": "synaser.TBlockSerial.Fhandle", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#Fhandle"},
     {"title": "synaser.TBlockSerial.FTag", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FTag"},
     {"title": "synaser.TBlockSerial.FDevice", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FDevice"},
     {"title": "synaser.TBlockSerial.FLastError", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FLastError"},
     {"title": "synaser.TBlockSerial.FLastErrorDesc", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FLastErrorDesc"},
     {"title": "synaser.TBlockSerial.FBuffer", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FBuffer"},
     {"title": "synaser.TBlockSerial.FRaiseExcept", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FRaiseExcept"},
     {"title": "synaser.TBlockSerial.FRecvBuffer", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FRecvBuffer"},
     {"title": "synaser.TBlockSerial.FSendBuffer", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FSendBuffer"},
     {"title": "synaser.TBlockSerial.FModemWord", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FModemWord"},
     {"title": "synaser.TBlockSerial.FRTSToggle", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FRTSToggle"},
     {"title": "synaser.TBlockSerial.FDeadlockTimeout", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FDeadlockTimeout"},
     {"title": "synaser.TBlockSerial.FInstanceActive", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FInstanceActive"},
     {"title": "synaser.TBlockSerial.FTestDSR", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FTestDSR"},
     {"title": "synaser.TBlockSerial.FTestCTS", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FTestCTS"},
     {"title": "synaser.TBlockSerial.FLastCR", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FLastCR"},
     {"title": "synaser.TBlockSerial.FLastLF", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FLastLF"},
     {"title": "synaser.TBlockSerial.FMaxLineLength", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FMaxLineLength"},
     {"title": "synaser.TBlockSerial.FLinuxLock", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FLinuxLock"},
     {"title": "synaser.TBlockSerial.FMaxSendBandwidth", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FMaxSendBandwidth"},
     {"title": "synaser.TBlockSerial.FNextSend", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FNextSend"},
     {"title": "synaser.TBlockSerial.FMaxRecvBandwidth", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FMaxRecvBandwidth"},
     {"title": "synaser.TBlockSerial.FNextRecv", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FNextRecv"},
     {"title": "synaser.TBlockSerial.FConvertLineEnd", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FConvertLineEnd"},
     {"title": "synaser.TBlockSerial.FATResult", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FATResult"},
     {"title": "synaser.TBlockSerial.FAtTimeout", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FAtTimeout"},
     {"title": "synaser.TBlockSerial.FInterPacketTimeout", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FInterPacketTimeout"},
     {"title": "synaser.TBlockSerial.FComNr", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#FComNr"},
     {"title": "synaser.TBlockSerial.DCB", "text": "data Control Block with communication parameters. Usable only when you need to call API directly.   ", "tags": "", "url": "synaser.TBlockSerial.html#DCB"},
     {"title": "synaser.TBlockSerial.TermiosStruc", "text": "   ", "tags": "", "url": "synaser.TBlockSerial.html#TermiosStruc"},
     {"title": "synaser.TBlockSerial.SetSizeRecvBuffer", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#SetSizeRecvBuffer"},
     {"title": "synaser.TBlockSerial.GetDSR", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#GetDSR"},
     {"title": "synaser.TBlockSerial.SetDTRF", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#SetDTRF"},
     {"title": "synaser.TBlockSerial.GetCTS", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#GetCTS"},
     {"title": "synaser.TBlockSerial.SetRTSF", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#SetRTSF"},
     {"title": "synaser.TBlockSerial.GetCarrier", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#GetCarrier"},
     {"title": "synaser.TBlockSerial.GetRing", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#GetRing"},
     {"title": "synaser.TBlockSerial.DoStatus", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#DoStatus"},
     {"title": "synaser.TBlockSerial.GetComNr", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#GetComNr"},
     {"title": "synaser.TBlockSerial.PreTestFailing", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#PreTestFailing"},
     {"title": "synaser.TBlockSerial.TestCtrlLine", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#TestCtrlLine"},
     {"title": "synaser.TBlockSerial.DcbToTermios", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#DcbToTermios"},
     {"title": "synaser.TBlockSerial.TermiosToDcb", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#TermiosToDcb"},
     {"title": "synaser.TBlockSerial.LimitBandwidth", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#LimitBandwidth"},
     {"title": "synaser.TBlockSerial.SetBandwidth", "text": "    ", "tags": "", "url": "synaser.TBlockSerial.html#SetBandwidth"},
     {"title": "synaser.TBlockSerial.Create", "text": "Object constructor.    ", "tags": "", "url": "synaser.TBlockSerial.html#Create"},
     {"title": "synaser.TBlockSerial.Destroy", "text": "Object destructor.    ", "tags": "", "url": "synaser.TBlockSerial.html#Destroy"},
     {"title": "synaser.TBlockSerial.GetVersion", "text": "Returns a string containing the version number of the library.    ", "tags": "", "url": "synaser.TBlockSerial.html#GetVersion"},
     {"title": "synaser.TBlockSerial.CloseSocket", "text": "Destroy handle in use. It close connection to serial port.    ", "tags": "", "url": "synaser.TBlockSerial.html#CloseSocket"},
     {"title": "synaser.TBlockSerial.Config", "text": "Reconfigure communication parameters on the fly. You must be connected to port before!        baud Define connection speed. Baud rate can be from 50 to 4000000 bits per second. (it depends on your hardware!) bits Number of bits in communication. parity Define communication parity (N - None, O - Odd, E - Even, M - Mark or S - Space). stop Define number of stopbits. Use constants SB1, SB1andHalf and SB2. softflow Enable XON/XOFF handshake. hardflow Enable CTS/RTS handshake. baud Define connection speed. Baud rate can be from 50 to 4000000 bits per second. (it depends on your hardware!) bits Number of bits in communication. parity Define communication parity (N - None, O - Odd, E - Even, M - Mark or S - Space). stop Define number of stopbits. Use constants SB1, SB1andHalf and SB2. softflow Enable XON/XOFF handshake. hardflow Enable CTS/RTS handshake. ", "tags": "", "url": "synaser.TBlockSerial.html#Config"},
     {"title": "synaser.TBlockSerial.Connect", "text": "Connects to the port indicated by comport. Comport can be used in Windows style (COM2), or in Linux style (/dev/ttyS1). When you use windows style in Linux, then it will be converted to Linux name. And vice versa! However you can specify any device name! (other device names then standart is not converted!)  After successfull connection the DTR signal is set (if you not set hardware handshake, then the RTS signal is set, too!)  Connection parameters is predefined by your system configuration. If you need use another parameters, then you can use Config method after. Notes:       Remember, the commonly used serial Laplink cable does not support hardware handshake.   Before setting any handshake you must be sure that it is supported by your hardware.   Some serial devices are slow. In some cases you must wait up to a few seconds after connection for the device to respond.   when you connect to a modem device, then is best to test it by an empty AT command. (call ATCommand('AT'))       ", "tags": "", "url": "synaser.TBlockSerial.html#Connect"},
     {"title": "synaser.TBlockSerial.SetCommState", "text": "Set communication parameters from the DCB structure (the DCB structure is simulated under Linux).    ", "tags": "", "url": "synaser.TBlockSerial.html#SetCommState"},
     {"title": "synaser.TBlockSerial.GetCommState", "text": "Read communication parameters into the DCB structure (DCB structure is simulated under Linux).    ", "tags": "", "url": "synaser.TBlockSerial.html#GetCommState"},
     {"title": "synaser.TBlockSerial.SendBuffer", "text": "Sends Length bytes of data from Buffer through the connected port.    ", "tags": "", "url": "synaser.TBlockSerial.html#SendBuffer"},
     {"title": "synaser.TBlockSerial.SendByte", "text": "One data BYTE is sent.    ", "tags": "", "url": "synaser.TBlockSerial.html#SendByte"},
     {"title": "synaser.TBlockSerial.SendString", "text": "Send the string in the data parameter. No terminator is appended by this method. If you need to send a string with CR/LF terminator, you must append the CR/LF characters to the data string!  Since no terminator is appended, you can use this function for sending binary data too.    ", "tags": "", "url": "synaser.TBlockSerial.html#SendString"},
     {"title": "synaser.TBlockSerial.SendInteger", "text": "send four bytes as integer.    ", "tags": "", "url": "synaser.TBlockSerial.html#SendInteger"},
     {"title": "synaser.TBlockSerial.SendBlock", "text": "send data as one block. Each block begins with integer value with Length of block.    ", "tags": "", "url": "synaser.TBlockSerial.html#SendBlock"},
     {"title": "synaser.TBlockSerial.SendStreamRaw", "text": "send content of stream from current position    ", "tags": "", "url": "synaser.TBlockSerial.html#SendStreamRaw"},
     {"title": "synaser.TBlockSerial.SendStream", "text": "send content of stream as block. see SendBlock    ", "tags": "", "url": "synaser.TBlockSerial.html#SendStream"},
     {"title": "synaser.TBlockSerial.SendStreamIndy", "text": "send content of stream as block, but this is compatioble with Indy library. (it have swapped lenght of block). See SendStream    ", "tags": "", "url": "synaser.TBlockSerial.html#SendStreamIndy"},
     {"title": "synaser.TBlockSerial.RecvBuffer", "text": "Waits until the allocated buffer is filled by received data. Returns number of data bytes received, which equals to the Length value under normal operation. If it is not equal, the communication channel is possibly broken.  This method not using any internal buffering, like all others receiving methods. You cannot freely combine this method with all others receiving methods!    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvBuffer"},
     {"title": "synaser.TBlockSerial.RecvBufferEx", "text": "Method waits until data is received. If no data is received within the Timeout (in milliseconds) period, LastError is set to ErrTimeout. This method is used to read any amount of data (e. g. 1MB), and may be freely combined with all receviving methods what have Timeout parameter, like the RecvString, RecvByte or RecvTerminated methods.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvBufferEx"},
     {"title": "synaser.TBlockSerial.RecvBufferStr", "text": "It is like recvBufferEx, but data is readed to dynamicly allocated binary string.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvBufferStr"},
     {"title": "synaser.TBlockSerial.RecvPacket", "text": "Read all available data and return it in the function result string. This function may be combined with RecvString, RecvByte or related methods.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvPacket"},
     {"title": "synaser.TBlockSerial.RecvByte", "text": "Waits until one data byte is received which is returned as the function result. If no data is received within the Timeout (in milliseconds) period, LastError is set to ErrTimeout.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvByte"},
     {"title": "synaser.TBlockSerial.RecvTerminated", "text": "This method waits until a terminated data string is received. This string is terminated by the Terminator string. The resulting string is returned without this termination string! If no data is received within the Timeout (in milliseconds) period, LastError is set to ErrTimeout.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvTerminated"},
     {"title": "synaser.TBlockSerial.Recvstring", "text": "This method waits until a terminated data string is received. The string is terminated by a CR/LF sequence. The resulting string is returned without the terminator (CR/LF)! If no data is received within the Timeout (in milliseconds) period, LastError is set to ErrTimeout.  If ConvertLineEnd is used, then the CR/LF sequence may not be exactly CR/LF. See the description of ConvertLineEnd.  This method serves for line protocol implementation and uses its own buffers to maximize performance. Therefore do NOT use this method with the RecvBuffer method to receive data as it may cause data loss.    ", "tags": "", "url": "synaser.TBlockSerial.html#Recvstring"},
     {"title": "synaser.TBlockSerial.RecvInteger", "text": "Waits until four data bytes are received which is returned as the function integer result. If no data is received within the Timeout (in milliseconds) period, LastError is set to ErrTimeout.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvInteger"},
     {"title": "synaser.TBlockSerial.RecvBlock", "text": "Waits until one data block is received. See sendblock. If no data is received within the Timeout (in milliseconds) period, LastError is set to ErrTimeout.    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvBlock"},
     {"title": "synaser.TBlockSerial.RecvStreamRaw", "text": "Receive all data to stream, until some error occured. (for example timeout)    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvStreamRaw"},
     {"title": "synaser.TBlockSerial.RecvStreamSize", "text": "receive requested count of bytes to stream    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvStreamSize"},
     {"title": "synaser.TBlockSerial.RecvStream", "text": "receive block of data to stream. (Data can be sended by sendstream    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvStream"},
     {"title": "synaser.TBlockSerial.RecvStreamIndy", "text": "receive block of data to stream. (Data can be sended by sendstreamIndy    ", "tags": "", "url": "synaser.TBlockSerial.html#RecvStreamIndy"},
     {"title": "synaser.TBlockSerial.WaitingData", "text": "Returns the number of received bytes waiting for reading. 0 is returned when there is no data waiting.    ", "tags": "", "url": "synaser.TBlockSerial.html#WaitingData"},
     {"title": "synaser.TBlockSerial.WaitingDataEx", "text": "Same as WaitingData, but in respect to data in the internal LineBuffer.    ", "tags": "", "url": "synaser.TBlockSerial.html#WaitingDataEx"},
     {"title": "synaser.TBlockSerial.SendingData", "text": "Returns the number of bytes waiting to be sent in the output buffer. 0 is returned when the output buffer is empty.    ", "tags": "", "url": "synaser.TBlockSerial.html#SendingData"},
     {"title": "synaser.TBlockSerial.EnableRTSToggle", "text": "Enable or disable RTS driven communication (half-duplex). It can be used to communicate with RS485 converters, or other special equipment. If you enable this feature, the system automatically controls the RTS signal.  Notes:       On Windows NT (or higher) ir RTS signal driven by system driver.   On Win9x family is used special code for waiting until last byte is sended from your UART.   On Linux you must have kernel 2.1 or higher!       ", "tags": "", "url": "synaser.TBlockSerial.html#EnableRTSToggle"},
     {"title": "synaser.TBlockSerial.Flush", "text": "Waits until all data to is sent and buffers are emptied. Warning: On Windows systems is this method returns when all buffers are flushed to the serial port controller, before the last byte is sent!    ", "tags": "", "url": "synaser.TBlockSerial.html#Flush"},
     {"title": "synaser.TBlockSerial.Purge", "text": "Unconditionally empty all buffers. It is good when you need to interrupt communication and for cleanups.    ", "tags": "", "url": "synaser.TBlockSerial.html#Purge"},
     {"title": "synaser.TBlockSerial.CanRead", "text": "Returns True, if you can from read any data from the port. Status is tested for a period of time given by the Timeout parameter (in milliseconds). If the value of the Timeout parameter is 0, the status is tested only once and the function returns immediately. If the value of the Timeout parameter is set to -1, the function returns only after it detects data on the port (this may cause the process to hang).    ", "tags": "", "url": "synaser.TBlockSerial.html#CanRead"},
     {"title": "synaser.TBlockSerial.CanWrite", "text": "Returns True, if you can write any data to the port (this function is not sending the contents of the buffer). Status is tested for a period of time given by the Timeout parameter (in milliseconds). If the value of the Timeout parameter is 0, the status is tested only once and the function returns immediately. If the value of the Timeout parameter is set to -1, the function returns only after it detects that it can write data to the port (this may cause the process to hang).    ", "tags": "", "url": "synaser.TBlockSerial.html#CanWrite"},
     {"title": "synaser.TBlockSerial.CanReadEx", "text": "Same as CanRead, but the test is against data in the internal LineBuffer too.    ", "tags": "", "url": "synaser.TBlockSerial.html#CanReadEx"},
     {"title": "synaser.TBlockSerial.ModemStatus", "text": "Returns the status word of the modem. Decoding the status word could yield the status of carrier detect signaland other signals. This method is used internally by the modem status reading properties. You usually do not need to call this method directly.    ", "tags": "", "url": "synaser.TBlockSerial.html#ModemStatus"},
     {"title": "synaser.TBlockSerial.SetBreak", "text": "Send a break signal to the communication device for Duration milliseconds.    ", "tags": "", "url": "synaser.TBlockSerial.html#SetBreak"},
     {"title": "synaser.TBlockSerial.ATCommand", "text": "This function is designed to send AT commands to the modem. The AT command is sent in the Value parameter and the response is returned in the function return value (may contain multiple lines!). If the AT command is processed successfully (modem returns OK), then the ATResult property is set to True.  This function is designed only for AT commands that return OK or ERROR response! To call connection commands the ATConnect method. Remember, when you connect to a modem device, it is in AT command mode. Now you can send AT commands to the modem. If you need to transfer data to the modem on the other side of the line, you must first switch to data mode using the ATConnect method.    ", "tags": "", "url": "synaser.TBlockSerial.html#ATCommand"},
     {"title": "synaser.TBlockSerial.ATConnect", "text": "This function is used to send connect type AT commands to the modem. It is for commands to switch to connected state. (ATD, ATA, ATO,...) It sends the AT command in the Value parameter and returns the modem's response (may be multiple lines - usually with connection parameters info). If the AT command is processed successfully (the modem returns CONNECT), then the ATResult property is set to True.  This function is designed only for AT commands which respond by CONNECT, BUSY, NO DIALTONE NO CARRIER or ERROR. For other AT commands use the ATCommand method.  The connect timeout is 90*ATTimeout. If this command is successful (ATresult is True), then the modem is in data state. When you now send or receive some data, it is not to or from your modem, but from the modem on other side of the line. Now you can transfer your data. If the connection attempt failed (ATResult is False), then the modem is still in AT command mode.    ", "tags": "", "url": "synaser.TBlockSerial.html#ATConnect"},
     {"title": "synaser.TBlockSerial.SerialCheck", "text": "If you &quot;manually&quot; call API functions, forward their return code in the SerialResult parameter to this function, which evaluates it and sets LastError and LastErrorDesc.    ", "tags": "", "url": "synaser.TBlockSerial.html#SerialCheck"},
     {"title": "synaser.TBlockSerial.ExceptCheck", "text": "If Lasterror is not 0 and exceptions are enabled, then this procedure raises an exception. This method is used internally. You may need it only in special cases.    ", "tags": "", "url": "synaser.TBlockSerial.html#ExceptCheck"},
     {"title": "synaser.TBlockSerial.SetSynaError", "text": "Set Synaser to error state with ErrNumber code. Usually used by internal routines.    ", "tags": "", "url": "synaser.TBlockSerial.html#SetSynaError"},
     {"title": "synaser.TBlockSerial.RaiseSynaError", "text": "Raise Synaser error with ErrNumber code. Usually used by internal routines.    ", "tags": "", "url": "synaser.TBlockSerial.html#RaiseSynaError"},
     {"title": "synaser.TBlockSerial.GetErrorDesc", "text": "Returns the descriptive text associated with ErrorCode. You need this method only in special cases. Description of LastError is now accessible through the LastErrorDesc property.    ", "tags": "", "url": "synaser.TBlockSerial.html#GetErrorDesc"},
     {"title": "synaser.TBlockSerial.Device", "text": "True device name of currently used port   ", "tags": "", "url": "synaser.TBlockSerial.html#Device"},
     {"title": "synaser.TBlockSerial.LastError", "text": "Error code of last operation. Value is defined by the host operating system, but value 0 is always OK.   ", "tags": "", "url": "synaser.TBlockSerial.html#LastError"},
     {"title": "synaser.TBlockSerial.LastErrorDesc", "text": "Human readable description of LastError code.   ", "tags": "", "url": "synaser.TBlockSerial.html#LastErrorDesc"},
     {"title": "synaser.TBlockSerial.ATResult", "text": "Indicates if the last ATCommand or ATConnect method was successful   ", "tags": "", "url": "synaser.TBlockSerial.html#ATResult"},
     {"title": "synaser.TBlockSerial.RTS", "text": "Read the value of the RTS signal.   ", "tags": "", "url": "synaser.TBlockSerial.html#RTS"},
     {"title": "synaser.TBlockSerial.CTS", "text": "Indicates the presence of the CTS signal   ", "tags": "", "url": "synaser.TBlockSerial.html#CTS"},
     {"title": "synaser.TBlockSerial.DTR", "text": "Use this property to set the value of the DTR signal.   ", "tags": "", "url": "synaser.TBlockSerial.html#DTR"},
     {"title": "synaser.TBlockSerial.DSR", "text": "Exposes the status of the DSR signal.   ", "tags": "", "url": "synaser.TBlockSerial.html#DSR"},
     {"title": "synaser.TBlockSerial.Carrier", "text": "Indicates the presence of the Carrier signal   ", "tags": "", "url": "synaser.TBlockSerial.html#Carrier"},
     {"title": "synaser.TBlockSerial.Ring", "text": "Reflects the status of the Ring signal.   ", "tags": "", "url": "synaser.TBlockSerial.html#Ring"},
     {"title": "synaser.TBlockSerial.InstanceActive", "text": "indicates if this instance of SynaSer is active. (Connected to some port)   ", "tags": "", "url": "synaser.TBlockSerial.html#InstanceActive"},
     {"title": "synaser.TBlockSerial.MaxSendBandwidth", "text": "Defines maximum bandwidth for all sending operations in bytes per second. If this value is set to 0 (default), bandwidth limitation is not used.   ", "tags": "", "url": "synaser.TBlockSerial.html#MaxSendBandwidth"},
     {"title": "synaser.TBlockSerial.MaxRecvBandwidth", "text": "Defines maximum bandwidth for all receiving operations in bytes per second. If this value is set to 0 (default), bandwidth limitation is not used.   ", "tags": "", "url": "synaser.TBlockSerial.html#MaxRecvBandwidth"},
     {"title": "synaser.TBlockSerial.MaxBandwidth", "text": "Defines maximum bandwidth for all sending and receiving operations in bytes per second. If this value is set to 0 (default), bandwidth limitation is not used.   ", "tags": "", "url": "synaser.TBlockSerial.html#MaxBandwidth"},
     {"title": "synaser.TBlockSerial.SizeRecvBuffer", "text": "Size of the Windows internal receive buffer. Default value is usually 4096 bytes. Note: Valid only in Windows versions!   ", "tags": "", "url": "synaser.TBlockSerial.html#SizeRecvBuffer"},
     {"title": "synaser.TBlockSerial.Tag", "text": "Freely usable property   ", "tags": "", "url": "synaser.TBlockSerial.html#Tag"},
     {"title": "synaser.TBlockSerial.Handle", "text": "Contains the handle of the open communication port. You may need this value to directly call communication functions outside SynaSer.   ", "tags": "", "url": "synaser.TBlockSerial.html#Handle"},
     {"title": "synaser.TBlockSerial.LineBuffer", "text": "Internally used read buffer.   ", "tags": "", "url": "synaser.TBlockSerial.html#LineBuffer"},
     {"title": "synaser.TBlockSerial.RaiseExcept", "text": "If True, communication errors raise exceptions. If False (default), only the LastError value is set.   ", "tags": "", "url": "synaser.TBlockSerial.html#RaiseExcept"},
     {"title": "synaser.TBlockSerial.OnStatus", "text": "This event is triggered when the communication status changes. It can be used to monitor communication status.   ", "tags": "", "url": "synaser.TBlockSerial.html#OnStatus"},
     {"title": "synaser.TBlockSerial.TestDSR", "text": "If you set this property to True, then the value of the DSR signal is tested before every data transfer. It can be used to detect the presence of a communications device.   ", "tags": "", "url": "synaser.TBlockSerial.html#TestDSR"},
     {"title": "synaser.TBlockSerial.TestCTS", "text": "If you set this property to True, then the value of the CTS signal is tested before every data transfer. It can be used to detect the presence of a communications device. Warning: This property cannot be used if you need hardware handshake!   ", "tags": "", "url": "synaser.TBlockSerial.html#TestCTS"},
     {"title": "synaser.TBlockSerial.MaxLineLength", "text": "Use this property you to limit the maximum size of LineBuffer (as a protection against unlimited memory allocation for LineBuffer). Default value is 0 - no limit.   ", "tags": "", "url": "synaser.TBlockSerial.html#MaxLineLength"},
     {"title": "synaser.TBlockSerial.DeadlockTimeout", "text": "This timeout value is used as deadlock protection when trying to send data to (or receive data from) a device that stopped communicating during data transmission (e.g. by physically disconnecting the device). The timeout value is in milliseconds. The default value is 30,000 (30 seconds).   ", "tags": "", "url": "synaser.TBlockSerial.html#DeadlockTimeout"},
     {"title": "synaser.TBlockSerial.LinuxLock", "text": "If set to True (default value), port locking is enabled (under Linux only). WARNING: To use this feature, the application must run by a user with full permission to the /var/lock directory!   ", "tags": "", "url": "synaser.TBlockSerial.html#LinuxLock"},
     {"title": "synaser.TBlockSerial.ConvertLineEnd", "text": "Indicates if non-standard line terminators should be converted to a CR/LF pair (standard DOS line terminator). If True, line terminators CR, single LF or LF/CR are converted to CR/LF. Defaults to False. This property has effect only on the behavior of the RecvString method.   ", "tags": "", "url": "synaser.TBlockSerial.html#ConvertLineEnd"},
     {"title": "synaser.TBlockSerial.AtTimeout", "text": "Timeout for AT modem based operations   ", "tags": "", "url": "synaser.TBlockSerial.html#AtTimeout"},
     {"title": "synaser.TBlockSerial.InterPacketTimeout", "text": "If True (default), then all timeouts is timeout between two characters. If False, then timeout is overall for whoole reading operation.   ", "tags": "", "url": "synaser.TBlockSerial.html#InterPacketTimeout"},
     {"title": "synaser.CR", "text": "   ", "tags": "", "url": "synaser.html#CR"},
     {"title": "synaser.LF", "text": "   ", "tags": "", "url": "synaser.html#LF"},
     {"title": "synaser.CRLF", "text": "   ", "tags": "", "url": "synaser.html#CRLF"},
     {"title": "synaser.cSerialChunk", "text": "   ", "tags": "", "url": "synaser.html#cSerialChunk"},
     {"title": "synaser.LockfileDirectory", "text": "   ", "tags": "", "url": "synaser.html#LockfileDirectory"},
     {"title": "synaser.PortIsClosed", "text": "   ", "tags": "", "url": "synaser.html#PortIsClosed"},
     {"title": "synaser.ErrAccessDenied", "text": "   ", "tags": "", "url": "synaser.html#ErrAccessDenied"},
     {"title": "synaser.ErrAlreadyOwned", "text": "   ", "tags": "", "url": "synaser.html#ErrAlreadyOwned"},
     {"title": "synaser.ErrAlreadyInUse", "text": "   ", "tags": "", "url": "synaser.html#ErrAlreadyInUse"},
     {"title": "synaser.ErrWrongParameter", "text": "   ", "tags": "", "url": "synaser.html#ErrWrongParameter"},
     {"title": "synaser.ErrPortNotOpen", "text": "   ", "tags": "", "url": "synaser.html#ErrPortNotOpen"},
     {"title": "synaser.ErrNoDeviceAnswer", "text": "   ", "tags": "", "url": "synaser.html#ErrNoDeviceAnswer"},
     {"title": "synaser.ErrMaxBuffer", "text": "   ", "tags": "", "url": "synaser.html#ErrMaxBuffer"},
     {"title": "synaser.ErrTimeout", "text": "   ", "tags": "", "url": "synaser.html#ErrTimeout"},
     {"title": "synaser.ErrNotRead", "text": "   ", "tags": "", "url": "synaser.html#ErrNotRead"},
     {"title": "synaser.ErrFrame", "text": "   ", "tags": "", "url": "synaser.html#ErrFrame"},
     {"title": "synaser.ErrOverrun", "text": "   ", "tags": "", "url": "synaser.html#ErrOverrun"},
     {"title": "synaser.ErrRxOver", "text": "   ", "tags": "", "url": "synaser.html#ErrRxOver"},
     {"title": "synaser.ErrRxParity", "text": "   ", "tags": "", "url": "synaser.html#ErrRxParity"},
     {"title": "synaser.ErrTxFull", "text": "   ", "tags": "", "url": "synaser.html#ErrTxFull"},
     {"title": "synaser.dcb_Binary", "text": "   ", "tags": "", "url": "synaser.html#dcb_Binary"},
     {"title": "synaser.dcb_ParityCheck", "text": "   ", "tags": "", "url": "synaser.html#dcb_ParityCheck"},
     {"title": "synaser.dcb_OutxCtsFlow", "text": "   ", "tags": "", "url": "synaser.html#dcb_OutxCtsFlow"},
     {"title": "synaser.dcb_OutxDsrFlow", "text": "   ", "tags": "", "url": "synaser.html#dcb_OutxDsrFlow"},
     {"title": "synaser.dcb_DtrControlMask", "text": "   ", "tags": "", "url": "synaser.html#dcb_DtrControlMask"},
     {"title": "synaser.dcb_DtrControlDisable", "text": "   ", "tags": "", "url": "synaser.html#dcb_DtrControlDisable"},
     {"title": "synaser.dcb_DtrControlEnable", "text": "   ", "tags": "", "url": "synaser.html#dcb_DtrControlEnable"},
     {"title": "synaser.dcb_DtrControlHandshake", "text": "   ", "tags": "", "url": "synaser.html#dcb_DtrControlHandshake"},
     {"title": "synaser.dcb_DsrSensivity", "text": "   ", "tags": "", "url": "synaser.html#dcb_DsrSensivity"},
     {"title": "synaser.dcb_TXContinueOnXoff", "text": "   ", "tags": "", "url": "synaser.html#dcb_TXContinueOnXoff"},
     {"title": "synaser.dcb_OutX", "text": "   ", "tags": "", "url": "synaser.html#dcb_OutX"},
     {"title": "synaser.dcb_InX", "text": "   ", "tags": "", "url": "synaser.html#dcb_InX"},
     {"title": "synaser.dcb_ErrorChar", "text": "   ", "tags": "", "url": "synaser.html#dcb_ErrorChar"},
     {"title": "synaser.dcb_NullStrip", "text": "   ", "tags": "", "url": "synaser.html#dcb_NullStrip"},
     {"title": "synaser.dcb_RtsControlMask", "text": "   ", "tags": "", "url": "synaser.html#dcb_RtsControlMask"},
     {"title": "synaser.dcb_RtsControlDisable", "text": "   ", "tags": "", "url": "synaser.html#dcb_RtsControlDisable"},
     {"title": "synaser.dcb_RtsControlEnable", "text": "   ", "tags": "", "url": "synaser.html#dcb_RtsControlEnable"},
     {"title": "synaser.dcb_RtsControlHandshake", "text": "   ", "tags": "", "url": "synaser.html#dcb_RtsControlHandshake"},
     {"title": "synaser.dcb_RtsControlToggle", "text": "   ", "tags": "", "url": "synaser.html#dcb_RtsControlToggle"},
     {"title": "synaser.dcb_AbortOnError", "text": "   ", "tags": "", "url": "synaser.html#dcb_AbortOnError"},
     {"title": "synaser.dcb_Reserveds", "text": "   ", "tags": "", "url": "synaser.html#dcb_Reserveds"},
     {"title": "synaser.SB1", "text": "stopbit value for 1 stopbit   ", "tags": "", "url": "synaser.html#SB1"},
     {"title": "synaser.SB1andHalf", "text": "stopbit value for 1.5 stopbit   ", "tags": "", "url": "synaser.html#SB1andHalf"},
     {"title": "synaser.SB2", "text": "stopbit value for 2 stopbits   ", "tags": "", "url": "synaser.html#SB2"},
     {"title": "synaser.INVALID_HANDLE_VALUE", "text": "   ", "tags": "", "url": "synaser.html#INVALID_HANDLE_VALUE"},
     {"title": "synaser.CS7fix", "text": "   ", "tags": "", "url": "synaser.html#CS7fix"},
     {"title": "synaser.MaxRates", "text": "   ", "tags": "", "url": "synaser.html#MaxRates"},
     {"title": "synaser.Rates", "text": "   ", "tags": "", "url": "synaser.html#Rates"},
     {"title": "synaser.sOK", "text": "   ", "tags": "", "url": "synaser.html#sOK"},
     {"title": "synaser.sErr", "text": "   ", "tags": "", "url": "synaser.html#sErr"},
     {"title": "synaser.GetSerialPortNames", "text": "Returns list of existing computer serial ports. Working properly only in Windows!    ", "tags": "", "url": "synaser.html#GetSerialPortNames"},
     {"title": "synaser.PDCB", "text": "   ", "tags": "", "url": "synaser.html#PDCB"},
     {"title": "synaser.THookSerialReason", "text": "Possible status event types for THookSerialStatus    HR_SerialClose    HR_Connect    HR_CanRead    HR_CanWrite    HR_ReadCount    HR_WriteCount    HR_Wait   ", "tags": "", "url": "synaser.html#THookSerialReason"},
     {"title": "synaser.THookSerialStatus", "text": "procedural prototype for status event hooking    ", "tags": "", "url": "synaser.html#THookSerialStatus"},
     {"title": "synautil", "text": "   ", "tags": "", "url": "synautil.html"},
     {"title": "synautil.TimeZoneBias", "text": "Return your timezone bias from UTC time in minutes.    ", "tags": "", "url": "synautil.html#TimeZoneBias"},
     {"title": "synautil.TimeZone", "text": "Return your timezone bias from UTC time in string representation like &quot;+0200&quot;.    ", "tags": "", "url": "synautil.html#TimeZone"},
     {"title": "synautil.Rfc822DateTime", "text": "Returns current time in format defined in RFC-822. Useful for SMTP messages, but other protocols use this time format as well. Results contains the timezone specification. Four digit year is used to break any Y2K concerns. (Example 'Fri, 15 Oct 1999 21:14:56 +0200')    ", "tags": "", "url": "synautil.html#Rfc822DateTime"},
     {"title": "synautil.Rfc3339DateTime", "text": "Returns date and time in format defined in RFC-3339 in format &quot;yyyy-mm-ddThh:nn:ss.zzz&quot;    ", "tags": "", "url": "synautil.html#Rfc3339DateTime"},
     {"title": "synautil.CDateTime", "text": "Returns date and time in format defined in C compilers in format &quot;mmm dd hh:nn:ss&quot;    ", "tags": "", "url": "synautil.html#CDateTime"},
     {"title": "synautil.SimpleDateTime", "text": "Returns date and time in format defined in format 'yymmdd hhnnss'    ", "tags": "", "url": "synautil.html#SimpleDateTime"},
     {"title": "synautil.AnsiCDateTime", "text": "Returns date and time in format defined in ANSI C compilers in format &quot;ddd mmm d hh:nn:ss yyyy&quot;    ", "tags": "", "url": "synautil.html#AnsiCDateTime"},
     {"title": "synautil.GetMonthNumber", "text": "Decode three-letter string with name of month to their month number. If string not match any month name, then is returned 0. For parsing are used predefined names for English, French and German and names from system locale too.    ", "tags": "", "url": "synautil.html#GetMonthNumber"},
     {"title": "synautil.GetTimeFromStr", "text": "Return decoded time from given string. Time must be witch separator ':'. You can use &quot;hh:mm&quot; or &quot;hh:mm:ss&quot;.    ", "tags": "", "url": "synautil.html#GetTimeFromStr"},
     {"title": "synautil.DecodeTimeZone", "text": "Decode string representation of TimeZone (CEST, GMT, +0200, -0800, etc.) to timezone offset.    ", "tags": "", "url": "synautil.html#DecodeTimeZone"},
     {"title": "synautil.GetDateMDYFromStr", "text": "Decode string in format &quot;m-d-y&quot; to TDateTime type.    ", "tags": "", "url": "synautil.html#GetDateMDYFromStr"},
     {"title": "synautil.DecodeRfcDateTime", "text": "Decode various string representations of date and time to Tdatetime type. This function do all timezone corrections too! This function can decode lot of formats like:    ddd, d mmm yyyy hh:mm:ss ddd, d mmm yy hh:mm:ss ddd, mmm d yyyy hh:mm:ss ddd mmm dd hh:mm:ss yyyy    and more with lot of modifications, include:    Sun, 06 Nov 1994 08:49:37 GMT    ; RFC 822, updated by RFC 1123 Sunday, 06-Nov-94 08:49:37 GMT   ; RFC 850, obsoleted by RFC 1036 Sun Nov  6 08:49:37 1994         ; ANSI C   Timezone corrections known lot of symbolic timezone names (like CEST, EDT, etc.) or numeric representation (like +0200). By convention defined in RFC timezone +0000 is GMT and -0000 is current your system timezone.    ", "tags": "", "url": "synautil.html#DecodeRfcDateTime"},
     {"title": "synautil.GetUTTime", "text": "Return current system date and time in UTC timezone.    ", "tags": "", "url": "synautil.html#GetUTTime"},
     {"title": "synautil.SetUTTime", "text": "Set Newdt as current system date and time in UTC timezone. This function work only if you have administrator rights!    ", "tags": "", "url": "synautil.html#SetUTTime"},
     {"title": "synautil.GetTick", "text": "Return current value of system timer with precizion 1 millisecond. Good for measure time difference.    ", "tags": "", "url": "synautil.html#GetTick"},
     {"title": "synautil.TickDelta", "text": "Return difference between two timestamps. It working fine only for differences smaller then maxint. (difference must be smaller then 24 days.)    ", "tags": "", "url": "synautil.html#TickDelta"},
     {"title": "synautil.CodeInt", "text": "Return two characters, which ordinal values represents the value in byte format. (High-endian)    ", "tags": "", "url": "synautil.html#CodeInt"},
     {"title": "synautil.DecodeInt", "text": "Decodes two characters located at &quot;Index&quot; offset position of the &quot;Value&quot; string to Word values.    ", "tags": "", "url": "synautil.html#DecodeInt"},
     {"title": "synautil.CodeLongInt", "text": "Return four characters, which ordinal values represents the value in byte format. (High-endian)    ", "tags": "", "url": "synautil.html#CodeLongInt"},
     {"title": "synautil.DecodeLongInt", "text": "Decodes four characters located at &quot;Index&quot; offset position of the &quot;Value&quot; string to LongInt values.    ", "tags": "", "url": "synautil.html#DecodeLongInt"},
     {"title": "synautil.DumpStr", "text": "Dump binary buffer stored in a string to a result string.    ", "tags": "", "url": "synautil.html#DumpStr"},
     {"title": "synautil.DumpExStr", "text": "Dump binary buffer stored in a string to a result string. All bytes with code of character is written as character, not as hexadecimal value.    ", "tags": "", "url": "synautil.html#DumpExStr"},
     {"title": "synautil.Dump", "text": "Dump binary buffer stored in a string to a file with DumpFile filename.    ", "tags": "", "url": "synautil.html#Dump"},
     {"title": "synautil.DumpEx", "text": "Dump binary buffer stored in a string to a file with DumpFile filename. All bytes with code of character is written as character, not as hexadecimal value.    ", "tags": "", "url": "synautil.html#DumpEx"},
     {"title": "synautil.TrimSPLeft", "text": "Like TrimLeft, but remove only spaces, not control characters!    ", "tags": "", "url": "synautil.html#TrimSPLeft"},
     {"title": "synautil.TrimSPRight", "text": "Like TrimRight, but remove only spaces, not control characters!    ", "tags": "", "url": "synautil.html#TrimSPRight"},
     {"title": "synautil.TrimSP", "text": "Like Trim, but remove only spaces, not control characters!    ", "tags": "", "url": "synautil.html#TrimSP"},
     {"title": "synautil.SeparateLeft", "text": "Returns a portion of the &quot;Value&quot; string located to the left of the &quot;Delimiter&quot; string. If a delimiter is not found, results is original string.    ", "tags": "", "url": "synautil.html#SeparateLeft"},
     {"title": "synautil.SeparateRight", "text": "Returns the portion of the &quot;Value&quot; string located to the right of the &quot;Delimiter&quot; string. If a delimiter is not found, results is original string.    ", "tags": "", "url": "synautil.html#SeparateRight"},
     {"title": "synautil.GetParameter", "text": "Returns parameter value from string in format: parameter1=&quot;value1&quot;; parameter2=value2    ", "tags": "", "url": "synautil.html#GetParameter"},
     {"title": "synautil.ParseParametersEx", "text": "parse value string with elements differed by Delimiter into stringlist.    ", "tags": "", "url": "synautil.html#ParseParametersEx"},
     {"title": "synautil.ParseParameters", "text": "parse value string with elements differed by ';' into stringlist.    ", "tags": "", "url": "synautil.html#ParseParameters"},
     {"title": "synautil.IndexByBegin", "text": "Index of string in stringlist with same beginning as Value is returned.    ", "tags": "", "url": "synautil.html#IndexByBegin"},
     {"title": "synautil.GetEmailAddr", "text": "Returns only the e-mail portion of an address from the full address format. i.e. returns 'nobody@somewhere.com' from '&quot;someone&quot; &lt;nobody@somewhere.com&gt;'    ", "tags": "", "url": "synautil.html#GetEmailAddr"},
     {"title": "synautil.GetEmailDesc", "text": "Returns only the description part from a full address format. i.e. returns 'someone' from '&quot;someone&quot; &lt;nobody@somewhere.com&gt;'    ", "tags": "", "url": "synautil.html#GetEmailDesc"},
     {"title": "synautil.StrToHex", "text": "Returns a string with hexadecimal digits representing the corresponding values of the bytes found in &quot;Value&quot; string.    ", "tags": "", "url": "synautil.html#StrToHex"},
     {"title": "synautil.IntToBin", "text": "Returns a string of binary &quot;Digits&quot; representing &quot;Value&quot;.    ", "tags": "", "url": "synautil.html#IntToBin"},
     {"title": "synautil.BinToInt", "text": "Returns an integer equivalent of the binary string in &quot;Value&quot;. (i.e. ('10001010') returns 138)    ", "tags": "", "url": "synautil.html#BinToInt"},
     {"title": "synautil.ParseURL", "text": "Parses a URL to its various components.    ", "tags": "", "url": "synautil.html#ParseURL"},
     {"title": "synautil.ReplaceString", "text": "Replaces all &quot;Search&quot; string values found within &quot;Value&quot; string, with the &quot;Replace&quot; string value.    ", "tags": "", "url": "synautil.html#ReplaceString"},
     {"title": "synautil.RPosEx", "text": "It is like RPos, but search is from specified possition.    ", "tags": "", "url": "synautil.html#RPosEx"},
     {"title": "synautil.RPos", "text": "It is like POS function, but from right side of Value string.    ", "tags": "", "url": "synautil.html#RPos"},
     {"title": "synautil.FetchBin", "text": "Like fetch, but working with binary strings, not with text.    ", "tags": "", "url": "synautil.html#FetchBin"},
     {"title": "synautil.Fetch", "text": "Fetch string from left of Value string.    ", "tags": "", "url": "synautil.html#Fetch"},
     {"title": "synautil.FetchEx", "text": "Fetch string from left of Value string. This function ignore delimitesr inside quotations.    ", "tags": "", "url": "synautil.html#FetchEx"},
     {"title": "synautil.IsBinaryString", "text": "If string is binary string (contains non-printable characters), then is returned true.    ", "tags": "", "url": "synautil.html#IsBinaryString"},
     {"title": "synautil.PosCRLF", "text": "return position of string terminator in string. If terminator found, then is returned in terminator parameter. Possible line terminators are: CRLF, LFCR, CR, LF    ", "tags": "", "url": "synautil.html#PosCRLF"},
     {"title": "synautil.StringsTrim", "text": "Delete empty strings from end of stringlist.    ", "tags": "", "url": "synautil.html#StringsTrim"},
     {"title": "synautil.PosFrom", "text": "Like Pos function, buf from given string possition.    ", "tags": "", "url": "synautil.html#PosFrom"},
     {"title": "synautil.IncPoint", "text": "Increase pointer by value.    ", "tags": "", "url": "synautil.html#IncPoint"},
     {"title": "synautil.GetBetween", "text": "Get string between PairBegin and PairEnd. This function respect nesting. For example:    Value is: 'Hi! (hello(yes!))' pairbegin is: '(' pairend is: ')' In this case result is: 'hello(yes!)'      ", "tags": "", "url": "synautil.html#GetBetween"},
     {"title": "synautil.CountOfChar", "text": "Return count of Chr in Value string.    ", "tags": "", "url": "synautil.html#CountOfChar"},
     {"title": "synautil.UnquoteStr", "text": "Remove quotation from Value string. If Value is not quoted, then return same string without any modification.    ", "tags": "", "url": "synautil.html#UnquoteStr"},
     {"title": "synautil.QuoteStr", "text": "Quote Value string. If Value contains some Quote chars, then it is doubled.    ", "tags": "", "url": "synautil.html#QuoteStr"},
     {"title": "synautil.HeadersToList", "text": "Convert lines in stringlist from 'name: value' form to 'name=value' form.    ", "tags": "", "url": "synautil.html#HeadersToList"},
     {"title": "synautil.ListToHeaders", "text": "Convert lines in stringlist from 'name=value' form to 'name: value' form.    ", "tags": "", "url": "synautil.html#ListToHeaders"},
     {"title": "synautil.SwapBytes", "text": "swap bytes in integer.    ", "tags": "", "url": "synautil.html#SwapBytes"},
     {"title": "synautil.ReadStrFromStream", "text": "read string with requested length form stream.    ", "tags": "", "url": "synautil.html#ReadStrFromStream"},
     {"title": "synautil.WriteStrToStream", "text": "write string to stream.    ", "tags": "", "url": "synautil.html#WriteStrToStream"},
     {"title": "synautil.GetTempFile", "text": "Return filename of new temporary file in Dir (if empty, then default temporary directory is used) and with optional filename prefix.    ", "tags": "", "url": "synautil.html#GetTempFile"},
     {"title": "synautil.PadString", "text": "Return padded string. If length is greater, string is truncated. If length is smaller, string is padded by Pad character.    ", "tags": "", "url": "synautil.html#PadString"},
     {"title": "synautil.XorString", "text": "XOR each byte in the strings    ", "tags": "", "url": "synautil.html#XorString"},
     {"title": "synautil.NormalizeHeader", "text": "Read header from &quot;Value&quot; stringlist beginning at &quot;Index&quot; position. If header is Splitted into multiple lines, then this procedure de-split it into one line.    ", "tags": "", "url": "synautil.html#NormalizeHeader"},
     {"title": "synautil.SearchForLineBreak", "text": "Search for one of line terminators CR, LF or NUL. Return position of the line beginning and length of text.    ", "tags": "", "url": "synautil.html#SearchForLineBreak"},
     {"title": "synautil.SkipLineBreak", "text": "Skip both line terminators CR LF (if any). Move APtr position forward.    ", "tags": "", "url": "synautil.html#SkipLineBreak"},
     {"title": "synautil.SkipNullLines", "text": "Skip all blank lines in a buffer starting at APtr and move APtr position forward.    ", "tags": "", "url": "synautil.html#SkipNullLines"},
     {"title": "synautil.CopyLinesFromStreamUntilNullLine", "text": "Copy all lines from a buffer starting at APtr to ALines until empty line or end of the buffer is reached. Move APtr position forward).    ", "tags": "", "url": "synautil.html#CopyLinesFromStreamUntilNullLine"},
     {"title": "synautil.CopyLinesFromStreamUntilBoundary", "text": "Copy all lines from a buffer starting at APtr to ALines until ABoundary or end of the buffer is reached. Move APtr position forward).    ", "tags": "", "url": "synautil.html#CopyLinesFromStreamUntilBoundary"},
     {"title": "synautil.SearchForBoundary", "text": "Search ABoundary in a buffer starting at APtr. Return beginning of the ABoundary. Move APtr forward behind a trailing CRLF if any).    ", "tags": "", "url": "synautil.html#SearchForBoundary"},
     {"title": "synautil.MatchBoundary", "text": "Compare a text at position ABOL with ABoundary and return position behind the match (including a trailing CRLF if any).    ", "tags": "", "url": "synautil.html#MatchBoundary"},
     {"title": "synautil.MatchLastBoundary", "text": "Compare a text at position ABOL with ABoundary + the last boundary suffix and return position behind the match (including a trailing CRLF if any).    ", "tags": "", "url": "synautil.html#MatchLastBoundary"},
     {"title": "synautil.BuildStringFromBuffer", "text": "Copy data from a buffer starting at position APtr and delimited by AEtx position into ANSIString.    ", "tags": "", "url": "synautil.html#BuildStringFromBuffer"},
     {"title": "synautil.CustomMonthNames", "text": "can be used for your own months strings for getmonthnumber   ", "tags": "", "url": "synautil.html#CustomMonthNames"},
     {"title": "tlntsend", "text": "  Used RFC: RFC-854   ", "tags": "", "url": "tlntsend.html"},
     {"title": "tlntsend.TTelnetSend", "text": "  Note: Are you missing properties for specify server address and port? Look to parent TSynaClient too!   ", "tags": "", "url": "tlntsend.TTelnetSend.html"},
     {"title": "tlntsend.TTelnetSend.Create", "text": "    ", "tags": "", "url": "tlntsend.TTelnetSend.html#Create"},
     {"title": "tlntsend.TTelnetSend.Destroy", "text": "    ", "tags": "", "url": "tlntsend.TTelnetSend.html#Destroy"},
     {"title": "tlntsend.TTelnetSend.Login", "text": "Connects to Telnet server.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#Login"},
     {"title": "tlntsend.TTelnetSend.SSHLogin", "text": "Connects to SSH2 server and login by Username and Password properties.  You must use some of SSL plugins with SSH support. For exammple CryptLib.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#SSHLogin"},
     {"title": "tlntsend.TTelnetSend.Logout", "text": "Logout from telnet server.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#Logout"},
     {"title": "tlntsend.TTelnetSend.Send", "text": "Send this data to telnet server.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#Send"},
     {"title": "tlntsend.TTelnetSend.WaitFor", "text": "Reading data from telnet server until Value is readed. If it is not readed until timeout, result is False. Otherwise result is True.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#WaitFor"},
     {"title": "tlntsend.TTelnetSend.RecvTerminated", "text": "Read data terminated by terminator from telnet server.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#RecvTerminated"},
     {"title": "tlntsend.TTelnetSend.RecvString", "text": "Read string from telnet server.    ", "tags": "", "url": "tlntsend.TTelnetSend.html#RecvString"},
     {"title": "tlntsend.TTelnetSend.Sock", "text": "Socket object used for TCP/IP operation. Good for seting OnStatus hook, etc.   ", "tags": "", "url": "tlntsend.TTelnetSend.html#Sock"},
     {"title": "tlntsend.TTelnetSend.SessionLog", "text": "all readed datas in this session (from connect) is stored in this large string.   ", "tags": "", "url": "tlntsend.TTelnetSend.html#SessionLog"},
     {"title": "tlntsend.TTelnetSend.TermType", "text": "Terminal type indentification. By default is 'SYNAPSE'.   ", "tags": "", "url": "tlntsend.TTelnetSend.html#TermType"},
     {"title": "tlntsend.cTelnetProtocol", "text": "   ", "tags": "", "url": "tlntsend.html#cTelnetProtocol"},
     {"title": "tlntsend.cSSHProtocol", "text": "   ", "tags": "", "url": "tlntsend.html#cSSHProtocol"},
     {"title": "tlntsend.TLNT_EOR", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_EOR"},
     {"title": "tlntsend.TLNT_SE", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_SE"},
     {"title": "tlntsend.TLNT_NOP", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_NOP"},
     {"title": "tlntsend.TLNT_DATA_MARK", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_DATA_MARK"},
     {"title": "tlntsend.TLNT_BREAK", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_BREAK"},
     {"title": "tlntsend.TLNT_IP", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_IP"},
     {"title": "tlntsend.TLNT_AO", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_AO"},
     {"title": "tlntsend.TLNT_AYT", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_AYT"},
     {"title": "tlntsend.TLNT_EC", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_EC"},
     {"title": "tlntsend.TLNT_EL", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_EL"},
     {"title": "tlntsend.TLNT_GA", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_GA"},
     {"title": "tlntsend.TLNT_SB", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_SB"},
     {"title": "tlntsend.TLNT_WILL", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_WILL"},
     {"title": "tlntsend.TLNT_WONT", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_WONT"},
     {"title": "tlntsend.TLNT_DO", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_DO"},
     {"title": "tlntsend.TLNT_DONT", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_DONT"},
     {"title": "tlntsend.TLNT_IAC", "text": "   ", "tags": "", "url": "tlntsend.html#TLNT_IAC"},
     {"title": "tlntsend.TTelnetState", "text": ". Used internaly by TTelnetSend.    tsDATA    tsIAC    tsIAC_SB    tsIAC_WILL    tsIAC_DO    tsIAC_WONT    tsIAC_DONT    tsIAC_SBIAC    tsIAC_SBDATA    tsSBDATA_IAC   ", "tags": "", "url": "tlntsend.html#TTelnetState"},
     {"title": "tzutil", "text": "   ", "tags": "", "url": "tzutil.html"},
     {"title": "tzutil.TZName", "text": "   ", "tags": "", "url": "tzutil.html#TZName"},
     {"title": "tzutil.TZDSTName", "text": "   ", "tags": "", "url": "tzutil.html#TZDSTName"},
     {"title": "tzutil.TZOffset", "text": "   ", "tags": "", "url": "tzutil.html#TZOffset"},
     {"title": "tzutil.DSTOffset", "text": "   ", "tags": "", "url": "tzutil.html#DSTOffset"},
     {"title": "tzutil.DSTStartMonth", "text": "   ", "tags": "", "url": "tzutil.html#DSTStartMonth"},
     {"title": "tzutil.DSTStartWeek", "text": "   ", "tags": "", "url": "tzutil.html#DSTStartWeek"},
     {"title": "tzutil.DSTStartDay", "text": "   ", "tags": "", "url": "tzutil.html#DSTStartDay"},
     {"title": "tzutil.DSTStartSec", "text": "   ", "tags": "", "url": "tzutil.html#DSTStartSec"},
     {"title": "tzutil.DSTEndMonth", "text": "   ", "tags": "", "url": "tzutil.html#DSTEndMonth"},
     {"title": "tzutil.DSTEndWeek", "text": "   ", "tags": "", "url": "tzutil.html#DSTEndWeek"},
     {"title": "tzutil.DSTEndDay", "text": "   ", "tags": "", "url": "tzutil.html#DSTEndDay"},
     {"title": "tzutil.DSTEndSec", "text": "   ", "tags": "", "url": "tzutil.html#DSTEndSec"},
     {"title": "tzutil.DSTStartSpecType", "text": "   ", "tags": "", "url": "tzutil.html#DSTStartSpecType"},
     {"title": "tzutil.DSTEndSpecType", "text": "   ", "tags": "", "url": "tzutil.html#DSTEndSpecType"},
     {"title": "tzutil.TZSeconds", "text": "    ", "tags": "", "url": "tzutil.html#TZSeconds"},
     {"title": "tzutil.DSTSpecType", "text": "    DSTMonthWeekDay    DSTMonthDay    DSTJulian    DSTJulianX   ", "tags": "", "url": "tzutil.html#DSTSpecType"},
     {"title": "Unit1", "text": "   ", "tags": "", "url": "Unit1.html"},
     {"title": "u_conts", "text": "   ", "tags": "", "url": "u_conts.html"},
     {"title": "u_conts.HTMLFileResult_json", "text": "   ", "tags": "", "url": "u_conts.html#HTMLFileResult_json"},
     {"title": "u_conts.HTMLFileResult_mapa_site", "text": "   ", "tags": "", "url": "u_conts.html#HTMLFileResult_mapa_site"}
]};
