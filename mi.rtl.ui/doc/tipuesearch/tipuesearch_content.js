var tipuesearch = {"pages": [
     {"title": "mi.rtl.ui", "text": "   ", "tags": "", "url": "mi.rtl.ui.html"},
     {"title": "mi_rtl_ui_custom_application", "text": "A unit mi_rtl_ui_custom_application implementa a classe TMI_ui_Custom_Application.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_Custom_Application.pas      PENDÊNCIAS   REFERÊNCIA      [PostgresSql MULTIBYTE-CHARSET-SUPPORTED](https://www.postgresql.org/docs/current/multibyte.html#MULTIBYTE-CHARSET-SUPPORTED)   [Documento oficial do componente sqldb](https://www.freepascal.org/docs-html/fcl/sqldb/index.html)   [Exemplos de uso do SqlDb](https://www.freepascal.org/docs-html/fcl/sqldb/usingsqldb.html)   [SqlDBHowto](https://wiki.freepascal.org/SqlDBHowto)   [tsqlquery.insertsql](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.insertsql.html)      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)      2022-03-29 16:06      Criar a unit mi_rtl_ui_custom_application e analisar o que preciso fazer para integrar com a unit mi_ui_Dmxscroller_sql ✅      2022-04-06 15:40      Implementar o evento Get_ParametersCloseQuery e salvar o formulário quando ele for executado. ✅   No evento Get_ParametersCloseQuery Checar se o usuário é válido. ✅   Criar método DoOnValidUser ✅   Criar método Get_ParametersCloseQuery para executar o evento DoOnValidUser. ✅      2022-04-07 08:43      Cada banco de dados SQL tem alguns parâmetros básicos para sua conexão:      Criar as propriedades de TMI_ui_Custom_Application para que o usuário informe esses parâmetros:      Banco de dados PostgresSQL      CharSet = 'UTF8'; ✅   ConnectorType:='PostgreSQL'; ✅   HostName := '127.0.0.1'; ✅   UserName := 'postgres'; ✅   Password := 'masterkey'; ✅   DatabaseName:= 'maricarai'; ✅   DirDatabaseName:= './'; ✅      connected :Boolean ✅   Options : TSQLConnectorOptions ✅      Documentar as propriedade criadas hoje ✅.         2022-04-08      09:00      Escrever a descrição da classe TMI_ui_Custom_Application. ✅      11:18      Alterar o nome da propriedade Options para SQLConnectorOptions. ✅   Criar a propriedade SQLTransactionOptions ✅      14:22      Documentar as propriedades da classe TMi_ui_Custom_Application. ✅      21:40      Em TMI_ui_Custom_Application.Get_ParametersCloseQuery antes de checar se os parãmetros são válidos, transferir os campos do formulários para as propriedades equivalentes.         2022-04-14 14:58      Criar a constante OkCreateDataBase e o método CreateDataBase. ✅      2022-04-15 10:00      Criar método NameDataBase que retorna o nome do database porque o nome do dataBase é diferente em cada banco de dados. O postres usa um nome simples e o ip para acessar o banco, o SqLite3 usa o nome da pasta + nome do database + ext. ✅               ", "tags": "", "url": "mi_rtl_ui_custom_application.html"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application", "text": "A classe TMI_ui_Custom_Application concentra as propriedades e formulários gerais necessários em qualquer aplicação.       Recursos globais:      Propriedade Get_Parameters cria um formulário de entrada de dados de configuração de acesso ao banco de dados e outros parâmetros;   Propriedade SQLConnector e SQLTransaction e as propriedades relacionadas;   O evento OnValidUser é usado para validar o nome do usuário e senha.         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.BufDataSet1", "text": "O atributo BufDataSet1 é usado para salvar em disco local no arquivo FileName_Parameters os parâmetros informados pelo formulário Get_Parameters   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#BufDataSet1"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DataSource1", "text": "O atributo DataSource1 permite integrar os dados da classe TMiDmxScroller com os componentes da LCL com DbGrid, DbEdit etc...   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DataSource1"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.OkCreateDataBase", "text": "A constante OkCreateDataBase se true executa o método CreateDataBase se ExisteCreateDataBase = false   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#OkCreateDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Const_ConnectorType", "text": "A constante Const_ConnectorType contém a lista de nomes dos tipo de bancos de dados testados pelo componente TMI_ui_Custom_Application   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Const_ConnectorType"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.FileName_Parameters", "text": "A constante FileName_Parameters contém o nome do arquivo de parâmetros      A constante FileName_Parameters é inicializado em TMI_ui_Custom_Application.create onde:      FileName_Parameters := ParamStr(0)+'_Parameters.bds';         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#FileName_Parameters"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application._Get_Parameters", "text": "Este atributo é usado pelas classes filhas para implementar classes herdadas de TUiDmxScroller.       No momento (08/04/22 a classe que herdade é: TUiDmxScroller_form)      ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#_Get_Parameters"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.ExistDataBase", "text": "O Método ExistDataBase retorna true se o banco de dados existe e false se não existir.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#ExistDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.CreateDataBase", "text": "O método CreateDataBase cria o banco de dados se a constante OkCreateDataBase = true    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#CreateDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_ParametersEnter", "text": "O método Get_ParametersEnter é usado pela classe Get_Parameters.      Esse evento cria o arquivo de parâmetros usando os dados das propriedades de TMI_ui_Custom_Application definidas no tempo de projeto.       ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_ParametersEnter"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_ParametersExit", "text": "    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_ParametersExit"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_ParametersCloseQuery", "text": "O método Get_ParametersCloseQuery é usado para confirmar o fechamento do formulário Get_Parameters com botão MrOK caso os campos de Get_Parameters sejam válidos.       NOTA      Método Get_ParametersCloseQuery executa o evento DoOnValidUser, se o mesmo for assinalado na aplicação com objetivo de não permitir fechar o formulário modal com botão MrOK caso  DoOnValidUser retornar false.   Pode ser usado para checar se usuário e senha são válidos bem como se os parâmetros estão compatíveis com os bancos de dados instalados.          ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_ParametersCloseQuery"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Login_GetTemplate", "text": "O método Login_GetTemplate retorna um Template usado para criar o formulário de entrada de dados para a conexão.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Login_GetTemplate"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.NameDataBase", "text": "O método NameDataBase retorna o nome do banco de dados de acordo com o tipo de banco de dados.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#NameDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DoOnValidUser", "text": "O método DoOnValidUser executa o evento onValidUser se o mesmo for assinalado na aplicação ou retorna true se onValidUser = nil    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DoOnValidUser"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Create_Get_Parameters", "text": "O método Create_Get_Parameters deve ser implementado para criar classe TUiDmxScroller_form_lcl ou TUiDmxScroller_form_HTML_Angular4.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Create_Get_Parameters"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Create", "text": "O constructor Create cria os componentes SQLConnector, SQLTransaction, BufDataSet1, DataSource1, Inicia a constante FileName_Parameters, executa o método Create_Get_Parameters, inicializa charSet e liga os componentes SQLConnector com SQLTransaction e os componentes DataSource1.DataSet := BufDataset1.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Create"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Destroy", "text": "O destructor Destroy destrói as classes criadas pelo constructor da classe    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Destroy"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLConnectorOptions", "text": "A propriedade SQLConnectorOptions é usada para controlar o comportamento do SqlDb para esta conexão.       As seguintes opções podem ser definidas:      Type TSQLConnectionOption = (scoExplicitConnect, scoApplyUpdatesChecksRowsAffected);   ONDE:      scoExplicitConnect :      Quando definido, a conexão deve ser feita explicitamente.   O comportamento padrão é para TSQLQuery abrir implicitamente a conexão conforme necessário.      scoApplyUpdatesChecksRowsAffected :      Quando definido, sempre que uma instrução SQL de atualização é executada durante ApplyOptions de um conjunto de dados, RowsAffected é verificado e deve ser igual a 1.            REFERÊNCIAS      [tsqltransaction.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqltransaction.options.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLConnectorOptions"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLTransactionOptions", "text": "A propriedade SQLTransactionOptions é usada para controlar o comportamento do SqlDb para esta transação.       As seguintes opções podem ser definidas:      Type TSQLTransactionOption = (stoUseImplicit, stoExplicitStart);   ONDE:      stoUseImplicit :      Use o suporte a transações implícitas do mecanismo de banco de dados. Isso significa que nenhum comando explícito de início e parada de transação será enviado ao servidor quando os métodos Commit ou Rollback forem chamados (tornando-os efetivamente sem operação no nível do banco de dados).      stoExplicitStart      Quando definido, sempre que uma instrução SQL é executada, a transação deve ter sido iniciada explicitamente. O comportamento padrão é que TSQLStatement ou TSQLQuery iniciem a transação conforme necessário.            REFERÊNCIAS      [tsqltransaction.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqltransaction.options.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLTransactionOptions"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Connected", "text": "A propriedade Connected conecta ao banco de dados selecionado.       True = Conecta ao banco;   False = Desconecta do banco;      ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Connected"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.ConnectorType", "text": "O evento ConnectorType seleciona o tipo de banco de dados a ser conectado   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#ConnectorType"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.HostName", "text": "A propriedade HostName informa ao SQLConnector o IP ou domínimo onde o banco de dados foi hospedado.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#HostName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DirDataBaseName", "text": "A propriedade DirDataBaseName contém a pasta do HD do servidor onde o banco de banco foi hospedado.       Não foi implementado ainda      Preciso de mais informações de como alterar a pasta dos bancos de dados PostgreSQL e SQLite3.         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DirDataBaseName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DatabaseName", "text": "A propriedade DatabaseName contém o nome do Banco de Dados dentro do PostegresSQL ou do SQLite3.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DatabaseName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.UserName", "text": "A propriedade UserName contém o nome do usuário conectado ao banco de dados.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#UserName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Password", "text": "A propriedade Password contém a senha do usuário conectado ao banco de dados.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Password"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.CharSet", "text": "A propriedade CharSet é usada para definir o tipo de caractere do banco de dados.       NOTA      Deve ser informado em tempo de designe do projeto.      REFERÊNCIAS      [CHARSET-TABLE](https://www.postgresql.org/docs/current/multibyte.html#CHARSET-TABLE)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#CharSet"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.onValidUser", "text": "O evento onValidUser é disparado toda vez que o TUiDmxScroller ativado.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#onValidUser"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLConnector", "text": "A propriedade SQLConnector é um componente conector de banco de dados versátil para uso com qualquer banco de dados suportado.       A incluir uma aplicação TMi_UI_Application na aplicação corrente automáticamente é disponibilizado um conector de acesso o banco de dados.   REFERÊNCIAS      [TSQLConnector](https://wiki.freepascal.org/TSQLConnector)   [sqldb/tsqlconnector](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlconnector.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLConnector"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLTransaction", "text": "A propriedade SQLTransaction representa uma transação no banco de dados na qual um TSQLQuery é tratado.       Na prática, pelo menos uma transação precisa estar ativa para um banco de dados, mesmo que você a utilize apenas para leitura de dados.   NOTAS      Ao usar uma única transação, defina a propriedade TConnection. Transaction para a transação para definir a transação padrão para o banco de dados; a propriedade TSQLTransaction.Database correspondente deve apontar automaticamente para a conexão.   Ao ativar uma TSQLTransaction o método StartTransaction inicia uma transação; chamar o método Commit ou o método RollBack confirma (salva) ou reverte (esquece/aborta) a transação.      Você deve cercar suas transações de banco de dados com eles, a menos que use as propriedades Autocommit ou CommitRetaining.         REFERÊNCIAS      [tsqltransaction](https://www.freepascal.org/docs-html/fcl/sqldb/tsqltransaction.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLTransaction"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_Parameters", "text": "A propriedade Get_Parameters contém o formulário para ler os parâmetros de conexão com o banco de dados.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_Parameters"},
     {"title": "mi_rtl_ui_custom_application.Mi_ui_Custom_Application", "text": "A função Mi_ui_Custom_Application retorna a ultima instância de TMI_ui_Custom_Application criada no sistema    ", "tags": "", "url": "mi_rtl_ui_custom_application.html#Mi_ui_Custom_Application"},
     {"title": "mi_rtl_ui_custom_application.Set_Mi_ui_Custom_Application", "text": "A função Set_Mi_ui_Custom_Application seta a ultima instância de TMI_ui_Custom_Application criada no sistema e retorna aplicação selecionada anteriormente.    ", "tags": "", "url": "mi_rtl_ui_custom_application.html#Set_Mi_ui_Custom_Application"},
     {"title": "mi_rtl_ui_custom_application.TOnValidUser", "text": "O tipo TOnValidUser é usado no evento OnValidUser    ", "tags": "", "url": "mi_rtl_ui_custom_application.html#TOnValidUser"},
     {"title": "mi_rtl_ui_Dmxscroller", "text": "A unit mi_rtl_ui_Dmxscroller implementa a classe TUiDmxScroller e registro TDmxFieldRec.       VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      ./mi_rtl_ui_dmxscroller_historico.html       CÓDIGO FONTE:      mi_rtl_ui_DmxScroller.pas   PENDÊNCIAS      T12 Quando uma linha em um label tem muitos caracteres de 2 bytes os últimos não são interpretados.   T12 Implementar o campo FldLink. (Esse campo executa um ação usando controle TStaticText.   T12 O controle TComboBox da LCL alterar o tamanho da fonte courie New caso o tema do sistema mude.      Pesquisar sobre o assunto.      T12 No método SetString em caso de erro de gera exceção informando valor máximo do campo e não o valor digitado.   T12 Implementar o evento OnChange em todos os controles, visto que o mesmo é mais fácil criar lógica de negócios visto que o mesmo só é executado se o campo for modificado.   T12 Implementar a possibilidade das fontes do label ser personalizada baseado em um estilo que pode ser uma variável global.       Suponha que &circ;Z = &lt;h1&gt; Título e &circ;D = &lt;B&gt; de negrito então o sistema informa a TDmxFieldRec.Style = nome do estilo onde nome do estilo = 'Font = FonteX; Size= XX; etc.. '       Exemplo:    &tilde;&circ;ZCADASTRO DE ALUNOS&tilde;  &tilde;&circ;DÑome do Aluno:&tilde;\\ssssssssss           T12 Na construção do formulário LCL setar o campo PDmxFieldRec.LinkEdit;   T12 Implementar o método: function FieldByNum(aFieldnum:Integer):PDmxFieldRec;   T12 Implementar a edição FldBoolean.      Os campo Boolean deve ser editados como uma campo enumerado onde:      0 - False; não   1 = True; sim         T12 O campo fld_LHora não inicializado antes de compactar a hora.   T12 Quando o usuário teclar tab para passar o campo e o campo seguinte não estiver visível o sistema deve passar a página do controle parent.   T12 Implementar a edição de campo FldMemo.   T!2 Implementar a campo fldBLOb;   t12 Implementar a edição de fldHexValue.      O campo Hexadecimal deve ser campo longint mais a edição é uma string comum . FldStr      T12 Implementar a propriedade AlignmentLabels := taCenter; AlignmentLabels := taLeftJustify; AlignmentLabels := taRightJustify ;   T12 Implementar a execução do evento do tipo CharExecProc quando a tecla F7 é pressionada.   T12 Criar opção para gerar cliente HTML a partir de TDmxScroller      Referência: [Componente que espoe dados para o browser](https://wiki.freepascal.org/SqlDbRestBridge#Purpose)      T12 O grupo TMi_RadioGroup_Lcl não é selecionado com a tecla na tecla TAB      Quando os botões TRadioButton estão dentro do TRadioGroup a propriedade TRadioGroup.TabStop não funciona.      T12 Nosso código só é executado com o editor de propriedade. Se não estamos no editor de propriedade então não temos controle do código no modo design. Qual o meu problema: O formulário deve ser criado em tempo de execução, porém eu queria ver como ele estava ficando sem precisar compilar e executar o código, por isso coloquei o código em um stringList e ao ativar o objeto, o formulário é criado. Porém esses objetos criados no designer não podem ficar no arquivo de recursos porque quando for executado vai haver duplicidade.      Quando eu desativo o objetos todos os objetos que ele criou são excluídos do arquivo de recursos.   Isso eu já faço agora, mais quando distribuir o componente as pessoas vão deixar esses componente usado no teste e ao executar vai haver error.   Por isso eu queria que caso a propriedade active tivesse em true eu queria que ela ficasse em false.            CONCLUÍDO      T12 O campo FldCheckBox não está funcionando o flag charHint ✅️.   T12 Implementar o controle ChatHint no Template para seja possível passar um documento markdown pelo Template; ✅️.   T12 Ao executar o evento OnExit é necessário o redraw em de todos os campo caso haja alteração ao retorna da chamada. ✅️.   T12 O componente TMi_ui_Button_lcl não está na lista dos campos selecionados na tecla tab. ✅   T12 Os campos FldEnum não estão mostrando o help. ✅   T12 Criar a propriedade Locked; ✅         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup", "text": "A classe TFldEnum_Lookup é usada para implementar campo ComboBox quando TDmxScroller estiver TDataSource &lt;&gt; nil porque o Lazarus espera em campos ComboBox um string e não o índice da lista de strings.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.BufDataSet", "text": "O atributo BufDataSet contém o arquivo em memória das opções do campo ComboBox sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#BufDataSet"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.DataSource", "text": "O atributo DataSource é a fonte de dados associado a TFldEnum_Lookup.BufDataSet do campo sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.KeyField", "text": "O atributo KeyField contém o nome do campo chave da tabela associada.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#KeyField"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.ListField", "text": "O atributo ListField contém o nome do campo da tabela associada a ser visualizado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#ListField"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.create", "text": "O constructor create cria os campos TBufDataSet e TDataSource do campo TFldEnum_Lookup    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#create"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.destroy", "text": "O destructor destroy destrói os campos TBufDataSet e TDataSource do campo TFldEnum_Lookup    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#destroy"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.DmxFieldRec", "text": "A propriedade DmxFieldRec contém o campo comboBox se ser editado   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#DmxFieldRec"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec", "text": "O registro TDmxFieldRec é usado para guardar as informações passadas pelos Templates das strings.       REFERÊNCIA      [Estrutura record e object]https://wiki.freepascal.org/Record      A aparência padrão dessas visualizações geralmente é orientada por coluna/linha, com exceção de exibições do tipo formulário e campos únicos.   Você declara uma estrutura de registro para o procedimento de inicialização do tvDMX em um modelo string – que também determina o formato de exibição. (Você verá mais tarde como o tvDMX pode ser usado para trabalhar com formulários ou editores de campo.)   EXEMPLO       O Template '\\ sssssssss`sssssssssss \\ iiii \\ rrr.rr' representa o registro:      CÓDIGO PASCAL      type    TRecord = Record               nome : String [20];               Ano  : Integer;               Valor : Real;             end;     NOTA:      A letra ( s ) minúsculo aceita qualquer número e letras maiúsculas e minúsculas;   A letra ( i ) representa um número inteiro com 2 bytes com edição em 4 posições (0 a 9999);   A letra ( r ) representa um número real com 8 bytes com edição em 5 posições (0 a 999.99)   O símbolo ( ` ) crase é usado para informar que a parte do texto depois deste sinal deve ser omitida da visão.   A símbolo ( ' \\ ' ) barra invertida deve ser usada como delimitador de campo e é exibida como um espaço em branco.   O símbolo ( &tilde; ) til deve ser usado para separar rótulos dos campos de dados.            ATENÇÃO      O registro TDmxFieldRec não pode ser class e nem conter métodos virtuais, porque este registro e alocado com as funções new e dispose.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.LinkEdit", "text": "Componente corrente que está editando esse campo.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#LinkEdit"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Alias", "text": "O campo Alias é usado para associar label ao corrente campo.       NOTA      Esse campo foi necessário para implementar campos do tipo boolean [X] por que o mesmo sempre vem associado a um rótulos amigável e o controle checkbox precisa dele.      EXEMPLO      Template de um botão checkbox:      Resourcestring   tmp_Aceita = '\\X Aceita o contrato +ChFN+'Aceita_contrato'+CharHint+'Aceita os termos do contrato?           ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Alias"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Template_org", "text": "O campo Template_org guarda o modelo original do Template e deve ser inicializado em CreateStruct   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Template_org"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Next", "text": "Próximo campo   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Next"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.RSelf", "text": "Usado para referenciar-se a si mesmo.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#RSelf"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Prev", "text": "Campo anterior   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Prev"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.access", "text": "read-only, hidden, skip, accSpecX   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#access"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Fieldnum", "text": "Número do campo, varia de 1 a totalFields (Se zero (0) é porque trata-se um rótulos)   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Fieldnum"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ScreenTab", "text": "Override column num.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ScreenTab"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ColumnWid", "text": "width of Field column   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ColumnWid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ShownWid", "text": "visible width of column   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ShownWid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.TypeCode", "text": "'s', 'r', etc.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#TypeCode"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FldEnum_Lookup", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FldEnum_Lookup"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FillValue", "text": "If the Field is numeric, fill in with '#0' if it's alphanumeric, fill in with ' '   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FillValue"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.UpperLimit", "text": "maximum value limit   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#UpperLimit"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ShowZeroes", "text": "display zero values   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ShowZeroes"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.TrueLen", "text": "unformatted text length   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#TrueLen"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Parenthesis", "text": "'('/')' AnsiCharacters   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Parenthesis"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Decimals", "text": "decimal point or cluster value   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Decimals"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FieldSize", "text": "sizeof (datatype)   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FieldSize"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.DataTab", "text": "position in record   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#DataTab"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Template", "text": "Field Template   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Template"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ListComboBox", "text": "O atributo ListComboBox contém uma lista de opções possíveis para o campo.       Nota:      Após caractere CharListComboBox contém um ponteiro para uma lista de opções do mesmo tipo de campo.      Exemplo:     Const    '&tilde;Dia de vencimento:&tilde;\\Ssssss'+ChFN+'Dia'+CreateOptions(accNormal, 1,       NewSItem('Dia 10',       NewSItem('Dia 15',       NewSItem('Dia 20',       NewSItem('Dia 25',                nil)))));              ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ListComboBox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ListComboBox_Default", "text": "O Atributo ListComboBox_Default* é usado guardar o valor padrão para a lista do BomboBox ou LookupBox       Exemplo para selecionar &quot;Dia 20&quot; da lista.      O número 2 representa o terceiro item da lista.        Const        '&tilde;Vencimento:&tilde;\\Ssssss'+ChFN+'Dia'+CreateOptions(accNormal, 2,           NewSItem('Dia 10',           NewSItem('Dia 15',           NewSItem('Dia 20',           NewSItem('Dia 25',                    nil)))));           ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ListComboBox_Default"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ExecAction", "text": "O campo ExecAction é inicializado no interpretador de Template quando o caractere CharExecAction é encontrado.       EXEMPLO DE USO DE AÇÕES NO TEMPLATE      Se o atributo Fieldnum do campo for diferente de zero, então o rótulo do botão associado a ação será o caracteres 🔍 e a ação pode atualizar o buffer do campo.      No exemplo a seguir a função CreateExecAction retorna a string chFN+aFieldName+'&tilde; 🔍&tilde;'+ChEA+(aFieldName+'.'+aExecAction).   O interpretador de Template atualiza a string LinkExecAction caso o o ponto seja encontrado no ExecAction do Label.      Result := NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CreateExecAction('Cliente',Pesquisa.Name),nil);        Se o atributo Fieldnum do campo for igual a zero, então a rótulo do botão será o rótulo do campo.      No exemplo a seguir um rótulo de novo cliente (icons 🆕) e um botão ok (icons 🆗)      NewSItem('&tilde; 🆕 &amp;Novo cliente:&tilde;'+CharExecAction+Action_Novo.name+          '&tilde;   &tilde;&tilde; 🆗 &tilde;'+CharExecAction+Action_Ok.name)              ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ExecAction"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.LinkExecAction", "text": "O atributo LinkExecAction é atualizado com o ponteiro do campo passado por execAction.       O Interpretador de Template deve pegar o campo usando a função FieldByName(aFieldName passado em execAction), quando execAction tiver um ponto antes do nome da ação.      Ex: (aFieldName.aExecAction).           Result := NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CreateExecAction('Cliente',Pesquisa.Name),nil);     ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#LinkExecAction"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.CharShowPassword", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#CharShowPassword"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._DateMask", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_DateMask"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._HourMask", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_HourMask"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.QuitFieldAltomatic", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#QuitFieldAltomatic"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.CurPos", "text": "Posição do curso quando este campo estiver sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#CurPos"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelStart", "text": "Posição do início da seleção quando este campo estiver sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelStart"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelEnd", "text": "Posição do fim da seleção quando este campo estiver sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelEnd"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._FieldAltered", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_FieldAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.HelpCtx_Hint", "text": "O campo HelpCtx_Hint contém a documentação resumida do registro.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#HelpCtx_Hint"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.HelpCtx_Porque", "text": "Por que preciso deste campo?   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#HelpCtx_Porque"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.HelpCtx_Onde", "text": "Onde esse campo será usado?   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#HelpCtx_Onde"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._OkSpcAnt", "text": "Salva o valor de _OkSpc antes de setar com aOkSpc   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_OkSpcAnt"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ProviderFlags", "text": "O atributo ProviderFlags é usado nos métodos TUiDmxScroller_sql.CreateTables e TUiDmxScroller_sql.CreateBufDataset_FieldDefs para integração do componente TDmxScroller com o componente TSqlDbConnector.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ProviderFlags"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ForeignKey", "text": "O atributo ForeignKey é usado para criar chave estrangeira e os relacionamentos   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ForeignKey"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.KeyForeign", "text": "O atributo KeyForeign contém uma string com o nome da tabela estrangeira e a lista de campos relacionados       EXEMPLO      CIDADES,ESTADO;CIDADE      CIDADES = tabela estrangeira   ESTADO = Estado da cidade.   CIDADE = Cidade do estado.            ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#KeyForeign"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.StrNumberValid", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#StrNumberValid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetAsStringFromBuffer", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetAsStringFromBuffer"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetAsString", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetAsString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetAsString", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetAsString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputText", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputText"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SItemsLen", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SItemsLen"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.MaxItemStrLen", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#MaxItemStrLen"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetMaxLength", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetMaxLength"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsStaticText", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsStaticText"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputDbRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputDbRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputCheckbox", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.isInputPassword", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#isInputPassword"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputHidden", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputHidden"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsSelect", "text": "O objeto filho que implementar um ISelect deve anular e retornar a interface ISelect;    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsSelect"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsComboBox", "text": "Usado quando trata-se de campos enumerados.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsComboBox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FirstField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FirstField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.LastField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#LastField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.NextField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#NextField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.PrevField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#PrevField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelectFirstField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelectFirstField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelectLastField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelectLastField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Select", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.get_Item_Focused_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#get_Item_Focused_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_InputCheckbox", "text": "Construção da propriedade Count      Objetivo: Retorna o numero de items da lista onde os itens devem ser acessados com index 0 a count-1       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_InputCheckbox", "text": "Construção da propriedade Value       Objetivo: Ler o label associado a opção ou trocar seu valor.   Sintaxe: Setando = Value[1] = 'Sim'; Value[2] = 'Nao'; Value[1] = 'Yes' Lendo = If LowerCase(Value[1]) = 'SIM' Then;       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_InputCheckbox", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_InputCheckbox", "text": "Construção da propriedade Checked - Sintaxe: 1 = If Checked[1] then; 2 = Checked[1] := True.       Objetivo: Selecionar um item da lista de opções ou checar se a opção está selecionada       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_InputCheckbox", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_Select", "text": "Construção da propriedade Count de campos enumerados      Objetivo: Retorna o numero de items da lista onde os itens devem ser acessados com index 0 a count-1       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetSize_Select", "text": "Número de Linhas a ser mostrada no box. Usado em campos enumerados.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetSize_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_Select", "text": "Construção da propriedade Value      Objetivo: Ler o label associado a opção ou trocar seu valor.   Sintaxe: Setando = Value[1] = 'Sim'; Value[2] = 'Nao'; Value[1] = 'Yes' Lendo = If LowerCase(Value[1]) = 'SIM' Then;       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_Select", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_Select", "text": "Construção da propriedade Checked - Sintaxe: 1 = If Checked[1] then; 2 = Checked[1] := True.       Objetivo: Selecionar um item da lista de opções ou checar se a opção está selecionada       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_Select", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsNumber", "text": "O método IsNumber retorna true se o campo é numérico e false se alfanumérico    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsNumber"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsNumberReal", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsNumberReal"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsNumberInteger", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsNumberInteger"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsData", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsData"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsHora", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsHora"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetLeft", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetLeft"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetTop", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetTop"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetWidth", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetWidth"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetHeight", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetHeight"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetAccess", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetAccess"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Valid", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Valid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.DoOnEnter", "text": "O método DoOnEnter é executado toda vez antes do controle ler do buffer do campo.      Se o TUiDmxScroller.OnEnterField tiver assinalado o método DoOnEnter o executa.       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#DoOnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.DoOnExit", "text": "O método DoOnExit é executado toda vez antes do controle gravar no buffer do campo.      Se o TUiDmxScroller.OnExitField tiver assinalado o método DoOnExit o executa.       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#DoOnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FieldName", "text": "O campo FieldName guarda o nome do campo e deve ser inicializado em CreateStruct   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FieldName"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ID_Dynamic", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ID_Dynamic"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.owner", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#owner"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FieldAltered", "text": "A propriedade FieldAltered Indica que o campo foi alterado. Deve ser atualizado na visão caso a tabela esteja em modo de edição.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FieldAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.OkSpc", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#OkSpc"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.OkMask", "text": "O método OkMask é usado para habilitar ou não em GetString a mascara em campos numéricos.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#OkMask"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.AsString", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#AsString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Value", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Value"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FldOrigin_Y", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FldOrigin_Y"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FldOrigin", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FldOrigin"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.vidis_OnEnter", "text": "A propriedade vidis_OnEnter usado para evitar reentrância do evento DoOnEnter()   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#vidis_OnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.vidis_OnExit", "text": "A propriedade vidis_OnExit é usado para evitar reentrância do evento DoOnExit()   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#vidis_OnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller", "text": "A classe TUiDmxScroller tem como objetivo criar um formulário baseado em uma lista do tipo ShortString.       NOTAS      O método createStruct criar uma lista de campo tipo TDmxFieldRec com todas as informações necessárias para criar uma tabela ou um formulário.   O formulário é criado com apena uma linha.      EXEMPLO:      Template := '&tilde;Nome&tilde;\\SSSSSSSSSSSSSSSSSSSS &tilde;Idade:&tilde;\\BB'      A classe cria a lista de campos:      Label1: Nome   Field1: campo ShortString com 20 posições maiúsculas   Label2: Idade   Field2: Campo byte com duas posições               ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Fields", "text": "O atributo Fields contém uma lista pDmxFieldRec cujo Fieldnum&lt;&gt;0.       Essa lista é atualizada em createStruct      ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Fields"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Limit", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Limit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateValid", "text": "Deve ser true ao criar a classe   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateValid"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.WorkingData", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#WorkingData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.WorkingDataOld", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#WorkingDataOld"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DataBlockSize", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DataBlockSize"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ActualRecordNum", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ActualRecordNum"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DMXField1", "text": "O atributo DMXField1 contém o primeiro campo da lista encandeada   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DMXField1"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.TotalFields", "text": "O atributo TotalFields contém o total de campos da lista apontada por DMXField1   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#TotalFields"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordSize", "text": "O atributo RecordSize contém o tamanho do buffer calculado por CreateStruct   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordSize"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.FieldData", "text": "O atributo FieldData contém o ponteiro do buffer do corrente campo calculado pela propriedade CurrentField   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#FieldData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordData", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.WidthChar", "text": "O atributo WidthChar deve ser iniciado quando este controle for incluído em um TScrollingWinControl. em um controle gráfico.      EXEMPLO      WidthChar := ((Owner as TScrollingWinControl).Canvas.TextWidth(UiDmxScroller.CharAlfanumeric) div Length(UiDmxScroller.CharAlfanumeric));         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#WidthChar"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.HeightChar", "text": "O atributo HeightChar deve ser iniciado quando este controle for incluído em um TScrollingWinControl.      EXEMPLO      HeightChar := (Owner as TScrollingWinControl).Canvas.TextHeight(CharAlfanumeric)+2;         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#HeightChar"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.KeyAltered", "text": "O atributo KeyAltered indica se algum campo da chave foi alterado é setado em changeMade   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#KeyAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.keysPrimaryKeyComposite", "text": "O atributo keysPrimaryKeyComposite contém a lista de campos que pertence a chave primária      EXEMPLOS:      Chave simples:      'Matricula'.      Chave composta:      'Estado,Cidade'.         NOTA      Se pos(',',keysPrimaryKeyComposite) &lt;&gt; 0 indica que a chave é composta.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#keysPrimaryKeyComposite"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.flagPrimaryKey_AutoIncrement", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#flagPrimaryKey_AutoIncrement"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnCloseQuery", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnEnter", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnExit", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnEnterField", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnEnterField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnExitField", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnExitField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._Active", "text": "O atributo name é usado para criar a propriedade active do componente       NOTAS      O componente só pode estar ativo se o GetTemplate &lt;&gt; nil .   O método CreateFormLCL só pode ser executado uma vêz.   Caso o active esteja true e o usuário seta para false o controle Owner deve ficar invisível.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_Active"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._CurrentField", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_CurrentField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._BufDataset", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_BufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._DataSource", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._ActionList", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_ActionList"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._Locked", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_Locked"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo. aFldNum    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo passado em :apDmxFieldRec    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetCurrentRecord", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetCurrentRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ShowControlState", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ShowControlState"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.UpdateBuffers", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#UpdateBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Refresh", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Refresh"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetAppending", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetAppending"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetAppending", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetAppending"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetOnCalcRecord", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetOnCalcRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetRecordSelected", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetRecordSelected"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetRecordSelected", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetRecordSelected"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ChangeMadeOnOff", "text": "O método ChangeMadeOnOff seta os atributos indicativos de que o objeto foi alterado ou não.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ChangeMadeOnOff"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnNewRecord", "text": "O método DoOnNewRecord é usado para inicializa os parâmetros de um novo registro    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetState", "text": "O método SetState seta o bit passado no parâmetro aState e retorna o estado anterior do mapa de bits passado por aState    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetState"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetState", "text": "O Método GetState recebe um mapa de bits e retorna:      false : Se o bite estiver desligado;   true ; Se o bit estiver ligado       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetState"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.FieldByName", "text": "O método FieldByName retorna o campo passado por aName.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#FieldByName"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.FieldByNumber", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#FieldByNumber"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CancelBuffers", "text": "O método CancelBuffers copia o buffer do registro anterior para o buffer do registro atual    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CancelBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetBuffers", "text": "O método GetBuffers copia o buffer do registro atual para o buffer do registro anterior       OBSERVAÇÃO:      O método GetBuffers deve ser anulado para ler o buffer dos campos dos arquivos associados a classe TUiDmxScroller para o buffer dos campos da classe TUiDmxScroller          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutBuffers", "text": "O método PutBuffers deve ser anulado para grava o buffer dos campos da classe TUiDmxScroller para o buffer dos campos dos arquivos associados a classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnCloseQuery", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnCloseQuery", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Scroll_it_inview", "text": "O método Scroll_it_inview é usado para da o scroller na janela onde esse componente for inserido.      NOTA      A LCL não rola a tela com a tecla tab e o controle não estiver visível.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Scroll_it_inview"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnEnter", "text": "O método DoOnEnter Executa o evento onEnter se o mesmo estiver assinalado.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnExit", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.BeforeDestruction", "text": "Executado antes de construir o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#BeforeDestruction"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Create"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.destroy", "text": "Destrói o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#destroy"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateStruct", "text": "A procedure CreateStruct é executado para construir a lista apontada por DMXField1 baseado no Template do tipo TString.       NOTA      O parâmetro aTemplate é um string com 255 caracteres, porém o mesmo pode ser encandeado usando a função CreateAppendFields.   A função CreateAppendFields retorna a constante fldAPPEND mais o endereço da string a ser concatenada.       EXEMPLO     Var   S1,s2,Template : TString; begin   S1 := '&tilde;Nome do Aluno....:&tilde;\\ssssssssssssssssssssssssssssssssss';   s2 := '&tilde;Endereço do aluno:&tilde;\\sssssssssssssssssssssssss';   Template := S1+CreateAppendFields(s2); end;               ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateStruct", "text": "A procedure CreateStruct é executado para construir a lista apontada por DMXField1 baseado na lista PSItem.       NOTA      O parâmetro aTemplate é uma lista PSitem.   A função CreateTSItemFields retorna uma lista de PSItem.      EXEMPLO     Var   Template : PSItem; begin   Template := CreateTSItemFields(                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',nil)))))) end;               ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateStruct", "text": "A procedure CreateStruct interpreta o Template obtido em getTemplate e cria a lista de pDmxFieldRec associada ao Template.       Nota      O Template pode ser obtido pela propriedade Template se Template&lt;&gt; '' ou retornado pelo evento onGetTemplate.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DestroyStruct", "text": "A procedure DestroyStruct destrói as lista criada por CreateStruct acima.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DestroyStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateBufDataset_FieldDefs", "text": "O método CreateBufDataset_FieldDefs é usado para criar os campos de BufDataset    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateBufDataset_FieldDefs"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateData", "text": "A procedure CreateData é usada para alocar (RecordSize) memória para o buffer (WorkingData) do registro calculado por createStruct    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DestroyData", "text": "A procedure DestroyData é usada para desalocar memória do buffer do registro criado por CreateData    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DestroyData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetRecordData", "text": "A função GetRecordData retorna o atributo WorkingData    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetRecordData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetLimit", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetLimit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetTemplate", "text": "O método GetTemplate é usado para atualizar o atributo _onGetTemplate com o modelo informado pelo usuário caso o onGetTemplate seja nil.       NOTA      O Evento _onGetTemplate só é iniciado em tempo de execução por isso o formulário não pode ser criado em tempo de projeto usando o evento onGetTemplate.   As strings do formulário também pode ser desenhado usando o evento OnAddTemplate.   O evento OnGetTemplate tem prioridade em relação ao evento OnAddTemplate;          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetActive", "text": "A procedure SetActive seta a propriedade active e criar um formulário LCL ou HTML dependendo do tipo de aplicação    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetActive"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetCurrentField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetCurrentField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutString", "text": "A função PutString salva a string S no currentField       PARÂMETROS      OkSpc : campo lógico e se true salva o campo preenchendo com espaço para completar a máscara.   S : String do tipo ShortString com conteúdo do campo.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutString", "text": "O método PutString salva um string no campo passado por aFieldName.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetString", "text": "O método GetString retorna um string do campo passado por aFieldName.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetString", "text": "A função GetString retorna a string com o valor do currentField       PARÂMETROS      OkSpc : campo lógico e se true retorna o campo preenchendo com espaço para completar a máscara.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetString", "text": "A função GetString retorna a string com o valor do currentField sem preencher com espaço para completar a máscara.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutString", "text": "A função PutString salva a string S no currentField usando okspc = false;       PARÂMETROS      S : String do tipo ShortString com conteúdo do campo.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Get_MaskEdit_LCL", "text": "O método Get_MaskEdit_LCL receber a máscara do DmxScroller e retorna a mascara do componente LCL.       Nota      Em Size_TypeFld retorno o tamanho do tipo de dados da mascara;   Em OkMask retorna true se tiver mascara e false caso contrário          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Get_MaskEdit_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Get_MaskEdit_LCL", "text": "O método Get_MaskEdit_LCL receber a máscara do Dmx e retorna a mascara do componente LCL.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Get_MaskEdit_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoAddRec", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoAddRec"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.IfEqual", "text": "O atributo IfEqual retorna true se o buffer apontado por PAnt for igual ao buffer apontado por PAtu.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#IfEqual"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordAltered", "text": "O método RecordAltered retorna true se o registro atual for diferente do registro anterior    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ModifyFontsAll_LCL", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ModifyFontsAll_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ModifyFontsAll_LCL", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ModifyFontsAll_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateExecAction", "text": "A classe método CreateExecAction é usado para adicionar a chamada de um procedimento quando a tecla F7 é pressionada;    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateExecAction"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.add", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#add"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetLocked", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetLocked"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CurrentRecord", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CurrentRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Strings", "text": "A propriedade Strings o Strings é usada para editar o Template em tempo de projeto.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Strings"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.TableName", "text": "A propriedade TableName contém o nome da tabela ou consulta no banco de dados.       NOTA      A propriedade TableName é usado no método SetSqlBufDataset para criação da propriedade TCustomSQLQuery.SQL e no método AlterTable para criação da tabela ou consulta no banco de dados.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#TableName"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Appending", "text": "A propriedade Appending é usada para saber se está editando um novo registro ou não       NOTA      TRUE = Indica que um novo registro esta sendo editado.   False = Indica que um registro existente está sendo editado ou visualizado.   Obs: Deve ser atualizado na visão caso a tabela está em edição.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Appending"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnNewRecord_FillChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnNewRecord_FillChar"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordSelected", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordSelected"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.OnNewRecord", "text": "A propriedade OnNewRecord é executada em DoOnNewRecord se a mesma for assinalada.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#OnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onCloseQuery", "text": "O evento onCloseQuery é disparado toda vez que o TUiDmxScroller é desativado.       NOTA*      Este evento é disparado antes de desativar a classe **TUiDmxScroller   .      Obs: Se o parâmetro CanClose for false, então o formulário não é desativado.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onEnter", "text": "O evento onEnter é disparado toda vez que o TUiDmxScroller ativado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onExit", "text": "O evento onExit é disparado toda vez que o TUiDmxScroller é destivado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onEnterField", "text": "O evento onEnterField é disparado toda vez que o controle corrente recebe o foco.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onEnterField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onExitField", "text": "O evento onExitField é disparado toda vez que o controle corrente perde o foco.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onExitField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onGetTemplate", "text": "O evento onGetTemplate substitui o método getTemplate caso OnGetTemplate&lt;&gt;nil   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onGetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onAddTemplate", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onAddTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Active", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Active"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CurrentField", "text": "A propriedade CurrentField contem um ponteiro para o campo selecionado   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CurrentField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.AlignmentLabels", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#AlignmentLabels"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.BufDataset", "text": "A propriedade BufDataset é usada com objetivo de integração dos dados do formulário TVDmx e os controle decentes de TDataSet.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#BufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DataSource", "text": "A propriedade DataSource permite que controles da LCL (Lazarus Componentes Library) possam usar os dados do componente TDmxScroller.       NOTA      Essa integração permite que TDmxScroller utilize todos os componentes de banco de dados do Free Pascal.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ActionList", "text": "A propriedade ActionList permite que ações do formulário LCL possam ser executados a partir do componente TDmxScroller.       NOTA      O interpretador de Template inicia o campo TDmxFieldRec.ExecAction e o campo LinkExecAction.   O gerador de formulário ao encontrar TDmxFieldRec.ExecAction cria um botão para que se possa executar a ação.      EXEMPLO      with DmxScroller_Form1 do begin   Result := NewSItem('&tilde;     &tilde;&tilde;⏭️&amp;Primeiro&tilde;'+CharExecAction+Novo.Name+                      '&tilde;⏩ P&amp;róximo&tilde;'+CharExecAction+(Gravar.Name)+                      '&tilde;⏪️&amp;Anterior&tilde;'+CharExecAction+Pesquisar.Name+                      '&tilde;⏮️ &amp;Ultimo&tilde;'+CharExecAction+(Excluir.Name),nil); end;        ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ActionList"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Locked", "text": "A propriedade Locked deve ser redefinida na interface filha desta classe para travar o formulário se aLocked = true e destravar se aLocked = false;   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Locked"},
     {"title": "mi_rtl_ui_Dmxscroller.AccNormal", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#AccNormal"},
     {"title": "mi_rtl_ui_Dmxscroller.LF", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#LF"},
     {"title": "mi_rtl_ui_Dmxscroller.PSItem", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#PSItem"},
     {"title": "mi_rtl_ui_Dmxscroller.tString", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#tString"},
     {"title": "mi_rtl_ui_Dmxscroller.ptString", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#ptString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDates", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TDates"},
     {"title": "mi_rtl_ui_Dmxscroller.PValue", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#PValue"},
     {"title": "mi_rtl_ui_Dmxscroller.TValue", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TValue"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnGetTemplate", "text": "Usado para criar modelos de formulários dinamicamente usando como parâmetro listas de PSItems.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnGetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnAddTemplate", "text": "Usado para criar modelos de formulários dinamicamente usando o método add       EXEMPLO      Procedure AddTemplate(const aUiDmxScroller:TUiDmxScroller); begin   with aUiDmxScroller do   begin     add('&tilde;EXEMPLO DE TEMPLATE&tilde;');     add('');     add('&tilde;Alfanumérico maiúscula com 15 posições:&tilde;\\SSSSSSSSSSSSSSS');     add('&tilde;Alfanumérico maiúscula e minuscula com 30 posições:&tilde;');     add('&tilde;&tilde;\\ssssssssssssssssssssssssssssssssssssss');     add('&tilde;Alfanumérico com a primeira letra maiúscula:&tilde;\\Sssssssssssssss');     add('&tilde;Valor double.......:&tilde;\\RRR,RRR.RR');     add('&tilde;Valor SmalInt......:&tilde;\\II,III');     add('&tilde;Valor Byte.........:&tilde;\\BBB');     add('&tilde;Valor Smallword....:&tilde;\\WW,WWW');     add('&tilde;Sexo...............:&tilde;'+ CreateEnumField(TRUE, accNormal, 0,                                   NewSItem(' indefinido ',                                   NewSItem(' Masculino',                                   NewSItem(' Feminino',                                           nil)))));     add('&tilde;Estado Civil              &tilde;\\KA Indefinido  '+chFN+'Sexo');     add('&tilde;&tilde;\\X Casado?                \\KA Masculino    ');     add('&tilde;&tilde;\\X Pretende se divorciar? \\KA Feminino     ');     add('&tilde;&tilde;\\X Tens filhos?          ');     add('');   end; end;  procedure TForm1.DmxScroller_Form1AddTemplate(const aUiDmxScroller: TUiDmxScroller); begin   AddTemplate(aUiDmxScroller); end;         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnAddTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.pDmxFieldRec", "text": "O tipo pDmxFieldRec aponta para o campo do tipo TDmxFieldRec   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#pDmxFieldRec"},
     {"title": "mi_rtl_ui_Dmxscroller.TEndProc", "text": "O tipo TEndProc é usado para fazer pesquisa genérica no banco de dados quando a tecla F7 é pressionada.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TEndProc"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnEnter", "text": "O tipo TOnEnter é usado para implementar evento onEnter da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnExit", "text": "O tipo TOnExit é usado para implementar evento onExit da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnNewRecord", "text": "O tipo TOnNewRecord é usado para implementar evento onNewRecord da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnCloseQuery", "text": "O tipo TOnCloseQuery é usado para implementar evento OnCloseQuery da classe TUiDmxScroller       NOTA*      Este evento é disparado antes de desativar a classe **TUiDmxScroller   .      Obs: Se o parâmetro CanClose for false, então a classe TUiDmxScroller não é desativado.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnEnterField", "text": "O tipo TOnEnterField é usado no evento OnEnterField    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnEnterField"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnExitField", "text": "O tipo TOnExitField é usado no evento OnExitField    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnExitField"},
     {"title": "mi_rtl_ui_Dmxscroller.SmallWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#SmallWord"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons", "text": "A unit mi_rtl_ui_DmxScroller_Buttons implementa a classe TUiDmxScroller_Buttons.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_rtl_ui_DmxScroller_Buttons.pas   PENDÊNCIAS   CONCLUÍDO      Criar classe TUiDmxScroller_Buttons ✅️   Criar constructor Create.✅️   Criar Function Create_RCommands. ✅️   Commands_Buttons_High : Byte; ✅️   Commands_Buttons : Array[0..Max_List_Buttons] of TRCommand; ✅️   Max_List_Buttons = sizeof(Longint); ✅️   Commands_Buttons_Mb : Longint; ✅️   Function Add_RCommands_Buttons; ✅️   Function Create_RCommands_Buttons; ✅️   Function Set_Commands_Buttons_Mb(Const aMb_Bits:Longint):Longint;✅️   Documentar os atributos abaixo: ️      Commands_Buttons_High : Byte; ✅️   Commands_Buttons : Array[0..Max_List_Buttons] of TRCommand; ✅️         HISTÓRICOS      DIAS ANTERIORES      ./mi_rtl_ui_DmxScroller_Buttons_historico.md       DO DIA      2022-07-07      09:45      Documentar o método Add_RCommands_Buttons      14:55      Documentar o método Add_RCommands_Buttons                     ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.html"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons", "text": "A classe TUiDmxScroller_Buttons tem como objetivo registrar os dados necessários para criar os botões de navegação e edição de uma tabela quando TDataSource for &lt;&gt; nil.       EXEMPLO USO            ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.UiDmxScroller", "text": "O atributo UiDmxScroller deve ser passado em constructor create   ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#UiDmxScroller"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.OkCmmNewRecord", "text": "O atributo OkCmmNewRecord indica se o registro pode ser incluído ou não, ou seja: é o estado inicial da ação incluir informada pelo usuário.       NOTA      True : O registro pode ser incluído. Obs: DataSet.Append pode ser executado.   False: O registro não pode ser incluído. Obs: DataSet.Append não pode ser executado.   Esse atributo é usado nos seguintes métodos:      Create_RCommands_Edit   No método DoOnNewRecord   Action Novo         EXEMPLO     // Tirado do código: Function TRecord.Create_RCommands_Edit  OkCmmNewRecord := Application.FileOptions_CommandEnabled(Module,aCmNovo); if aCmNovo&lt;=255 then   if OkCmmNewRecord   then Application.EnableCommands([aCmNovo])   Else Application.DisableCommands([aCmNovo]);        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#OkCmmNewRecord"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.OkCmmDbLocaliza", "text": "O atributo OkCmmDbLocaliza indica se o registro pode ser localizado ou não, ou seja: é o estado inicial da ação pesquisar informada pelo usuário.       NOTA      True : O registro pode ser pesquisado. DataSet.Locate pode ser executado.   False: O registro não pode ser pesquisado. DataSet.Locate não pode ser executado.   Esse atributo é usado nos seguintes métodos:      Create_RCommands_Edit   No método DoOnNewRecord   Action Pesquisa         EXEMPLO     // Tirado do código: Function TRecord.Create_RCommands_Edit  if OkCmmNewRecord or OkCmmEvaluateRecord or OkCmmZeroizeRecord then begin        self.OkCmmDbLocaliza := true;        self.Locked := false;      end else begin         self.OkCmmDbLocaliza := Application.FileOptions_CommandEnabled(Module,ACmLocaliza);         self.Locked := True;       end;        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#OkCmmDbLocaliza"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.OkCmmZeroizeRecord", "text": "O atributo OkCmmZeroizeRecord indica se o registro pode ser excluído ou não, ou seja: é o estado inicial da ação excluir informada pelo usuário.       NOTA      True : O registro pode ser deletado.   False: O registro não pode ser deletado.   Esse atributo é usado nos seguintes métodos:      Create_RCommands_Edit   Nos métodos DeleteRec   Action Delete         EXEMPLO     // Tirado do código: Function TRecord.Create_RCommands_Edit  OkCmmZeroizeRecord  := Application.FileOptions_CommandEnabled(Module,ACmExclusao); if ACmExclusao&lt;=255 then   if OkCmmZeroizeRecord   then Application.EnableCommands([ACmExclusao])   Else Application.DisableCommands([ACmExclusao]);        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#OkCmmZeroizeRecord"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Max_List_Buttons", "text": "A constante Max_List_Buttons contém o número máximo de comandos da matriz Commands_Buttons   ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Max_List_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Commands_Buttons", "text": "O atributo Commands_Buttons contém os dados necessários para criar os botões de ações da classe de acesso a arquivos.       EXEMPLO DE USO DESTA MATRIZ     Commands_Buttons[1] := Create_RCommand(CmOk,'Ok'  ,'',KbEnter,AHelpCtx,Flag)&circ;; Commands_Buttons[2] := Create_RCommand(CmOk,'Next','',Kbno   ,AHelpCtx,Flag)^;        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Commands_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Create", "text": "O construtor Create é usado para iniciar o atributo _UiDmxScroller com o cast (aOwner as TUiDmxScroller)    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Create"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Set_Commands_Buttons_Mb", "text": "O Método Set_Commands_Buttons_Mb seta _Commands_Buttons_Mb e retorna o mapa de bits Commands_Buttons_Mb anterior.  EXEMPLO DE USO      //*** Seta as propriedades do fornecedor *** With ArqFornecedor do Begin   Alias := sgc('Parâmetros para pesquisa de duplicatas');   SetExpandable(False); //Não permite Inclusões   SetLocked(False); //false = Não travado porque a janela filha pode ser alterada e expandida   SetOkWriteRec(False);  //Desabilita a alteração.   Set_Commands_Buttons_Mb(Mb_Cm_Bof_Prev_Next_Eof); end;      ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Set_Commands_Buttons_Mb"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Create_RCommand", "text": "O método Create_RCommand é usado para iniciar os elementos da matriz Commands_Buttons       EXEMPLO E USO      Function Create_RCommands_Buttons(Var aCommands : Array of TRCommand):SmallWord; Begin   If High(aCommands) &lt; 2   Then Raise TException.Create(self,'Create_RCommands_Buttons()',ParametroInvalido);    Create_RCommand('CmDbGoBof'  ,CmDbGoBof   ,'&amp;Inicio'   ,'',kbNoKey,0,0,Mb_Cm_Bof   ,bfNormal ,aCommands[1]);   Create_RCommand('CmDbPrevRec',CmDbPrevRec ,'&amp;Anterior' ,'',kbNoKey,0,0,Mb_Cm_Prev  ,bfNormal ,aCommands[2]);  end;         ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Create_RCommand"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Create_RCommands_Buttons", "text": "O método Create_RCommands_Buttons retorna em aCommands a matriz aberta de TRCommand e em result retorna o número de elementos adicionados em aCommands.       EXEMPLO E USO       Var    Commands_Buttons_High : Byte; //Numero de comandos de Commands    Commands_Buttons      : Array[0..Max_List_Buttons] of TRCommand; Begin   Commands_Buttons_High := Create_RCommands_Buttons(Commands_Buttons); end;         ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Create_RCommands_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Add_RCommands_Buttons", "text": "O método Add_RCommands_Buttons adiciona um botão na posição Commands_Buttons[Commands_Buttons_High+1].    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Add_RCommands_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Length_Button_Name_Actives", "text": "O método Length_Button_Name_Actives retorna a soma do número de caracteres do campo TRCommand.name dos botões ativos    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Length_Button_Name_Actives"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Get_Commands_Mb_i", "text": "O método Get_Commands_Mb_i retorna a posição na matriz Commands_Buttons do mapa de bit passado por aMb_Bits.       Nota      A posição deve ser a mesma do Mapa: _Commands_Buttons_Mb          ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Get_Commands_Mb_i"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Get_Commands_Mb_StrCommand", "text": "Retorna o nome do comando passado per aMb_Bits.    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Get_Commands_Mb_StrCommand"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Commands_Buttons_High", "text": "A propriedade Commands_Buttons_High contém o número de linhas inicializadas da matriz Commands_Buttons, ou seja: é igual o número de linhas criadas em: Create_RCommands_Buttons.   ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Commands_Buttons_High"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Commands_Buttons_Mb", "text": "O atributo Commands_Buttons_Mb contém o mapa de bits dos botões que serão criados no formulário.       NOTA      O mapa de bits é do tipo longint (4 bytes) por isso pode conter no máximo (4x8=32) botões.         ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Commands_Buttons_Mb"},
     {"title": "mi_rtl_ui_dmxscroller_form", "text": "A unit mi_rtl_ui_dmxscroller_form implementa a classe TDmxScroller_Form.       Primeiro autor: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)   VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      uMi_rtl_ui_Dmxscroller_form.pas      HISTÓRICO:      umi_ui_dmxscroller_form_historico.md      PENDÊNCIAS      T12 Documentar a unit.   T12 Criar propriedade UiDmxScroller_Buttons:TUiDmxScroller_Buttons      CONCLUÍDO      Criar atributo private FirstDataRow : integer; ✅   Criar atributo private PrevRec : integer; ✅   Criar atributo protected DMXFields : TFPList; ✅   Criar atributo protected FldRadioButtonsAdicionados:TStringList;✅   Criar atributo Public Function SetHelpCtx_Hint ✅   Criar atributo Public Procedure SetHelpCtx_Hint ✅   Criar constructor Create(aOwner:TComponent);Override; ✅   Criar método public procedure AfterConstruction; override; ✅   Criar public destructor destroy;override; ✅   Criar método protected procedure ShowControlState;override; ✅   Criar método protected procedure CreateStruct ✅   Criar método Protected procedure DestroyStruct; Override; ✅   Criar método procedure Scroll_it_inview_LCL ✅   Criar método public procedure Scroll_it_inview ✅   Criar método protected procedure CreateFormLCL ✅   Criar método public function GetTemplate(aNext: PSItem) ✅   Criar método protected procedure UpdateBuffers_Controls;virtual; ✅   Criar método public procedure UpdateBuffers;override; ✅   Criar método public procedure Refresh;override; ✅   Criar método protected procedure SetActiveTarget(aActive : Boolean);override; ✅   Criar método protected procedure SetActive(aActive : Boolean);override; ✅         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.DMXFields", "text": "O atributo DMXFields salva todos os rótulos e campos da lista de Templates       MOTIVO      A classe mãe TUiDmxScroller mãe da classe TDmxScroller_Form cria Template de apenas uma linha, a lista DMXFields salva todas as linhas para geração de um Template do tipo formulário.         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#DMXFields"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.FldRadioButtonsAdicionados", "text": "Usado para evitar que RadiosButton sejam adicionados mais de uma vês em radiosgroups diferentes.      Mais informações veja campos FldRadioGrous.      ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#FldRadioButtonsAdicionados"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo. aFldNum    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo passado em :apDmxFieldRec    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form", "text": "A classe TDmxScroller_Form implementa a construção de formulários usando uma lista de Templates do tipo TDmxScroller   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Create"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.AfterConstruction", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#AfterConstruction"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.destroy", "text": "Destrói o componente    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#destroy"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.CreateStruct", "text": "O método CreateStruct interpreta uma lista de strings do tipo PSItem e adiciona os layout de cada campo em pDmxFieldRec, em seguida adiciona pDmxFieldRec em DMXFields com todos os campos de formação de formulário visual.    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#CreateStruct"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.DestroyStruct", "text": "O método DestroyStruct destrói os dados criados em CreateStruct().    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#DestroyStruct"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.GetTemplate", "text": "O método GetTemplate retorna uma lista de PSItem (Lista de strings) com o modelo usado para criar a tela.       NOTA      O Evento onGetTemplate só é iniciado em tempo de execução, por isso o formulário não pode ser criado em tempo de desenho do aplicativo.   Caso o evento onGetTemplate seja nil, então não posso ativar a tela.   Esse método pode ser anulado, caso se queira ignorar o evento onGetTemplate e definir o Template em uma método pai herdado desta classe.   O modelo cria um formulário usando os tipos de dados primitivos.      EXEMPLO      // Implementação de um modelo no Alvo LCL function TDMAlunos.DmxScroller_Form_AlunoGetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form_Aluno do   begin     // AlignmentLabels:= taCenter;     AlignmentLabels := taLeftJustify;     // AlignmentLabels := taRightJustify ;     Result :=       NewSItem('&tilde;     Matrícula &tilde;\\LLLLL'+CharFieldName+'matricula'+CharAccReadOnly+CharPfInKeyPrimary+CharPfInAutoIncrement,       NewSItem('&tilde;Nome do aluno: &tilde;\\ssssssssssssssssssss`sssssss'+CharFieldName+'Nome'+CharPfInKey,       NewSItem('',       NewSItem('&tilde;     Endereço: &tilde;\\ssssssssssssssssssss`sssssssssss'+CharFieldName+'Endereco',       NewSItem('&tilde;P. Referência: &tilde;\\ssssssssssssssssssss`sssss'+CharFieldName+'PontoDeReferencia',       NewSItem('&tilde;          Cep: &tilde;\\##.###-###'+CharFieldName+'cep',       NewSItem('&tilde;       Estado: &tilde;\\SS'+CharFieldName+'Estado'+CharForeignKeyN_Um_false+'Estados,Estado',       NewSItem('&tilde;       Cidade: &tilde;\\ssssssssssssssssssss`sssss'+CharFieldName+'cidade'+CharForeignKeyN_Um_false+'Cidades,Estado;Cidade',       NewSItem('',       aNext)))))))));   end; end;         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#GetTemplate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.UpdateBuffers_Controls", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#UpdateBuffers_Controls"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.UpdateBuffers", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#UpdateBuffers"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.SetActiveTarget", "text": "A procedure SetActiveTarget seta a propriedade active e criar um formulário na plataforma alvo    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#SetActiveTarget"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.SetActive", "text": "A procedure SetActive seta a propriedade active e criar um formulário LCL ou HTML dependendo do tipo de aplicação    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#SetActive"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.name", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#name"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Alias", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Alias"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Strings", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Strings"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.OnAddTemplate", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#OnAddTemplate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.OnNewRecord", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#OnNewRecord"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onCloseQuery", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onCloseQuery"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onEnter", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onEnter"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onExit", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onExit"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onEnterField", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onEnterField"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onExitField", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onExitField"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onGetTemplate", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onGetTemplate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Active", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Active"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.AlignmentLabels", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#AlignmentLabels"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.ActionList", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#ActionList"},
     {"title": "mi_rtl_ui_dmxscroller_form.accDelimiter", "text": "A constante accDelimiter informa que o campo é delimitador de campos no Template.   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accDelimiter"},
     {"title": "mi_rtl_ui_dmxscroller_form.accHidden", "text": "A constante accHidden (Const accHidden = 2;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o mesmo é invisível.       EXEMPLO      Como usar o mapa de bits accHidden para saber se o campo está invisível.      with pDmxFieldRec&circ; do   If (access and accHidden &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s está invisível'),[CharFieldName]);         end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accHidden"},
     {"title": "mi_rtl_ui_dmxscroller_form.AccNormal", "text": "A constante AccNormal (Const AccNormal = 0;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se que o campo pode ser editado.       EXEMPLO      Como usar o mapa de bits accNormal para saber se o campo pode ser editado.      with pDmxFieldRec&circ; do   If (access and accNormal &lt;&gt; 0)    then begin          ShowMessage(Format('O campo %s pode ser editado'),[FieldName]);        end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#AccNormal"},
     {"title": "mi_rtl_ui_dmxscroller_form.accReadOnly", "text": "A constante accReadOnly (Const ReadOnly = 1;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo é somente para leitura.      EXEMPLO      Como usar o mapa de bits ReadOnly para saber se o campo não pode ser editado.    with pDmxFieldRec&circ; do   If (access and ReadOnly &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode ser editado'),[FieldName]);        end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accReadOnly"},
     {"title": "mi_rtl_ui_dmxscroller_form.accSkip", "text": "A constante accSkip (Const accSkip = 4;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo pode receber o focus.      EXEMPLO      Como usar o mapa de bits accSkip para saber se o campo não pode receber o focus.    with pDmxFieldRec&circ; do   If (access and accSkip &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode receber o focus'),[FieldName]);        end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accSkip"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharHint", "text": "A constante CharHint é usado para documentar o campo e indica que todo o texto até o próximo caractere de controle será o conteúdo do campo HelpCtx_Hint.       EXEMPLO      Resourcestring   tmp_Alunos_Idade = '\\BB'+ChFN+'idade'+CharUpperlimit+#64+                      CharHint+'A idade do aluno. Valores válidos 1 a 64'+                      CharHintPorque+'Este campo é necessário para que se agrupe o alunos baseado em sua faixa etária'+                      CharHintOnde+'Ele será usado pelo coordenador ao classificar a turma';    tmp_Alunos_Matricula = \\IIII'+ChFN+'matricula'+CharHint+'A matricula do aluno é um campo sequencial e calculado ao incluir o registro';   tmp_Alunos = '&tilde;     Idade:&tilde;%s'+lf+               '&tilde; Matricula:&tilde;%s        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharHint"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharHintOnde", "text": "A contante CharHintOnde informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Onde   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharHintOnde"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharHintPorque", "text": "A contante CharHintPorque informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Porque   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharHintPorque"},
     {"title": "mi_rtl_ui_dmxscroller_form.fld_LData", "text": "A constante fld_LData é do tipo TDateTime e guarda a data compactada 'dd/dd/dd'   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fld_LData"},
     {"title": "mi_rtl_ui_dmxscroller_form.fld_LHora", "text": "A constante fld_LHora é do tipo TDateTime e guarda a hora compactada ##:##:##   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fld_LHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiChar", "text": "A constante fldAnsiChar (Const fldAnsiChar = 'C') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'C' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\CCCCCCCCCC'; //PAULO SÉRG           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiChar"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiChar_Minuscula", "text": "A constante fldAnsiChar_Minuscula (Const fldAnsiChar = 'c') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'c' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere minúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\cccccccccc'; //paulo Sérg   Nome := '\\Cccccccccc'; //Paulo Sérg           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiChar_Minuscula"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiCharNUM", "text": "A constante fldAnsiCharNUM (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] .       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(00) 0 0000-0000' //85 9 9702 4498           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiCharNUM"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiCharVAL", "text": "A constante fldAnsiCharVAL (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] com formatação dbase.       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(NN) N NNNN-NNNN' //85 9 9702 4498           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiCharVAL"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAPPEND", "text": "A constante fldAPPEND é usada para concatenar duas listas do tipo PSItem.       A constante fldAPPEND é necessário porque DmxScroller trabalha com string curta e a mesma tem um tamanho de 255 caracteres, onde o tamanho está na posição 0.   Como usar a constante fldAPPEND:       A função CreateAppendFields retorna a constante fldAPPEND mais o endereço da string a ser concatenada.       EXEMPLO      procedure Template : ShortString;   Var     S1,s2,Template : TString; begin   S1 := '&tilde;Nome do Aluno....:&tilde;\\ssssssssssssssssssssssssssssssssss';   s2 := '&tilde;Endereço do aluno:&tilde;\\sssssssssssssssssssssssss';   result := S1+CreateAppendFields(s2); end;     NOTA      A contante fldAPPEND foi criada porque o projeto inicial foi para turbo pascal e ambiente console.   A versão atual podemos usar AnsiString visto que o limite do mesmo é a memória.   Para usar AnsiString é necessário converter para PSitem com a função: StringToSItem.       EXEMPLO:      function TMI_UI_InputBox.DmxScroller_Form1GetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form1 do   begin     if _Template  &lt;&gt; ''     then Result := StringToSItem(_Template, 80);  //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Esquerda) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Central) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Direita) //    Result := StringToSItem(_Template, 80,TObjectsTypes.TAlinhamento.Alinhamento_Justificado)      else result := nil;   end; end;                    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAPPEND"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldBLOb", "text": "A constante fldBLOb indica que o campo é não formatado podendo ser um Record, porém a edição do mesmo será feito por outros meios.       NOTA      Para informar ao buffer do registro que o campo é fldBLOb, a função CreateBlobField é necessário.   A class function TUiMethods.CreateBlobField(Len: integer; AccMode,Default: byte) : DmxIDstr; reserva espaço para o mesmo.   Pendência: Preciso criar um exemplo de uso deste tipo de informação.         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldBLOb"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldBYTE", "text": "A constante fldBYTE (Const fldBYTE = 'B') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'B' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo byte.       EXEMPLO      Const    idade := '\\BB' //Os dois dígitos estarão em um buffer de 1 byte;        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldBYTE"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldBoolean", "text": "A constante fldBoolean (fldBoolean = 'X') indica que o campo é do tipo byte e só pode ter dois valores.       NOTA      Valores possíveis:      0 - False; não   1 = True; sim      A forma de editá-los deve ser com o componente checkbox.      EXEMPLO      Resourcestring   tmp_Aceita = '\\[X]'+ChFN+'Aceita_contrato'+CharHint+'Aceita os termos do contrato?';   Template = tmp_Aceita+'&tilde;Aceita os termos do contrato&tilde;';        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldBoolean"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldCONTRACTION", "text": "A constante fldCONTRACTION ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldCONTRACTION"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldData", "text": "A constante fldData ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldData"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldDateTimeDos", "text": "A constante FldDateTimeDos ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldDateTimeDos"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldENUM", "text": "A constante fldENUM (fldENUM=&circ;E) é um campo do tipo byte(0..255) que contém uma lista de string que são selecionadas por um componente tipo ComboBox.       EXEMPLO        Const tmpMidia : PSitem = nil; begin   tmpMidia := CreateEnumField(TRUE, accNormal, 0,                               NewSItem(' indefinido ',                               NewSItem(' PenDriver  ',                               NewSItem(' SSD        ',                               nil))))+CharFieldName+'Midia;    Template = NewSItem('&tilde;  Eu uso &tilde;'+ tmpMidia + '&tilde; em meu computador.&tilde;        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldENUM"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharExecAction", "text": "A contante CharExecAction é usado para associar ao campo atual uma classe TAction.       NOTA      O interpretador de Templates associa a ação do Template ao corrente campo.      EXEMPLO DE USO DE AÇÕES NO TEMPLATE      Se o atributo Fieldnum do campo for diferente de zero, então o rótulo do botão associado a ação será o caracteres 🔍 e a ação pode atualizar o buffer do campo.      No exemplo a seguir um rótulo e um campo de cliente:      NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CharExecAction+CreateExecAction(Action_pesquisa)        Se o atributo Fieldnum do campo for igual a zero, então a rótulo do botão será o rótulo do campo.      No exemplo a seguir um rótulo de novo cliente (icons 🆕) e um botão ok (icons 🆗)      NewSItem('&tilde; 🆕 &amp;Novo cliente:&tilde;'+CharExecAction+CreateExecAction(Action_Novo)+          '&tilde;   &tilde;&tilde; 🆗 &tilde;'+CharExecAction+CreateExecAction(Action_Ok)              ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharExecAction"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldExtended", "text": "A constante fldExtended (fldExtended='E') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'E' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo Extended.       EXEMPLO      Const    Valor := '\\EEE,EEE,EEE,EEE,EE' //Todos os números editados nesta                                   //mascara, estarão em um buffer de 10 bytes;        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldExtended"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharFieldName", "text": "A constante CharFieldName usada para informar o nome do campo informado antes deste caractere.       EXEMPLO      Const   idade := '\\BB'+CharFieldName+'idade'        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharFieldName"},
     {"title": "mi_rtl_ui_dmxscroller_form.ChFN", "text": "A constante ChFN é igual a CharFieldName. Foi criada para facilitar seu uso.   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#ChFN"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldHexValue", "text": "A constante fldHexValue ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldHexValue"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldLData", "text": "A constante fldLData ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldLData"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldLHora", "text": "A constante fldLHora ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldLHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldLONGINT", "text": "A constante fldLONGINT ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldLONGINT"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldMemo", "text": "A constante FldMemo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldMemo"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldOperador", "text": "A constante FldOperador ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldOperador"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldRadioButton", "text": "A constante FldRadioButton ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldRadioButton"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4", "text": "A constante fldReal4 ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4P", "text": "A constante fldReal4P ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4P"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4Positivo", "text": "A constante fldReal4Positivo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4Positivo"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4PPositivo", "text": "A constante fldReal4PPositivo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4PPositivo"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldRealNum", "text": "A constante fldRealNum ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldRealNum"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldRealNum_Positivo", "text": "A constante fldRealNum_Positivo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldRealNum_Positivo"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldSData", "text": "A constante FldSData ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldSData"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldSDateTimeDos", "text": "A constante FldSDateTimeDos ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldSDateTimeDos"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldSHora", "text": "A constante FldSHora ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldSHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSHORTINT", "text": "A constante fldSHORTINT ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSHORTINT"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSItems", "text": "A constante fldSItems ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSItems"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSmallInt", "text": "A constante fldSmallInt ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSmallInt"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSmallWORD", "text": "A constante fldSmallWORD ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSmallWORD"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSTR", "text": "A constante fldSTR (Const fldStr = 'S') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'S' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\SSSSSSSSSS'  //PAULO SÉRG           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSTR"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSTR_Minuscula", "text": "A constante fldSTR_Minuscula (Const fldSTR_Minuscula = 's') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 's' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere minúscula.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\ssssssssss' //paulo sérg   Nome := '\\Ssssssssss' //Paulo sérg           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSTR_Minuscula"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSTRNUM", "text": "A constante fldSTRNUM (Const fldSTRNUM = '#') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '#' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere numérico.       EXEMPLO      Representação de um string de 11 dígitos em um buffer de 12 bytes onde o byte zero contém o tamanho da string;      Const   telefone := '\\(##) # ####-####' //85 9 9702 4498           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSTRNUM"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharUpperlimit", "text": "A constante CharUpperlimit (CharUpperlimit=&circ;U) permite informar um limite superior para campos do tipo byte.       O gerador de formulário deve usar o conteúdo do campo pDmxFieldRec.Upperlimit para criticar se o valor do campo está na faixa entre 1 e pDmxFieldRec.Upperlimit.   O valor zero significa que o campo está nulo.   EXEMPLO      Um campo onde o seu conteúdo não ultrapasse um byte, pode ser informado no Template da seguinte forma:      Const   idade := '\\BBB+CharUpperlimit+#130+CharHint+'Não existe humanos com a idade superior a 130 anos.           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharUpperlimit"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldZEROMOD", "text": "A constante fldZEROMOD ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldZEROMOD"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharShowPassword", "text": "A constante CharShowPassword informa para controle que os caracteres não devem ser visualizado.       NOTA      Usados no campos tipo senha.         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharShowPassword"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharShowPasswordChar", "text": "A constante CharShowPasswordChar ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharShowPasswordChar"},
     {"title": "mi_rtl_ui_dmxscroller_form.TypeDate", "text": "A constante TypeDate ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TypeDate"},
     {"title": "mi_rtl_ui_dmxscroller_form._TypeDate", "text": "A constante _TypeDate ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#_TypeDate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TypeHora", "text": "A constante TypeHora ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TypeHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.TypeMemo", "text": "A constante TypeMemo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TypeMemo"},
     {"title": "mi_rtl_ui_dmxscroller_form.Register", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#Register"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxFieldRec", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TDmxFieldRec"},
     {"title": "mi_rtl_ui_dmxscroller_form.pDmxFieldRec", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#pDmxFieldRec"},
     {"title": "mi_rtl_ui_dmxscroller_form.SmallWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#SmallWord"},
     {"title": "mi_rtl_ui_Dmxscroller_sql", "text": "A unit mi_rtl_ui_Dmxscroller_sql implementa a classe TUiDmxScroller_sql.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_Dmxscroller_sql.pas   PENDÊNCIAS      T12 Falta implementar chave estrangeira em createTable;   T12 Em TUiDmxScroller_sql.DoOnNewRecord; está executando o método (CustomBufDataset as TSQLQuery).Append; antes do componenente TUiDmxScroller_sql está visível e isto está gerando exceção.   T12 ANÁLISE      [Estudar os procedimentos armazenados](https://www.w3schools.com/sql/sql_stored_procedures.asp)   [Estudar as restrições SQL](https://www.w3schools.com/sql/sql_constraints.asp)   Como saber se um campo é uma chave que liga outra tabela?      SQL FOREIGN KEY Constraint      /*Não, podemos permitir que os registros das pessoas que possuim camisetas   lavando sejam apagados, para garantir a integridade da informação.   Para isso devemos utilizar o as chaves estrangeiras que acusarão   um erro quando tentarmos deletar uma pessoa que possuir camisetas.   Veja em código: */  CREATE TABLE Pessoa(     IdPessoa INT NOT NULL PRIMARY KEY IDENTITY(1,1),     Nome VARCHAR(20) NOT NULL )  CREATE TABLE Camiseta(     IdCamiseta INT NOT NULL PRIMARY KEY IDENTITY(1,1),     Descrição VARCHAR(20) NOT NULL,     IdPessoa INT NOT NULL     CONSTRAINT FK_Camiseta_Pessoa FOREIGN  KEY(IdPessoa) REFERENCES Pessoa(IdPessoa) )  INSERT INTO Pessoa VALUES ('HeyJoe') INSERT INTO Pessoa VALUES ('Caique')   INSERT INTO Camiseta VALUES ('Azul', 1) INSERT INTO Camiseta VALUES ('Amarela', 1) INSERT INTO Camiseta VALUES ('Preta', 2)  SELECT * FROM Pessoa, Camiseta WHERE Pessoa.IdPessoa = Camiseta.IdPessoa        Como saber o tipo de relacionamento que os campos de outra tabela tem com a tabela atual?      T12 A opção CreateTable está dando mensagem de erro quando a coluna já existe.      Encontrar uma forma de não gerar exceção ou ignorar as exceções nesta rotina.      T12 Em TUiDmxScroller_sql.AlterTable checar:      T12 Criar código para todos os tipos reconhecidos por marIcaraí.   T12 Debugar para saber se está tudo funcionando.   T12 Permitir adicionar uma nova coluna mesmo que a tabela já exista.      T12 Em SetTableName(aTableName:String) criticar o nome aTableName é um nome válido para a tabela.      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br) ✅   2022-03-13      09:00      T12 Implementar a criação de código SQL baseado nos dados de TUiDmxScroller.      ANÁLISE:      Onde pegar o nome da tabela ou consulta? ✅      TUiDmxScroller.CustomBufDataset.FileName;      Onde pegar o nome dos campos da tabela CustomBufDataset.Filename? ✅      A lista de campos encontra-se em : TUiDmxScroller_Atributos.Fields : TFPList;      Como saber se TUiDmxScroller é uma tabela ou a uma consulta?      Se todos os TUiDmxScroller_Atributos.Fields[].FieldName não contém '|' é porque é FileName é uma tabela. ✅   Se pelo menos um TUiDmxScroller_Atributos.Fields[].FieldName contém '|' é porque é FileName é uma consulta envolvendo mais de uma tabela. ✅      Como saber se uma tabela ou consulta existe do banco de dados?      O SQL do postegres e do sqlite3 tem a clausula IN NOT EXISTS no comando CREATE TABLE:      EXEMPLO:     CREATE TABLE IF NOT EXISTS TEST01 ();  ✅              REFERÊNCIAS      SQL:2016      (PostgresSQL aceita 160 das 169 especificação 2016)(https://www.postgresql.org/docs/12/features.html)   [Comparativo entre os bancos de dados x conformidade SQL](https://en.wikipedia.org/wiki/SQL_compliance)   [Clientes de bancos de dados opensource](https://medevel.com/17-sql-client-open-source/)   Instalei programa cliente SQL DBeaver      Obs: Não deu certo. Ele é escrito em java e não funcionou o básico.      [sqlite create database if not exists](https://www.codegrepper.com/code-examples/sql/sqlite+create+database+if+not+exists)                  2022-03-14      08:22      T12 Criar a unit mi_ui_Dmxscroller_sql.pas com a classe TUiDmxScroller_sql com objetivo de concentrar a integração do TDmxScroller com o componente TSQLQuery ✅      20:00      T12 Na Construção de TFields atualizar a propriedade TField.ProviderFlags com o tipo de acesso definido em TDmxFieldRec.Access ✅      21:12      T12 Criar propriedade TableName ✅      21:27      T12 Criar Function SetSqlCustomBufDataset:Boolean;Virtual;      CustomBufDataset.SQL := SELECT * FROM X  onde X será definido pela propriedade TableName ✅            2022-03-15      09:11      Depurar o que fiz ontem para fazer funciona a atualização do banco de dados SQL. ✅      11:36      Criar método TUiDmxScroller_sql.AlterTable : Boolean; ✅      14:38      T12 Atualizar TSQLQury.TFields.ProviderFlags com TUiDmxScroller.MiProviderFlags ✅         2022-03-16      16:23      T12 Em TUiDmxScroller_sql.CreateCustomBufDataset_FieldDefs, atualizar TField.ProviderFlags com os dados do campo TDmxFieldRec.ProviderFlags. ✅      16:54      Em TUiDmxScroller_sql.AlterTable usar os flags TDmxFieldRec.ProviderFlags para criação da tabela. ✅         2022-03-17      10:48      T12 Os flags indicando que se trata de chave primária não está sendo atualizado em createStructor, por isso não está criando a chave primária. ✅         2022-03-18      10:40      T12 Ao criar uma tabela SQL em AlterTable adicionar colunas ao invés de criar a tabela toda. ✅      Motivo:      Permitir que o banco de dados fique compatível com o Template.   Alterar um coluna de forma automática não é bom, porque o que está feito gera dependências que produzirão erros ao fazer essas alterações.               2022-03-21      08:57      T12 Criar function SQL_AddkeysPrimaryKeyComposite(I : Integer):Boolean; ✅      Esta função adiciona chave primária composta na tabela.   REFERÊNCIA      [Como adiconar chave primaria usando a expressão ALTER TABLE](https://www.techonthenet.com/postgresql/primary_keys.php#:&tilde;:text=In%20PostgreSQL%2C%20a%20primary%20key%20is%20created%20using%20either%20a,or%20drop%20a%20primary%20key.)            15:40      T12 Em AlterTable criar a restrição de chave estrangeira no TDmxScroller_sql. ✅      Nome da função: function AddKeyForeigns(I : Integer):Boolean;            2022-03-22      09:00      T12 Documentar as units TuiTypes e TUIConsts. ✅      10:00      T12 Criar os relacionamentos entre tabelas (restrições entre tabelas) ✅      14:14      T12 Depurar os relacionamentos entre tabelas. ✅      18:47      O Componente CustomBufDataset não está entrando no modo edit. ✅      O problema estava nos eventos TScrollBoxDMX.DoOnEnter e TScrollBoxDMX.DoOnExit;]            2022-03-22      20:27      T12 Analisar como criar os comandos CmIncluir, cmAlterar, cmExcluir, cmConsulta para a tabela TDmxScroller      Criar os comandos: ✅      Public Procedure DoOnNewRecord;overload;override; //Usado para inicializa os parametros de um novo registro   Public Procedure PutRec;Override;//Grava o buffer no arquivo memo   Public Procedure GetRec;Override;//O primeiro registro esta gravado em Value   Public Function DeleteRec:Boolean;Override;   Function UpdateRec: Boolean;Override;   Function UpdateRec_if_RecordAltered:Boolean;Override;   Function PrevRec : Boolean;overload;override;   Function NextRec : Boolean;overload;override;               2022-03-23      Criar método Public Function AddRec:Boolean;Override; ✅      Para que DoAddrec possa adicionar o registro é necessário que o registro esteja selecionando, ou seja no modo edit.   Obs: Está com problema.         2022-03-25      Estudar página sobre o banco de dados firebird ✅      2022-03-28      Em TUiDmxScroller_sql.DoOnNewRecord; está executando o método (CustomBufDataset as TSQLQuery).Append; antes do componenente TUiDmxScroller_sql está visível e isto está gerando exceção. -      2022-03-30      Implementar a conexão com o banco de dados usando o componente Mi_Application.      2022-04-14      Debugar o método TUiDmxScroller_sql.AlterTable.      2022-04-15      O método TUiDmxScroller_sql.AlterTable precisa reconhecer a sintaxe do banco de dados selecionado.      O postgresSQL sintaxe:      CREATE TABLE [IF NOT EXISTS] table_name ( column1 datatype(length) column_contraint, column2 datatype(length) column_contraint, column3 datatype(length) column_contraint, table_constraints );   REFERÊNCIA      [postgresql-create-table](https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/)         O sqLite3 sintaxe:      CREATE TABLE [IF NOT EXISTS] [schema_name].table_name ( column_1 data_type PRIMARY KEY, column_2 data_type NOT NULL, column_3 data_type DEFAULT 0,table_constraints) [WITHOUT ROWID];   REFERÊNCIA:      [sqlite-create-table](https://www.sqlitetutorial.net/sqlite-create-table/)                        ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.html"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos", "text": "A class TDmxScroller_sql_Atributos contém os atributos da class TDmxScroller_sql   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.html"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.CustomBufDataset", "text": "O atributo pública CustomBufDataset é definida em CreateCustomBufDataset_FieldDefs que é executado em TDmxScroller.CreateData baseado na estrutura do Template passado por GetTemplate.       NOTA      O atributo CustomBufDataset deve ser passado por DataSource.DataSet.   Em CreateCustomBufDataset_FieldDefs é criado os campo da propriedade CustomBufDataset se a propriedade (DataSource&lt;&gt;nil) e (DataSource.DataSet &lt;&gt; nil).   Se a propriedade DataSource.DataSet = nil então a propriedade CustomBufDataset=nil   O método CreateCustomBufDataset_FieldDefs reconhece duas possibilidade para os descendentes de CustomBufDataset quais sejam:      [TBufDataset](https://www.freepascal.org/docs-html/fcl/bufdataset/tbufdataset.html)   TCustomSQLQuery      Preciso das propriedades de acesso a banco de dados SQL.   O evento OnGetTemplate deve setar as propriedades customizadas de TCustomSQLQuery.            REFERẼNCIA:      [tcustombufdataset](https://www.freepascal.org/daily/packages/fcl-db/bufdataset/tcustombufdataset-14.html)   [tcustomsqlquery](https://www.freepascal.org/docs-html/fcl/sqldb/tcustomsqlquery.html)   TCustomBufDataset;   [TBufDataSet](https://wiki.freepascal.org/How_to_write_in-memory_database_applications_in_Lazarus/FPC#TBufDataSet)   [tstatementtype.html](https://www.freepascal.org/docs-html/fcl/sqltypes/tstatementtype.html)   [tsqlquery](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.html)   [tdatasetstate](https://www.freepascal.org/docs-html/fcl/db/tdatasetstate.html)   [How_to_connect_to_a_database_server](https://wiki.freepascal.org/SqlDBHowto#How_to_connect_to_a_database_server.3F)   [Example:_reading_data_from_a_table](https://wiki.freepascal.org/SqlDBHowto#Example:_reading_data_from_a_table)   [How_to_execute_direct_queries.2Fmake_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_execute_direct_queries.2Fmake_a_table.3F)   [How_to_read_data_from_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_read_data_from_a_table.3F)   [Why_does_TSQLQuery.RecordCount_always_return](https://wiki.freepascal.org/SqlDBHowto#Why_does_TSQLQuery.RecordCount_always_return_10.3F)   [Como usar SQLDb no Lazarus](https://wiki.freepascal.org/SqlDBHowto#Lazarus)   [Trabalhando com tabelas relacionadas](https://wiki.freepascal.org/MasterDetail)   [How_to_change_data_in_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_change_data_in_a_table.3F)   [How_does_SqlDB_send_the_changes_to_the_database_server](https://wiki.freepascal.org/SqlDBHowto#How_does_SqlDB_send_the_changes_to_the_database_server.3F)   [How_to_handle_Errors](https://wiki.freepascal.org/SqlDBHowto#How_to_handle_Errors)   [How_to_execute_a_query_using_TSQLQuery](https://wiki.freepascal.org/SqlDBHowto#How_to_execute_a_query_using_TSQLQuery.3F)   [How_to_use_parameters_in_a_query](https://wiki.freepascal.org/SqlDBHowto#How_to_use_parameters_in_a_query.3F)   [Select_query](https://wiki.freepascal.org/SqlDBHowto#Select_query)   [Exemplo de SQLQuery com parãmetros](https://wiki.freepascal.org/SqlDBHowto#Example)   Troubleshooting:_TSQLConnection_logging      [Exemplo de log](https://wiki.freepascal.org/SqlDBHowto#FPC_.28or:_the_manual_way.29)            ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.html#CustomBufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql", "text": "A classe TUiDmxScroller_sql implementa o acesso ao banco de dados usando o atributo CustomBufDataset       NOTA      O atributo CustomBufDataset pode ser TBufDataset não conectado a banco de dados sql e TCustomSQLQuery conectado ao banco de dados SQL.      REFERÊNCIA      [Working_With_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery)   [Parameters_in_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery#Parameters_in_TSQLQuery.SQL)   [sql-basico](https://www.devmedia.com.br/sql-basico/28877)         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql._DataSource", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#_DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetDataBase", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetDataBase"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#Create"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetkeysPrimaryComposite", "text": "O método GetkeysPrimaryComposite retorna a lista de campos pertencentes a chave composta primária.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetkeysPrimaryComposite"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetKeysPrimary", "text": "A função GetKeysPrimary retorna a chave primária composta ou não na tabela.       Como TSQLQuery trata os campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói um comando SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags .   A propriedade Providerflags é um conjunto de 3 sinalizadores:      pfInkey : O campo faz parte da chave primária   pfInWhere : O campo deve ser utilizado na cláusula WHERE das instruções SQL.   pfInUpdate : Atualizações ou inserções devem incluir este campo. Por padrão, ProviderFlags consiste apenas em pfInUpdate .   NOTA*      Se sua tabela tiver uma chave primária (conforme descrito acima), você só precisará definir a propriedade **UsePrimaryKeyAsKey    como True e tudo será feito para você. Isso definirá o sinalizador pfInKey para os campos de chave primária.         REFERÊNCIA      [Working With TSQLQuery e Primary_key_Fields](https://wiki.freepascal.org/Working_With_TSQLQuery#Primary_key_Fields)          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetKeysPrimary"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.CreateTable", "text": "A função CreateTable cria a tabela se a mesma não existir    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#CreateTable"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.AlterTable", "text": "O método AlterTable cria a tabela ou consulta TableName no banco de dados caso a propriedade TableName não existe no banco de dados e TableName seja diferente de vazio.       O método TUiDmxScroller_sql.AlterTable precisa reconhecer a sintaxe do banco de dados selecionado.      O postgresSQL sintaxe:      CREATE TABLE [IF NOT EXISTS] table_name ( column1 datatype(length) column_contraint, column2 datatype(length) column_contraint, column3 datatype(length) column_contraint, table_constraints );   REFERÊNCIA      [postgresql-create-table](https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/)         O sqLite3 sintaxe:      CREATE TABLE [IF NOT EXISTS] [schema_name].table_name ( column_1 data_type PRIMARY KEY, column_2 data_type NOT NULL, column_3 data_type DEFAULT 0,table_constraints) [WITHOUT ROWID];   REFERÊNCIA:      [lang_createtable.html](https://www.sqlite.org/lang_createtable.html)   [sqlite-create-table](https://www.sqlitetutorial.net/sqlite-create-table/)   [lang_createtable.html](https://www.sqlite.org/lang_createtable.html)            NOTAS      As tabelas só são criadas automaticamente caso a constante AlterTableQL = true.   Ao adiciona uma coluna que já exista no banco de dados o sistema trata a exceção e tenta adicionar a próxima coluna. Motivo: Poder expandir a tabela dinâmicamente.   O comportamento do Banco de dados SqLite ao criar uma tabela é diferente do postgres.      O sqLite não permite criar tabela vazia.             ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#AlterTable"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetSqlCustomBufDataset", "text": "O método SetSqlCustomBufDataset inicializa as propriedades SQLs de CustomBufDataset       PROPRIEDADES OBRIGATÓRIAS SEREM INICIALIZADAS:      CustomBufDataset.SQL;      PROPRIEDADES OPCIONAIS SEREM INICIALIZADAS:      CustomBufDataset.InsertSQL;   CustomBufDataset.UpdataSQL;   CustomBufDataset.DeleteSQL;   CustomBufDataset.RefreshSQL;      GERAÇÃO AUTOMÁTICA DE INSTRUÇÃO SQL DE ATUALIZAÇÃO      O SqlDb (mais em particular, TSQLQuery ) pode gerar automaticamente instruções de atualização para os dados que busca. Para isso, ele irá varrer a instrução propriedade CustomBufDataset.SQL e determinar a tabela principal na consulta: esta é a primeira tabela encontrada na parte FROM da instrução SELECT .      Exemplo:      SELECT * FROM ALUNOS         Alunos será a tabela selecionada para uso dos campos de TField.         Para operações INSERT e UPDATE, a propriedade instrução SQL gerada inserirá e atualizará todos os campos que possuim pfInUpdate em sua propriedade TField.ProviderFlags.      Os campos somente leitura não serão adicionados à instrução SQL.   Os campos que são NULL não serão adicionados a uma consulta de inserção, o que significa que o servidor de banco de dados inserirá o que estiver na cláusula DEFAULT da definição de campo correspondente.      O campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói os comandos SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags.   A propriedade TField.ProviderFlag é um conjunto de 6 sinalizadores:      pfInUpdate : As alterações no campo devem ser propagadas para o banco de dados..   pfInWhere : O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.   pfInKey : Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.   pfHidden : O valor deste campo deve ser atualizado após a inserção.   pfRefreshOnInsert : O valor deste campo deve ser atualizado após a inserção.   pfRefreshOnUpdate : O valor deste campo deve ser atualizado após a atualização.            REFERẼNCIAS      [TSQLQuery Introdução](https://wiki.freepascal.org/Working_With_TSQLQuery#General)   [TSQLQuery exemplos](https://wiki.freepascal.org/TSQLQuery)   https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.html   Trabalhando com TSQLQuery;   updatesqls.html;          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetSqlCustomBufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.CreateCustomBufDataset_FieldDefs", "text": "O método CreateCustomBufDataset_FieldDefs é usado para criar os campos de CustomBufDataset    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#CreateCustomBufDataset_FieldDefs"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetTemplate", "text": "O método GetTemplate retorna uma lista de PSItem (Lista de strings) com o modelo usado para criar a tela.       NOTA      O Evento onGetTemplate só é iniciado em tempo de execução, por isso o formulário não pode ser criado em tempo de desenho do aplicativo.   Caso o evento onGetTemplate seja nil, então não posso ativar a tela.   Esse método pode ser anulado, caso se queira ignorar o evento onGetTemplate e definir o Template em uma método pai herdado desta classe.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetBuffers", "text": "O método GetBuffers ler o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql para o buffer dos campos da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.PutBuffers", "text": "O método PutBuffers grava o buffer dos campos da classe TUiDmxScroller_sql para o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#PutBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetActiveLCL", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetActiveLCL"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.DoOnNewRecord", "text": "O método DoOnNewRecord seleciona o registro para adição de um novo registro      NOTA      Está gerando exceção.?????          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DoOnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.DoAddRec", "text": "O método DoAddRec adicione o registro editado no banco de dados. = OBSERVAÇÂO      O método DoAddRec só funciona se o registro atender as seguintes condições:      appending =true;   Mb_St_Insert habilidado   CustomBufDataset &lt;&gt; nil   CustomBufDataset.Active = true;           REFERÊNCIA      [tsqlquery.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.options.html)          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DoAddRec"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.DataSource", "text": "A propriedade DataSource permite que controles da LCL (Lazarus Componenents Library) possam usar os dados do componenente TDmxScroller.       NOTA      Essa integração permite que TDmxScroller utilize todos os componentes de banco de dados do Free Pascal.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DataSource"},
     {"title": "mi_rtl_ui_interfaces", "text": "     A unit mi_rtl_ui_interfaces é usada para implementar as interfaces do pacote mi.ui com propopósito de permitir que se possa criar as interfaces com usuário independente do pacote gráfico instalado.       NOTA      O IDE Lazarus cria automaticamente o número da interface. Tecla: Crt+Alt+G            ", "tags": "", "url": "mi_rtl_ui_interfaces.html"},
     {"title": "mi_rtl_ui_interfaces.IITable", "text": "   ", "tags": "", "url": "mi_rtl_ui_interfaces.html#IITable"},
     {"title": "mi_rtl_ui_interfaces.IIInputText", "text": "   ", "tags": "", "url": "mi_rtl_ui_interfaces.html#IIInputText"},
     {"title": "mi_rtl_ui_interfaces.TEnum_HelpCtx_StrCurrentCommand_Topic_Content_run", "text": "    HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_Indefinido    HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_indicator    HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File   ", "tags": "", "url": "mi_rtl_ui_interfaces.html#TEnum_HelpCtx_StrCurrentCommand_Topic_Content_run"},
     {"title": "mi_rtl_ui_methods", "text": "   ", "tags": "", "url": "mi_rtl_ui_methods.html"},
     {"title": "mi_rtl_ui_methods.TUiMethods", "text": "   ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateAppendFields", "text": "A class function CreateAppendFields é usado para encandear Templates do tipo TString    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateAppendFields"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateBlobField", "text": "A class function CreateBlobField é usado para encandear campos do tipo blob    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateBlobField"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateEnumField", "text": "A class function CreateEnumField é usado para encandear Templates do tipo enumerado    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateEnumField"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateCheckBoxField", "text": "A class function CreateCheckBoxField é usado para encandear Templates do tipo checkbox    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateCheckBoxField"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateTSItemFields", "text": "A class function CreateTSItemFields é usado para encandear Templates do tipo PSItem    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateTSItemFields"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateOptions", "text": "A class function CreateOptions é usado para informar uma lista de opções para o campo.       NOTA O campo que pode receber uma lista pode ser de qualquer tipo, exceto os tipos:      FldEnum,FldBoolean e FldRadioButton.      EXEMPLO DE USO      with aUiDmxScroller do begin   add('&tilde;_EXEMPLO DE TEMPLATE________________________________________&tilde;');   add('');   add('&tilde;Vencimento:&tilde;\\Ssssss'+ChFN+'Vencimento'+CreateOptions(1,NewSItem('Dia 10',                                                                NewSItem('Dia 15',                                                                NewSItem('Dia 20',                                                                NewSItem('Dia 25',                                                                nil)))))+'&tilde; dias&tilde;');    add('&tilde;     Prazo:&tilde;\\BB'+ChFN+'Dias'+CreateOptions(2,NewSItem('30',                                                      NewSItem('60',                                                      NewSItem('90',                                                      NewSItem('120',                                                      nil)))))+'&tilde; dias&tilde;');    add(''); end;         ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateOptions"},
     {"title": "mi_rtl_ui_methods.TUiMethods.GetMaxTViRect", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#GetMaxTViRect"},
     {"title": "mi_rtl_ui_methods.TUiMethods.AnsiString_to_TCollectionString", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#AnsiString_to_TCollectionString"},
     {"title": "mi_rtl_ui_methods.TUiMethods.MsgDlgButtons_To_MsgDlgBtn", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#MsgDlgButtons_To_MsgDlgBtn"},
     {"title": "mi_rtl_ui_methods.TUiMethods.FStrSelection", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#FStrSelection"},
     {"title": "mi_rtl_ui_methods.TUiMethods.EliminaTilDeTodasAsStrings", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#EliminaTilDeTodasAsStrings"},
     {"title": "mi_rtl_ui_methods.TUiMethods.GetModalResult", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#GetModalResult"},
     {"title": "mi_rtl_ui_methods.TUiMethods.isValueDbChanged", "text": "O método isValueDbChanged verifica se o componente fornecido tem uma relação com db e o conteúdo foi alterado    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#isValueDbChanged"},
     {"title": "mi_rtl_ui_methods.TUiMethods.TextWidthChar", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#TextWidthChar"},
     {"title": "mi_rtl_ui_methods.TUiMethods.FMb_Bits", "text": "O método FMb_Bits retorna o mapa de bits da posição aBit. Ou seja: a função move o bit para a esquerda aBits posição.       NOTA      Como o mapa de bits possui 4 bytes este método gera exceção se aBit for maior que 32.      Example:      Command is: 00000100 shl 2 (shift left 2 bits)   Action is: 00000100 &lt;- 00 (00 gets added to the right of the value; left 00 &quot;disappears&quot;)   Result is: 00010000          ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#FMb_Bits"},
     {"title": "mi_rtl_ui_types", "text": "A unit mi_rtl_ui_types implementa a classe TUiTypes.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_types.pas   HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br) ✅   2022-03-16      19:49      Criar o tipo TStrSQL com objetivo de criar sql para qualquer banco de dados conhecido pelo sistema. ✅                  ", "tags": "", "url": "mi_rtl_ui_types.html"},
     {"title": "mi_rtl_ui_types.TUiTypes", "text": "A class TUiTypes concentra todos os tipo do pacote mi.ui.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.PRCommand", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PRCommand"},
     {"title": "mi_rtl_ui_types.TUiTypes.PRCommands", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PRCommands"},
     {"title": "mi_rtl_ui_types.TUiTypes.PValue", "text": "O tipo PValue é usado para acessar o dados do registro quando se sabe o tipo   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PValue"},
     {"title": "mi_rtl_ui_types.TUiTypes.PViRect", "text": "O tipo **PViRect é usado é usado para calcular os retângulos vizinhos do retângulado atual   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PViRect"},
     {"title": "mi_rtl_ui_types.TUiTypes.TDirection", "text": "O tipo TDirection é usado por TViRect para indicar o sentido do cálculo do novo retângulo    North  Nort = Acima da origem  South  Sul = Abaixo da origem  West  oeste A esquerda da origem  East  Leste = A direita da origem  CenterX  Centro de X da origem  CenterY  Centro de Y da origem  CenterXY  Centro de XY da origem ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TDirection"},
     {"title": "mi_rtl_ui_types.TUiTypes.TForeignKey", "text": "O tipo TForeignKey é usado para criar integridade referêncial.       REFERÊNCIA      [sql-createtable](https://www.postgresql.org/docs/11/sql-createtable.html)   [postgresql-foreign-key](https://www.postgresqltutorial.com/postgresql-foreign-key/)   [Introdução à restrição de chave estrangeira do PostgreSQL](https://www.postgresqltutorial.com/postgresql-foreign-key/)      OBSERVAÇÕES      As ações de TForeignKey são combinadas com o comando On Delete e On Update.      Exemplo:      Fk_action_No_Action = ON DELETE NO ACTION ON UPDATE NO ACTION   Fk_action_Restrict = ON DELETE RESTRICT ON UPDATE RESTRICT   Fk_Action_Cascade = ON DELETE CASCADE ON UPDATE CASCADE   Fk_Action_Set_Null = ON DELETE SET NULL ON UPDATE SET NULL   Fk_Action_Set_Default = ON DELETE SET DEFAULT ON UPDATE SET DEFAULT         Se as colunas referenciadas forem alteradas com frequência, pode ser aconselhável adicionar um índice às colunas de referência para que as ações referenciais associadas à restrição de chave estrangeira possam ser executadas com mais eficiência.          Fk_No_Action  Produz um erro indicando que a exclusão ou atualização criaria uma violação de restrição de chave estrangeira. Se a restrição for adiada, esse erro será produzido no momento da verificação da restrição se ainda existirem linhas de referência. Esta é a ação padrão.  Fk_Restrict  Produz um erro indicando que a exclusão ou atualização criaria uma violação de restrição de chave estrangeira. Isso é o mesmo que, NO ACTION exceto que o cheque não é adiável.  Fk_Cascade  Exclua todas as linhas que fazem referência à linha excluída ou atualize os valores das colunas de referência para os novos valores das colunas referenciadas, respectivamente.  Fk_Set_Null  Defina a(s) coluna(s) de referência como nula.  Fk_Set_Default  Defina a(s) coluna(s) de referência para seus valores padrão. (Deve haver uma linha na tabela referenciada que corresponda aos valores padrão, se eles não forem nulos, ou a operação falhará. ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TForeignKey"},
     {"title": "mi_rtl_ui_types.TUiTypes.TipoProc", "text": "O tipo TipoProc é usado quando se precisa de procedures anônimas sem parâmetros    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TipoProc"},
     {"title": "mi_rtl_ui_types.TUiTypes.TIRCommands", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TIRCommands"},
     {"title": "mi_rtl_ui_types.TUiTypes.TMiProviderFlag", "text": "Usado por TDmxScroller_sql para criar consulta sql no banco de dados       REFERÊNCIA      [Ótimo exemplo de uso das contantes abaixo](https://www.devmedia.com.br/providerflags-no-delphi-atualizando-dados-de-uma-unica-tabela/26689)          pfInUpdate  Usado por SqlDbConnector : As alterações no campo devem ser propagadas para o banco de dados..  pfInWhere  Usado por SqlDbConnector : O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.  pfInKey  Usado por SqlDbConnector : Indica se o campo é parte da Chave Primária.      Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.     pfHidden    pfRefreshOnInsert  Usado por SqlDbConnector : O valor deste campo deve ser atualizado após a inserção.  pfRefreshOnUpdate  Usado por SqlDbConnector : O valor deste campo deve ser atualizado após a atualização.  pfInKeyPrimary  Usado por TDmxScroller_sql : Campo é um campo chave primária e usado na cláusula WHERE de uma instrução de atualização.  pfInAutoIncrement  Usado por TDmxScroller_sql : Campo é um campo autoincremental e usado em uma instrução de atualização. ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TMiProviderFlag"},
     {"title": "mi_rtl_ui_types.TUiTypes.TMiProviderFlags", "text": "O tipo TMiProviderFlags é usado pelo componente TDataSet para gerar instruções sql de acesso ao banco de dados.      REFERÊNCIA:      [providerflags atualizando dados de uma única tabela](https://www.devmedia.com.br/providerflags-no-delphi-atualizando-dados-de-uma-unica-tabela/26689)         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TMiProviderFlags"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommands", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TRCommands"},
     {"title": "mi_rtl_ui_types.TOverflow", "text": "Coordenada X do contato superior esquerdo.   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.XA_Min", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#XA_Min"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.YA_Min", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#YA_Min"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.XB_Max", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#XB_Max"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.YB_Max", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#YB_Max"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.StrCommand", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#StrCommand"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Name", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Name"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Param", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Param"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.KeyCode", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#KeyCode"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.HelpCtx_Hint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#HelpCtx_Hint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.AHelpCtx", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#AHelpCtx"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.State", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#State"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Mb_Bits", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Mb_Bits"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Flags_Buttons", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Flags_Buttons"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL", "text": "O record TStrSQL é usado para padronizar os comandos sql independente do banco de dados.       Os geradores de código não usa string diretamente e sim a variável que contém o comando, isso é necessário porque os bancos de dados não são padronizados.       Exemplo:      Comando para criar um campo Integer com 4 bytes com chave primária e autoincremental:      SqLite = Integer PRIMARY KEY AUTOINCREMENT   PostgreSQL = SERIAL PRIMARY KEY            REFERẼNCIA      [Planilha com sintaxe dos banco de dados aceitos](https://docs.google.com/spreadsheets/d/16jchX4-1KfGUn7c0Qp_GD7YVEbZ0Yh49OjkKYXo0WCE/edit#gid=0)         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.strictt", "text": "O campo strictt é usado no SqLite após a declaração de criação da tabela indicando que deve considerar os tipos de dados   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#strictt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Create", "text": "O comando Create Cria tabela no bancod e dados.      REFERÊNCIA      [sql-createtable](https://www.postgresql.org/docs/11/sql-createtable.html)         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Create"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.table", "text": "Clausula Table. Padrão   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#table"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.if_not_exists", "text": "Clausula indicando que não faça nada caso o nome seguinte exista no banco de dados.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#if_not_exists"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.not_null", "text": "restrição indicando que não pode conter valor nulo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#not_null"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.CreateTable", "text": "O comando CreateTable é usado para criar tabela   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#CreateTable"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.CreateTable_AddColString", "text": "Adiciona um coluna tipo string na clausula Create Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#CreateTable_AddColString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.CreateTable_AddColNumber", "text": "Adiciona um coluna tipo número na clausula Create Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#CreateTable_AddColNumber"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.AlterTable_AddColString", "text": "Adiciona um coluna tipo string na clausula Alter Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#AlterTable_AddColString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.AlterTable_AddColNumber", "text": "Adiciona um coluna tipo número na clausula Alter Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#AlterTable_AddColNumber"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Select", "text": "Clausula Select - Padrão   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Select"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.From", "text": "Clausula from - Padrão   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#From"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.PrimaryKey", "text": "Chave primária número usada com a clausula AutoIncrement.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#PrimaryKey"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.PrimaryKeyComposite", "text": "Chave primária composta usada em create Table.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#PrimaryKeyComposite"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.PrimaryKeyCompositeAlterTable", "text": "Chave primária composta usada em Alter Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#PrimaryKeyCompositeAlterTable"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Unique", "text": "Essa clausula cria um índice com chave única e composta ou não.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Unique"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.AutoIncrement", "text": "Indica que a coluna é numérica e que a sequência é criada automaticamente.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#AutoIncrement"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Longint_PrimaryKey_AutoIncrement", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Longint_PrimaryKey_AutoIncrement"},
     {"title": "mi_rtl_ui_types.byte", "text": "Acoluna é do tipo byte. ( 1 posição)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#byte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.SmallInt", "text": "Acoluna é do tipo smallint. ( 2 posições)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#SmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Longint", "text": "Acoluna é do tipo longint. ( 4 posições)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Longint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Real4", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Real4"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Real8", "text": "A coluna é do tipo single   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Real8"},
     {"title": "mi_rtl_ui_types.char", "text": "Acoluna é do tipo char. ( 1 posição)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#char"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Ansi_String", "text": "Tipo string de tamanho fixo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Ansi_String"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Array_Char", "text": "Tipo array de char de tamanho fixo preenchido com espaço em branco.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Array_Char"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.memo", "text": "Tipo de campo memo no banco de dados   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#memo"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey", "text": "Expressão para criar restrição de chave estrangeira ou seja relacionamentos.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_SetNull", "text": "Caso o registro da tabela pai seja excluído o campo da tabela filha torna-se o valor nulo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_SetNull"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_SetDefault", "text": "Caso o registro da tabela pai seja excluído o campo da tabela filha torna-se o padrão para o campo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_SetDefault"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_Restrict", "text": "Não permite incluir um registro na filha se o mesmo não existir na tabela pai.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_Restrict"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_NoAction", "text": "Não faz nada   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_NoAction"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_Cascade", "text": "Caso um registro da tabela pai seja excluído então deleta todos os registro da tabela filha.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_Cascade"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPointer", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPointer"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asLongint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asLongint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPLongint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPLongint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asWord"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPWord"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asSmallInt", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asSmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPSmallInt", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPSmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asByte", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asByte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPByte", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPByte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asAnsiChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asAnsiChar"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPAnsiChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPAnsiChar"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsString", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPString", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsStr255", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsStr255"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPStr255", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPStr255"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayAnsiChar512", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayAnsiChar512"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayByte", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayByte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArraySmallInt", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArraySmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayLongint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayLongint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayPointer", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayPointer"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayPAnsiChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayPAnsiChar"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsReal", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsReal"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPReal", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPReal"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsDouble", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsDouble"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPDouble", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPDouble"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsRealNum", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsRealNum"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPRealNum", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPRealNum"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsExtended", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsExtended"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPExtended", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPExtended"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asDate", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asDate"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPDate", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPDate"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asSHORTINT", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asSHORTINT"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPSHORTINT", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPSHORTINT"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asCluster", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asCluster"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPCluster", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPCluster"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asBOOLEAN", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asBOOLEAN"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPBOOLEAN", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPBOOLEAN"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asSmallWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asSmallWord"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect", "text": "O registro TViRect usado para calcular retângulo baseado em uma origem e seu visinho na direção de TDirection       NOTA      Exemplo de uso está na unit : mi.rtl.objects.methods.ui.Dmxscroller.test;   O Exemplo foi criado para executar modo console.   Para testar no modo console veja o projeto rtl/TestTviRect         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.A", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#A"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.B", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#B"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.R_New_Limits", "text": "R_new.A deve ser maior ou igual R_New_Limit.A e R_new.B deve ser menor ou igual R_New_Limit.B   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#R_New_Limits"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.R_Neighbor", "text": "O quadro R_Neighbor guarda o retângulo vizinho do novo retângulo a ser gerado   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#R_Neighbor"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.R_New", "text": "O retângulo R_New contém o novo retângulo calculado por GetRec   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#R_New"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Overflow", "text": "Se alguma as coordenadas for negativa overflow=true   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Overflow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.ROverflow", "text": "Inform o lado que gerou overflow   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#ROverflow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.AddCol_overfow", "text": "True = Adiciona uma nova linha ao encontrar overflow.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#AddCol_overfow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.AddRow_overfow", "text": "True = Adiciona uma nova coluna ao encontrar overflow.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#AddRow_overfow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Assign", "text": "A procedure Assign inicia o ponto A e Ponto B com os parâmetros passado    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Assign"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Copy", "text": "A procedure Copy copia o retângulo passodo por R para os pontos A e B    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Copy"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.AssignLimits", "text": "A procedure AssignLimits inicia os limites da janela na qual os retângulo serão calculados    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#AssignLimits"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Adjust_if_not_valid", "text": "    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Adjust_if_not_valid"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_Relative", "text": "A função GetRect_Relative receber o retando em aR_Neighbor e retorna em aR_New um retângulo a direta ou a esquerda ou acima ou abaixo de aR_Neighbor.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_Relative"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_Absolute", "text": "A função GetRect_Absolute calcula um novo retângulo de largura aWidth e altura aHeight vizinho nas quatro direções da origem aR_Neighbor    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_Absolute"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_Absolute", "text": "    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_Absolute"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_AddCol", "text": "A função GetRect_AddCol calcula um retângula a direita do corrente, se passar do limite direito adiciona uma nova linha.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_AddCol"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_AddRow", "text": "A função GetRect_AddRow calcula um retângula a abaixo do corrente e se passar do limite Limit.B.Y adiciona uma nova Coluna.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_AddRow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Set_Max_Ax_e_Max_BY", "text": "    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Set_Max_Ax_e_Max_BY"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.MoveTo", "text": "O método MoveTo move o retangulo para o pornto x,y    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#MoveTo"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.MoveTo_Direction", "text": "O método MoveTo_Direction move o retangula para as direções passada por adirection    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#MoveTo_Direction"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.MoveTo_Direction", "text": "A procedure MoveTo_Direction ajusta o retângulo filho dentro do retângulo limites levando em consideracao as coordenadas geográficas.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#MoveTo_Direction"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect", "text": "A procedure GetRect retorna o ponto calculado    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect"}
]};
